{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "https://dms.amazonaws.com/"
        },
        {
            "url": "http://dms.amazonaws.com/"
        }
    ],
    "x-hasEquivalentPaths": true,
    "info": {
        "contact": {
            "email": "mike.ralphson@gmail.com",
            "name": "Mike Ralphson",
            "url": "https://github.com/mermade/aws2openapi",
            "x-twitter": "PermittedSoc"
        },
        "description": "<fullname>AWS Database Migration Service</fullname> <p>AWS Database Migration Service (AWS DMS) can migrate your data to and from the most widely used commercial and open-source databases such as Oracle, PostgreSQL, Microsoft SQL Server, Amazon Redshift, MariaDB, Amazon Aurora, MySQL, and SAP Adaptive Server Enterprise (ASE). The service supports homogeneous migrations such as Oracle to Oracle, as well as heterogeneous migrations between different database platforms, such as Oracle to MySQL or SQL Server to PostgreSQL.</p> <p>For more information about AWS DMS, see <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/Welcome.html\">What Is AWS Database Migration Service?</a> in the <i>AWS Database Migration User Guide.</i> </p>",
        "license": {
            "name": "Apache 2.0 License",
            "url": "http://www.apache.org/licenses/"
        },
        "termsOfService": "https://aws.amazon.com/service-terms/",
        "title": "AWS Database Migration Service",
        "version": "2016-01-01",
        "x-apiClientRegistration": {
            "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
        },
        "x-apisguru-categories": [
            "cloud"
        ],
        "x-logo": {
            "backgroundColor": "#FFFFFF",
            "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.jpeg"
        },
        "x-origin": [
            {
                "contentType": "application/json",
                "converter": {
                    "url": "https://github.com/mermade/aws2openapi",
                    "version": "1.0.0"
                },
                "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/dms-2016-01-01.normal.json",
                "x-apisguru-direct": true
            }
        ],
        "x-preferred": true,
        "x-providerName": "amazonaws.com",
        "x-release": "v4",
        "x-serviceName": "dms"
    },
    "externalDocs": {
        "description": "Amazon Web Services documentation",
        "url": "https://aws.amazon.com/dms/"
    },
    "security": [
        {
            "hmac": []
        }
    ],
    "paths": {
        "/": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Adds metadata tags to an AWS DMS resource, including replication instance, endpoint, security group, and migration task. These tags can also be used with cost allocation reporting to track cost associated with DMS resources, or used in a Condition statement in an IAM policy for DMS.",
                "operationId": "AddTagsToResource",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {},
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "ResourceArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E",
                                    "Tags": [
                                        {
                                            "Key": "Acount",
                                            "Value": "1633456"
                                        }
                                    ]
                                },
                                "properties": {
                                    "ResourceArn": {
                                        "description": "The Amazon Resource Name (ARN) of the AWS DMS resource the tag is to be added to. AWS DMS resources include a replication instance, endpoint, and a replication task.",
                                        "type": "string"
                                    },
                                    "Tags": {
                                        "description": "The tag to be assigned to the DMS resource.",
                                        "items": {
                                            "description": "<p/>",
                                            "properties": {
                                                "Key": {
                                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "ResourceArn",
                                    "Tags"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateEndpoint": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates an endpoint using the provided settings.",
                "operationId": "CreateEndpoint",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {
                                        "Endpoint": {
                                            "EndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:RAAR3R22XSH46S3PWLC3NJAWKM",
                                            "EndpointIdentifier": "test-endpoint-1",
                                            "EndpointType": "source",
                                            "EngineName": "mysql",
                                            "KmsKeyId": "arn:aws:kms:us-east-1:123456789012:key/4c1731d6-5435-ed4d-be13-d53411a7cfbd",
                                            "Port": 3306,
                                            "ServerName": "mydb.cx1llnox7iyx.us-west-2.rds.amazonaws.com",
                                            "Status": "active",
                                            "Username": "username"
                                        }
                                    },
                                    "properties": {
                                        "Endpoint": {
                                            "description": "The endpoint that was created.",
                                            "properties": {
                                                "CertificateArn": {
                                                    "description": "The Amazon Resource Name (ARN) used for SSL connection to the endpoint.",
                                                    "type": "string"
                                                },
                                                "DatabaseName": {
                                                    "description": "The name of the database at the endpoint.",
                                                    "type": "string"
                                                },
                                                "DmsTransferSettings": {
                                                    "description": "<p>The settings in JSON format for the DMS transfer type of source endpoint. </p> <p>Possible attributes include the following:</p> <ul> <li> <p> <code>serviceAccessRoleArn</code> - The IAM role that has permission to access the Amazon S3 bucket.</p> </li> <li> <p> <code>bucketName</code> - The name of the S3 bucket to use.</p> </li> <li> <p> <code>compressionType</code> - An optional parameter to use GZIP to compress the target files. To use GZIP, set this value to <code>NONE</code> (the default). To keep the files uncompressed, don't use this value. </p> </li> </ul> <p>Shorthand syntax for these attributes is as follows: <code>ServiceAccessRoleArn=string,BucketName=string,CompressionType=string</code> </p> <p>JSON syntax for these attributes is as follows: <code>{ \"ServiceAccessRoleArn\": \"string\", \"BucketName\": \"string\", \"CompressionType\": \"none\"|\"gzip\" } </code> </p>",
                                                    "properties": {
                                                        "BucketName": {
                                                            "description": " The name of the S3 bucket to use. ",
                                                            "type": "string"
                                                        },
                                                        "ServiceAccessRoleArn": {
                                                            "description": " The IAM role that has permission to access the Amazon S3 bucket. ",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "DynamoDbSettings": {
                                                    "description": "The settings for the target DynamoDB database. For more information, see the <code>DynamoDBSettings</code> structure.",
                                                    "properties": {
                                                        "ServiceAccessRoleArn": {
                                                            "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "ServiceAccessRoleArn"
                                                    ],
                                                    "type": "object"
                                                },
                                                "ElasticsearchSettings": {
                                                    "description": "The settings for the Elasticsearch source endpoint. For more information, see the <code>ElasticsearchSettings</code> structure.",
                                                    "properties": {
                                                        "EndpointUri": {
                                                            "description": "The endpoint for the ElasticSearch cluster.",
                                                            "type": "string"
                                                        },
                                                        "ErrorRetryDuration": {
                                                            "description": "The maximum number of seconds that DMS retries failed API requests to the Elasticsearch cluster.",
                                                            "type": "integer"
                                                        },
                                                        "FullLoadErrorPercentage": {
                                                            "description": "The maximum percentage of records that can fail to be written before a full load operation stops. ",
                                                            "type": "integer"
                                                        },
                                                        "ServiceAccessRoleArn": {
                                                            "description": "The Amazon Resource Name (ARN) used by service to access the IAM role.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "ServiceAccessRoleArn",
                                                        "EndpointUri"
                                                    ],
                                                    "type": "object"
                                                },
                                                "EndpointArn": {
                                                    "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                                    "type": "string"
                                                },
                                                "EndpointIdentifier": {
                                                    "description": "The database endpoint identifier. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.",
                                                    "type": "string"
                                                },
                                                "EndpointType": {
                                                    "description": "The type of endpoint.",
                                                    "enum": [
                                                        "source",
                                                        "target"
                                                    ],
                                                    "type": "string"
                                                },
                                                "EngineDisplayName": {
                                                    "description": "The expanded name for the engine name. For example, if the <code>EngineName</code> parameter is \"aurora,\" this value would be \"Amazon Aurora MySQL.\"",
                                                    "type": "string"
                                                },
                                                "EngineName": {
                                                    "description": "The database engine name. Valid values, depending on the EndPointType, include mysql, oracle, postgres, mariadb, aurora, aurora-postgresql, redshift, s3, db2, azuredb, sybase, sybase, dynamodb, mongodb, and sqlserver.",
                                                    "type": "string"
                                                },
                                                "ExternalId": {
                                                    "description": " Value returned by a call to CreateEndpoint that can be used for cross-account validation. Use it on a subsequent call to CreateEndpoint to create the endpoint with a cross-account. ",
                                                    "type": "string"
                                                },
                                                "ExternalTableDefinition": {
                                                    "description": "The external table definition.",
                                                    "type": "string"
                                                },
                                                "ExtraConnectionAttributes": {
                                                    "description": "Additional connection attributes used to connect to the endpoint.",
                                                    "type": "string"
                                                },
                                                "KinesisSettings": {
                                                    "description": "The settings for the Amazon Kinesis source endpoint. For more information, see the <code>KinesisSettings</code> structure.",
                                                    "properties": {
                                                        "MessageFormat": {
                                                            "description": "The output format for the records created on the endpoint. The message format is <code>JSON</code>.",
                                                            "enum": [
                                                                "json"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "ServiceAccessRoleArn": {
                                                            "description": "The Amazon Resource Name (ARN) for the IAM role that DMS uses to write to the Amazon Kinesis data stream.",
                                                            "type": "string"
                                                        },
                                                        "StreamArn": {
                                                            "description": "The Amazon Resource Name (ARN) for the Amazon Kinesis Data Streams endpoint.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "KmsKeyId": {
                                                    "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                                    "type": "string"
                                                },
                                                "MongoDbSettings": {
                                                    "description": "The settings for the MongoDB source endpoint. For more information, see the <code>MongoDbSettings</code> structure.",
                                                    "properties": {
                                                        "AuthMechanism": {
                                                            "description": "<p> The authentication mechanism you use to access the MongoDB source endpoint.</p> <p>Valid values: DEFAULT, MONGODB_CR, SCRAM_SHA_1 </p> <p>DEFAULT – For MongoDB version 2.x, use MONGODB_CR. For MongoDB version 3.x, use SCRAM_SHA_1. This attribute is not used when authType=No.</p>",
                                                            "enum": [
                                                                "default",
                                                                "mongodb_cr",
                                                                "scram_sha_1"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "AuthSource": {
                                                            "description": "<p> The MongoDB database name. This attribute is not used when <code>authType=NO</code>. </p> <p>The default is admin.</p>",
                                                            "type": "string"
                                                        },
                                                        "AuthType": {
                                                            "description": "<p> The authentication type you use to access the MongoDB source endpoint.</p> <p>Valid values: NO, PASSWORD </p> <p>When NO is selected, user name and password parameters are not used and can be empty. </p>",
                                                            "enum": [
                                                                "no",
                                                                "password"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "DatabaseName": {
                                                            "description": " The database name on the MongoDB source endpoint. ",
                                                            "type": "string"
                                                        },
                                                        "DocsToInvestigate": {
                                                            "description": "<p> Indicates the number of documents to preview to determine the document organization. Use this attribute when <code>NestingLevel</code> is set to ONE. </p> <p>Must be a positive value greater than 0. Default value is 1000.</p>",
                                                            "type": "string"
                                                        },
                                                        "ExtractDocId": {
                                                            "description": "<p> Specifies the document ID. Use this attribute when <code>NestingLevel</code> is set to NONE. </p> <p>Default value is false. </p>",
                                                            "type": "string"
                                                        },
                                                        "KmsKeyId": {
                                                            "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                                            "type": "string"
                                                        },
                                                        "NestingLevel": {
                                                            "description": "<p> Specifies either document or table mode. </p> <p>Valid values: NONE, ONE</p> <p>Default value is NONE. Specify NONE to use document mode. Specify ONE to use table mode.</p>",
                                                            "enum": [
                                                                "none",
                                                                "one"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "Password": {
                                                            "description": " The password for the user account you use to access the MongoDB source endpoint. ",
                                                            "format": "password",
                                                            "type": "string"
                                                        },
                                                        "Port": {
                                                            "description": " The port value for the MongoDB source endpoint. ",
                                                            "type": "integer"
                                                        },
                                                        "ServerName": {
                                                            "description": " The name of the server on the MongoDB source endpoint. ",
                                                            "type": "string"
                                                        },
                                                        "Username": {
                                                            "description": "The user name you use to access the MongoDB source endpoint. ",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Port": {
                                                    "description": "The port value used to access the endpoint.",
                                                    "type": "integer"
                                                },
                                                "S3Settings": {
                                                    "description": "The settings for the S3 target endpoint. For more information, see the <code>S3Settings</code> structure.",
                                                    "properties": {
                                                        "BucketFolder": {
                                                            "description": " An optional parameter to set a folder name in the S3 bucket. If provided, tables are created in the path &lt;bucketFolder&gt;/&lt;schema_name&gt;/&lt;table_name&gt;/. If this parameter is not specified, then the path used is &lt;schema_name&gt;/&lt;table_name&gt;/. ",
                                                            "type": "string"
                                                        },
                                                        "BucketName": {
                                                            "description": " The name of the S3 bucket. ",
                                                            "type": "string"
                                                        },
                                                        "CompressionType": {
                                                            "description": " An optional parameter to use GZIP to compress the target files. Set to GZIP to compress the target files. Set to NONE (the default) or do not use to leave the files uncompressed. ",
                                                            "enum": [
                                                                "none",
                                                                "gzip"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "CsvDelimiter": {
                                                            "description": " The delimiter used to separate columns in the source files. The default is a comma. ",
                                                            "type": "string"
                                                        },
                                                        "CsvRowDelimiter": {
                                                            "description": " The delimiter used to separate rows in the source files. The default is a carriage return (\\n). ",
                                                            "type": "string"
                                                        },
                                                        "ExternalTableDefinition": {
                                                            "description": " The external table definition. ",
                                                            "type": "string"
                                                        },
                                                        "ServiceAccessRoleArn": {
                                                            "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "ServerName": {
                                                    "description": "The name of the server at the endpoint.",
                                                    "type": "string"
                                                },
                                                "ServiceAccessRoleArn": {
                                                    "description": "The Amazon Resource Name (ARN) used by the service access IAM role.",
                                                    "type": "string"
                                                },
                                                "SslMode": {
                                                    "description": "<p>The SSL mode used to connect to the endpoint.</p> <p>SSL mode can be one of four values: none, require, verify-ca, verify-full. </p> <p>The default value is none.</p>",
                                                    "enum": [
                                                        "none",
                                                        "require",
                                                        "verify-ca",
                                                        "verify-full"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of the endpoint.",
                                                    "type": "string"
                                                },
                                                "Username": {
                                                    "description": "The user name used to connect to the endpoint.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "KMSKeyNotAccessibleFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceAlreadyExistsFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceQuotaExceededFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidResourceStateFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "AccessDeniedFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "CertificateArn": "",
                                    "DatabaseName": "testdb",
                                    "EndpointIdentifier": "test-endpoint-1",
                                    "EndpointType": "source",
                                    "EngineName": "mysql",
                                    "ExtraConnectionAttributes": "",
                                    "KmsKeyId": "arn:aws:kms:us-east-1:123456789012:key/4c1731d6-5435-ed4d-be13-d53411a7cfbd",
                                    "Password": "pasword",
                                    "Port": 3306,
                                    "ServerName": "mydb.cx1llnox7iyx.us-west-2.rds.amazonaws.com",
                                    "SslMode": "require",
                                    "Tags": [
                                        {
                                            "Key": "Acount",
                                            "Value": "143327655"
                                        }
                                    ],
                                    "Username": "username"
                                },
                                "properties": {
                                    "CertificateArn": {
                                        "description": "The Amazon Resource Name (ARN) for the certificate.",
                                        "type": "string"
                                    },
                                    "DatabaseName": {
                                        "description": "The name of the endpoint database.",
                                        "type": "string"
                                    },
                                    "DmsTransferSettings": {
                                        "description": "<p>The settings in JSON format for the DMS transfer type of source endpoint. </p> <p>Possible attributes include the following:</p> <ul> <li> <p> <code>serviceAccessRoleArn</code> - The IAM role that has permission to access the Amazon S3 bucket.</p> </li> <li> <p> <code>bucketName</code> - The name of the S3 bucket to use.</p> </li> <li> <p> <code>compressionType</code> - An optional parameter to use GZIP to compress the target files. To use GZIP, set this value to <code>NONE</code> (the default). To keep the files uncompressed, don't use this value. </p> </li> </ul> <p>Shorthand syntax for these attributes is as follows: <code>ServiceAccessRoleArn=string,BucketName=string,CompressionType=string</code> </p> <p>JSON syntax for these attributes is as follows: <code>{ \"ServiceAccessRoleArn\": \"string\", \"BucketName\": \"string\", \"CompressionType\": \"none\"|\"gzip\" } </code> </p>",
                                        "properties": {
                                            "BucketName": {
                                                "description": " The name of the S3 bucket to use. ",
                                                "type": "string"
                                            },
                                            "ServiceAccessRoleArn": {
                                                "description": " The IAM role that has permission to access the Amazon S3 bucket. ",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "DynamoDbSettings": {
                                        "description": "Settings in JSON format for the target Amazon DynamoDB endpoint. For more information about the available settings, see <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.DynamoDB.html\">Using Object Mapping to Migrate Data to DynamoDB</a> in the <i>AWS Database Migration Service User Guide.</i> ",
                                        "properties": {
                                            "ServiceAccessRoleArn": {
                                                "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "ServiceAccessRoleArn"
                                        ],
                                        "type": "object"
                                    },
                                    "ElasticsearchSettings": {
                                        "description": "Settings in JSON format for the target Elasticsearch endpoint. For more information about the available settings, see <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Elasticsearch.html#CHAP_Target.Elasticsearch.Configuration\">Extra Connection Attributes When Using Elasticsearch as a Target for AWS DMS</a> in the <i>AWS Database Migration User Guide.</i> ",
                                        "properties": {
                                            "EndpointUri": {
                                                "description": "The endpoint for the ElasticSearch cluster.",
                                                "type": "string"
                                            },
                                            "ErrorRetryDuration": {
                                                "description": "The maximum number of seconds that DMS retries failed API requests to the Elasticsearch cluster.",
                                                "type": "integer"
                                            },
                                            "FullLoadErrorPercentage": {
                                                "description": "The maximum percentage of records that can fail to be written before a full load operation stops. ",
                                                "type": "integer"
                                            },
                                            "ServiceAccessRoleArn": {
                                                "description": "The Amazon Resource Name (ARN) used by service to access the IAM role.",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "ServiceAccessRoleArn",
                                            "EndpointUri"
                                        ],
                                        "type": "object"
                                    },
                                    "EndpointIdentifier": {
                                        "description": "The database endpoint identifier. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.",
                                        "type": "string"
                                    },
                                    "EndpointType": {
                                        "description": "The type of endpoint.",
                                        "enum": [
                                            "source",
                                            "target"
                                        ],
                                        "type": "string"
                                    },
                                    "EngineName": {
                                        "description": "The type of engine for the endpoint. Valid values, depending on the <code>EndPointType</code> value, include <code>mysql</code>, <code>oracle</code>, <code>postgres</code>, <code>mariadb</code>, <code>aurora</code>, <code>aurora-postgresql</code>, <code>redshift</code>, <code>s3</code>, <code>db2</code>, <code>azuredb</code>, <code>sybase</code>, <code>dynamodb</code>, <code>mongodb</code>, and <code>sqlserver</code>.",
                                        "type": "string"
                                    },
                                    "ExternalTableDefinition": {
                                        "description": "The external table definition. ",
                                        "type": "string"
                                    },
                                    "ExtraConnectionAttributes": {
                                        "description": "Additional attributes associated with the connection.",
                                        "type": "string"
                                    },
                                    "KinesisSettings": {
                                        "description": "Settings in JSON format for the target Amazon Kinesis Data Streams endpoint. For more information about the available settings, see <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Kinesis.html#CHAP_Target.Kinesis.ObjectMapping \">Using Object Mapping to Migrate Data to a Kinesis Data Stream</a> in the <i>AWS Database Migration User Guide.</i> ",
                                        "properties": {
                                            "MessageFormat": {
                                                "description": "The output format for the records created on the endpoint. The message format is <code>JSON</code>.",
                                                "enum": [
                                                    "json"
                                                ],
                                                "type": "string"
                                            },
                                            "ServiceAccessRoleArn": {
                                                "description": "The Amazon Resource Name (ARN) for the IAM role that DMS uses to write to the Amazon Kinesis data stream.",
                                                "type": "string"
                                            },
                                            "StreamArn": {
                                                "description": "The Amazon Resource Name (ARN) for the Amazon Kinesis Data Streams endpoint.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "KmsKeyId": {
                                        "description": "The AWS KMS key identifier to use to encrypt the connection parameters. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                        "type": "string"
                                    },
                                    "MongoDbSettings": {
                                        "description": "Settings in JSON format for the source MongoDB endpoint. For more information about the available settings, see the configuration properties section in <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.MongoDB.html\"> Using MongoDB as a Target for AWS Database Migration Service</a> in the <i>AWS Database Migration Service User Guide.</i> ",
                                        "properties": {
                                            "AuthMechanism": {
                                                "description": "<p> The authentication mechanism you use to access the MongoDB source endpoint.</p> <p>Valid values: DEFAULT, MONGODB_CR, SCRAM_SHA_1 </p> <p>DEFAULT – For MongoDB version 2.x, use MONGODB_CR. For MongoDB version 3.x, use SCRAM_SHA_1. This attribute is not used when authType=No.</p>",
                                                "enum": [
                                                    "default",
                                                    "mongodb_cr",
                                                    "scram_sha_1"
                                                ],
                                                "type": "string"
                                            },
                                            "AuthSource": {
                                                "description": "<p> The MongoDB database name. This attribute is not used when <code>authType=NO</code>. </p> <p>The default is admin.</p>",
                                                "type": "string"
                                            },
                                            "AuthType": {
                                                "description": "<p> The authentication type you use to access the MongoDB source endpoint.</p> <p>Valid values: NO, PASSWORD </p> <p>When NO is selected, user name and password parameters are not used and can be empty. </p>",
                                                "enum": [
                                                    "no",
                                                    "password"
                                                ],
                                                "type": "string"
                                            },
                                            "DatabaseName": {
                                                "description": " The database name on the MongoDB source endpoint. ",
                                                "type": "string"
                                            },
                                            "DocsToInvestigate": {
                                                "description": "<p> Indicates the number of documents to preview to determine the document organization. Use this attribute when <code>NestingLevel</code> is set to ONE. </p> <p>Must be a positive value greater than 0. Default value is 1000.</p>",
                                                "type": "string"
                                            },
                                            "ExtractDocId": {
                                                "description": "<p> Specifies the document ID. Use this attribute when <code>NestingLevel</code> is set to NONE. </p> <p>Default value is false. </p>",
                                                "type": "string"
                                            },
                                            "KmsKeyId": {
                                                "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                                "type": "string"
                                            },
                                            "NestingLevel": {
                                                "description": "<p> Specifies either document or table mode. </p> <p>Valid values: NONE, ONE</p> <p>Default value is NONE. Specify NONE to use document mode. Specify ONE to use table mode.</p>",
                                                "enum": [
                                                    "none",
                                                    "one"
                                                ],
                                                "type": "string"
                                            },
                                            "Password": {
                                                "description": " The password for the user account you use to access the MongoDB source endpoint. ",
                                                "format": "password",
                                                "type": "string"
                                            },
                                            "Port": {
                                                "description": " The port value for the MongoDB source endpoint. ",
                                                "type": "integer"
                                            },
                                            "ServerName": {
                                                "description": " The name of the server on the MongoDB source endpoint. ",
                                                "type": "string"
                                            },
                                            "Username": {
                                                "description": "The user name you use to access the MongoDB source endpoint. ",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Password": {
                                        "description": "The password to be used to log in to the endpoint database.",
                                        "format": "password",
                                        "type": "string"
                                    },
                                    "Port": {
                                        "description": "The port used by the endpoint database.",
                                        "type": "integer"
                                    },
                                    "S3Settings": {
                                        "description": "Settings in JSON format for the target Amazon S3 endpoint. For more information about the available settings, see <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html#CHAP_Target.S3.Configuring\">Extra Connection Attributes When Using Amazon S3 as a Target for AWS DMS</a> in the <i>AWS Database Migration Service User Guide.</i> ",
                                        "properties": {
                                            "BucketFolder": {
                                                "description": " An optional parameter to set a folder name in the S3 bucket. If provided, tables are created in the path &lt;bucketFolder&gt;/&lt;schema_name&gt;/&lt;table_name&gt;/. If this parameter is not specified, then the path used is &lt;schema_name&gt;/&lt;table_name&gt;/. ",
                                                "type": "string"
                                            },
                                            "BucketName": {
                                                "description": " The name of the S3 bucket. ",
                                                "type": "string"
                                            },
                                            "CompressionType": {
                                                "description": " An optional parameter to use GZIP to compress the target files. Set to GZIP to compress the target files. Set to NONE (the default) or do not use to leave the files uncompressed. ",
                                                "enum": [
                                                    "none",
                                                    "gzip"
                                                ],
                                                "type": "string"
                                            },
                                            "CsvDelimiter": {
                                                "description": " The delimiter used to separate columns in the source files. The default is a comma. ",
                                                "type": "string"
                                            },
                                            "CsvRowDelimiter": {
                                                "description": " The delimiter used to separate rows in the source files. The default is a carriage return (\\n). ",
                                                "type": "string"
                                            },
                                            "ExternalTableDefinition": {
                                                "description": " The external table definition. ",
                                                "type": "string"
                                            },
                                            "ServiceAccessRoleArn": {
                                                "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "ServerName": {
                                        "description": "The name of the server where the endpoint database resides.",
                                        "type": "string"
                                    },
                                    "ServiceAccessRoleArn": {
                                        "description": " The Amazon Resource Name (ARN) for the service access role that you want to use to create the endpoint. ",
                                        "type": "string"
                                    },
                                    "SslMode": {
                                        "description": "The Secure Sockets Layer (SSL) mode to use for the SSL connection. The SSL mode can be one of four values: <code>none</code>, <code>require</code>, <code>verify-ca</code>, <code>verify-full</code>. The default value is <code>none</code>.",
                                        "enum": [
                                            "none",
                                            "require",
                                            "verify-ca",
                                            "verify-full"
                                        ],
                                        "type": "string"
                                    },
                                    "Tags": {
                                        "description": "Tags to be added to the endpoint.",
                                        "items": {
                                            "description": "<p/>",
                                            "properties": {
                                                "Key": {
                                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Username": {
                                        "description": "The user name to be used to log in to the endpoint database.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "EndpointIdentifier",
                                    "EndpointType",
                                    "EngineName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateEventSubscription": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p> Creates an AWS DMS event notification subscription. </p> <p>You can specify the type of source (<code>SourceType</code>) you want to be notified of, provide a list of AWS DMS source IDs (<code>SourceIds</code>) that triggers the events, and provide a list of event categories (<code>EventCategories</code>) for events you want to be notified of. If you specify both the <code>SourceType</code> and <code>SourceIds</code>, such as <code>SourceType = replication-instance</code> and <code>SourceIdentifier = my-replinstance</code>, you will be notified of all the replication instance events for the specified source. If you specify a <code>SourceType</code> but don't specify a <code>SourceIdentifier</code>, you receive notice of the events for that source type for all your AWS DMS sources. If you don't specify either <code>SourceType</code> nor <code>SourceIdentifier</code>, you will be notified of events generated from all AWS DMS sources belonging to your customer account.</p> <p>For more information about AWS DMS events, see <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html\">Working with Events and Notifications</a> in the <i>AWS Database Migration Service User Guide.</i> </p>",
                "operationId": "CreateEventSubscription",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "properties": {
                                        "EventSubscription": {
                                            "description": "The event subscription that was created.",
                                            "properties": {
                                                "CustSubscriptionId": {
                                                    "description": "The AWS DMS event notification subscription Id.",
                                                    "type": "string"
                                                },
                                                "CustomerAwsId": {
                                                    "description": "The AWS customer account associated with the AWS DMS event notification subscription.",
                                                    "type": "string"
                                                },
                                                "Enabled": {
                                                    "description": "Boolean value that indicates if the event subscription is enabled.",
                                                    "type": "boolean"
                                                },
                                                "EventCategoriesList": {
                                                    "description": "A lists of event categories.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "SnsTopicArn": {
                                                    "description": "The topic ARN of the AWS DMS event notification subscription.",
                                                    "type": "string"
                                                },
                                                "SourceIdsList": {
                                                    "description": "A list of source Ids for the event subscription.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "SourceType": {
                                                    "description": "<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | replication-server | security-group | migration-task</p>",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "<p>The status of the AWS DMS event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that AWS DMS no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                                                    "type": "string"
                                                },
                                                "SubscriptionCreationTime": {
                                                    "description": "The time the RDS event notification subscription was created.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceQuotaExceededFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceAlreadyExistsFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "SNSInvalidTopicFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "SNSNoAuthorizationFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "Enabled": {
                                        "description": " A Boolean value; set to <code>true</code> to activate the subscription, or set to <code>false</code> to create the subscription but not activate it. ",
                                        "type": "boolean"
                                    },
                                    "EventCategories": {
                                        "description": " A list of event categories for a source type that you want to subscribe to. You can see a list of the categories for a given source type by calling the <code>DescribeEventCategories</code> action or in the topic <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html\">Working with Events and Notifications</a> in the <i>AWS Database Migration Service User Guide.</i> ",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "SnsTopicArn": {
                                        "description": " The Amazon Resource Name (ARN) of the Amazon SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it. ",
                                        "type": "string"
                                    },
                                    "SourceIds": {
                                        "description": " The list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it cannot end with a hyphen or contain two consecutive hyphens. ",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "SourceType": {
                                        "description": "<p> The type of AWS DMS resource that generates the events. For example, if you want to be notified of events generated by a replication instance, you set this parameter to <code>replication-instance</code>. If this value is not specified, all events are returned. </p> <p>Valid values: replication-instance | migration-task</p>",
                                        "type": "string"
                                    },
                                    "SubscriptionName": {
                                        "description": "<p>The name of the AWS DMS event notification subscription. </p> <p>Constraints: The name must be less than 255 characters. </p>",
                                        "type": "string"
                                    },
                                    "Tags": {
                                        "description": "A tag to be attached to the event subscription.",
                                        "items": {
                                            "description": "<p/>",
                                            "properties": {
                                                "Key": {
                                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "SubscriptionName",
                                    "SnsTopicArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateReplicationInstance": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates the replication instance using the specified parameters.",
                "operationId": "CreateReplicationInstance",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {
                                        "ReplicationInstance": {
                                            "AllocatedStorage": 5,
                                            "AutoMinorVersionUpgrade": true,
                                            "EngineVersion": "1.5.0",
                                            "KmsKeyId": "arn:aws:kms:us-east-1:123456789012:key/4c1731d6-5435-ed4d-be13-d53411a7cfbd",
                                            "PendingModifiedValues": {},
                                            "PreferredMaintenanceWindow": "sun:06:00-sun:14:00",
                                            "PubliclyAccessible": true,
                                            "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
                                            "ReplicationInstanceClass": "dms.t2.micro",
                                            "ReplicationInstanceIdentifier": "test-rep-1",
                                            "ReplicationInstanceStatus": "creating",
                                            "ReplicationSubnetGroup": {
                                                "ReplicationSubnetGroupDescription": "default",
                                                "ReplicationSubnetGroupIdentifier": "default",
                                                "SubnetGroupStatus": "Complete",
                                                "Subnets": [
                                                    {
                                                        "SubnetAvailabilityZone": {
                                                            "Name": "us-east-1d"
                                                        },
                                                        "SubnetIdentifier": "subnet-f6dd91af",
                                                        "SubnetStatus": "Active"
                                                    },
                                                    {
                                                        "SubnetAvailabilityZone": {
                                                            "Name": "us-east-1b"
                                                        },
                                                        "SubnetIdentifier": "subnet-3605751d",
                                                        "SubnetStatus": "Active"
                                                    },
                                                    {
                                                        "SubnetAvailabilityZone": {
                                                            "Name": "us-east-1c"
                                                        },
                                                        "SubnetIdentifier": "subnet-c2daefb5",
                                                        "SubnetStatus": "Active"
                                                    },
                                                    {
                                                        "SubnetAvailabilityZone": {
                                                            "Name": "us-east-1e"
                                                        },
                                                        "SubnetIdentifier": "subnet-85e90cb8",
                                                        "SubnetStatus": "Active"
                                                    }
                                                ],
                                                "VpcId": "vpc-6741a603"
                                            }
                                        }
                                    },
                                    "properties": {
                                        "ReplicationInstance": {
                                            "description": "The replication instance that was created.",
                                            "properties": {
                                                "AllocatedStorage": {
                                                    "description": "The amount of storage (in gigabytes) that is allocated for the replication instance.",
                                                    "type": "integer"
                                                },
                                                "AutoMinorVersionUpgrade": {
                                                    "description": "Boolean value indicating if minor version upgrades will be automatically applied to the instance.",
                                                    "type": "boolean"
                                                },
                                                "AvailabilityZone": {
                                                    "description": "The Availability Zone for the instance.",
                                                    "type": "string"
                                                },
                                                "DnsNameServers": {
                                                    "description": "The DNS name servers for the replication instance.",
                                                    "type": "string"
                                                },
                                                "EngineVersion": {
                                                    "description": "The engine version number of the replication instance.",
                                                    "type": "string"
                                                },
                                                "FreeUntil": {
                                                    "description": " The expiration date of the free replication instance that is part of the Free DMS program. ",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "InstanceCreateTime": {
                                                    "description": "The time the replication instance was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "KmsKeyId": {
                                                    "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                                    "type": "string"
                                                },
                                                "MultiAZ": {
                                                    "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. ",
                                                    "type": "boolean"
                                                },
                                                "PendingModifiedValues": {
                                                    "description": "The pending modification values.",
                                                    "properties": {
                                                        "AllocatedStorage": {
                                                            "description": "The amount of storage (in gigabytes) that is allocated for the replication instance.",
                                                            "type": "integer"
                                                        },
                                                        "EngineVersion": {
                                                            "description": "The engine version number of the replication instance.",
                                                            "type": "string"
                                                        },
                                                        "MultiAZ": {
                                                            "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. ",
                                                            "type": "boolean"
                                                        },
                                                        "ReplicationInstanceClass": {
                                                            "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "PreferredMaintenanceWindow": {
                                                    "description": "The maintenance window times for the replication instance.",
                                                    "type": "string"
                                                },
                                                "PubliclyAccessible": {
                                                    "description": " Specifies the accessibility options for the replication instance. A value of <code>true</code> represents an instance with a public IP address. A value of <code>false</code> represents an instance with a private IP address. The default value is <code>true</code>. ",
                                                    "type": "boolean"
                                                },
                                                "ReplicationInstanceArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                                    "type": "string"
                                                },
                                                "ReplicationInstanceClass": {
                                                    "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                                                    "type": "string"
                                                },
                                                "ReplicationInstanceIdentifier": {
                                                    "description": "<p>The replication instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>myrepinstance</code> </p>",
                                                    "type": "string"
                                                },
                                                "ReplicationInstancePrivateIpAddress": {
                                                    "description": "The private IP address of the replication instance.",
                                                    "type": "string"
                                                },
                                                "ReplicationInstancePrivateIpAddresses": {
                                                    "description": "The private IP address of the replication instance.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ReplicationInstancePublicIpAddress": {
                                                    "description": "The public IP address of the replication instance.",
                                                    "type": "string"
                                                },
                                                "ReplicationInstancePublicIpAddresses": {
                                                    "description": "The public IP address of the replication instance.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ReplicationInstanceStatus": {
                                                    "description": "The status of the replication instance.",
                                                    "type": "string"
                                                },
                                                "ReplicationSubnetGroup": {
                                                    "description": "The subnet group for the replication instance.",
                                                    "properties": {
                                                        "ReplicationSubnetGroupDescription": {
                                                            "description": "The description of the replication subnet group.",
                                                            "type": "string"
                                                        },
                                                        "ReplicationSubnetGroupIdentifier": {
                                                            "description": "The identifier of the replication instance subnet group.",
                                                            "type": "string"
                                                        },
                                                        "SubnetGroupStatus": {
                                                            "description": "The status of the subnet group.",
                                                            "type": "string"
                                                        },
                                                        "Subnets": {
                                                            "description": "The subnets that are in the subnet group.",
                                                            "items": {
                                                                "description": "<p/>",
                                                                "properties": {
                                                                    "SubnetAvailabilityZone": {
                                                                        "description": "The Availability Zone of the subnet.",
                                                                        "properties": {
                                                                            "Name": {
                                                                                "description": "The name of the availability zone.",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "SubnetIdentifier": {
                                                                        "description": "The subnet identifier.",
                                                                        "type": "string"
                                                                    },
                                                                    "SubnetStatus": {
                                                                        "description": "The status of the subnet.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "VpcId": {
                                                            "description": "The ID of the VPC.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "SecondaryAvailabilityZone": {
                                                    "description": "The availability zone of the standby replication instance in a Multi-AZ deployment.",
                                                    "type": "string"
                                                },
                                                "VpcSecurityGroups": {
                                                    "description": "The VPC security group for the instance.",
                                                    "items": {
                                                        "description": "<p/>",
                                                        "properties": {
                                                            "Status": {
                                                                "description": "The status of the VPC security group.",
                                                                "type": "string"
                                                            },
                                                            "VpcSecurityGroupId": {
                                                                "description": "The VPC security group Id.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AccessDeniedFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceAlreadyExistsFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InsufficientResourceCapacityFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceQuotaExceededFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "StorageQuotaExceededFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "ReplicationSubnetGroupDoesNotCoverEnoughAZs",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "487": {
                        "description": "InvalidResourceStateFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "488": {
                        "description": "InvalidSubnet",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "489": {
                        "description": "KMSKeyNotAccessibleFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "AllocatedStorage": 123,
                                    "AutoMinorVersionUpgrade": true,
                                    "AvailabilityZone": "",
                                    "EngineVersion": "",
                                    "KmsKeyId": "",
                                    "MultiAZ": true,
                                    "PreferredMaintenanceWindow": "",
                                    "PubliclyAccessible": true,
                                    "ReplicationInstanceClass": "",
                                    "ReplicationInstanceIdentifier": "",
                                    "ReplicationSubnetGroupIdentifier": "",
                                    "Tags": [
                                        {
                                            "Key": "string",
                                            "Value": "string"
                                        }
                                    ],
                                    "VpcSecurityGroupIds": []
                                },
                                "properties": {
                                    "AllocatedStorage": {
                                        "description": "The amount of storage (in gigabytes) to be initially allocated for the replication instance.",
                                        "type": "integer"
                                    },
                                    "AutoMinorVersionUpgrade": {
                                        "description": "<p>Indicates that minor engine upgrades will be applied automatically to the replication instance during the maintenance window.</p> <p>Default: <code>true</code> </p>",
                                        "type": "boolean"
                                    },
                                    "AvailabilityZone": {
                                        "description": "<p>The EC2 Availability Zone that the replication instance will be created in.</p> <p>Default: A random, system-chosen Availability Zone in the endpoint's region.</p> <p> Example: <code>us-east-1d</code> </p>",
                                        "type": "string"
                                    },
                                    "DnsNameServers": {
                                        "description": "A list of DNS name servers supported for the replication instance.",
                                        "type": "string"
                                    },
                                    "EngineVersion": {
                                        "description": "The engine version number of the replication instance.",
                                        "type": "string"
                                    },
                                    "KmsKeyId": {
                                        "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                        "type": "string"
                                    },
                                    "MultiAZ": {
                                        "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. ",
                                        "type": "boolean"
                                    },
                                    "PreferredMaintenanceWindow": {
                                        "description": "<p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p> <p> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>Default: A 30-minute window selected at random from an 8-hour block of time per region, occurring on a random day of the week.</p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun</p> <p>Constraints: Minimum 30-minute window.</p>",
                                        "type": "string"
                                    },
                                    "PubliclyAccessible": {
                                        "description": " Specifies the accessibility options for the replication instance. A value of <code>true</code> represents an instance with a public IP address. A value of <code>false</code> represents an instance with a private IP address. The default value is <code>true</code>. ",
                                        "type": "boolean"
                                    },
                                    "ReplicationInstanceClass": {
                                        "description": "<p>The compute and memory capacity of the replication instance as specified by the replication instance class.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                                        "type": "string"
                                    },
                                    "ReplicationInstanceIdentifier": {
                                        "description": "<p>The replication instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>myrepinstance</code> </p>",
                                        "type": "string"
                                    },
                                    "ReplicationSubnetGroupIdentifier": {
                                        "description": "A subnet group to associate with the replication instance.",
                                        "type": "string"
                                    },
                                    "Tags": {
                                        "description": "Tags to be associated with the replication instance.",
                                        "items": {
                                            "description": "<p/>",
                                            "properties": {
                                                "Key": {
                                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "VpcSecurityGroupIds": {
                                        "description": " Specifies the VPC security group to be used with the replication instance. The VPC security group must work with the VPC containing the replication instance. ",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "ReplicationInstanceIdentifier",
                                    "ReplicationInstanceClass"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateReplicationSubnetGroup": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a replication subnet group given a list of the subnet IDs in a VPC.",
                "operationId": "CreateReplicationSubnetGroup",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {
                                        "ReplicationSubnetGroup": {}
                                    },
                                    "properties": {
                                        "ReplicationSubnetGroup": {
                                            "description": "The replication subnet group that was created.",
                                            "properties": {
                                                "ReplicationSubnetGroupDescription": {
                                                    "description": "The description of the replication subnet group.",
                                                    "type": "string"
                                                },
                                                "ReplicationSubnetGroupIdentifier": {
                                                    "description": "The identifier of the replication instance subnet group.",
                                                    "type": "string"
                                                },
                                                "SubnetGroupStatus": {
                                                    "description": "The status of the subnet group.",
                                                    "type": "string"
                                                },
                                                "Subnets": {
                                                    "description": "The subnets that are in the subnet group.",
                                                    "items": {
                                                        "description": "<p/>",
                                                        "properties": {
                                                            "SubnetAvailabilityZone": {
                                                                "description": "The Availability Zone of the subnet.",
                                                                "properties": {
                                                                    "Name": {
                                                                        "description": "The name of the availability zone.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "SubnetIdentifier": {
                                                                "description": "The subnet identifier.",
                                                                "type": "string"
                                                            },
                                                            "SubnetStatus": {
                                                                "description": "The status of the subnet.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "VpcId": {
                                                    "description": "The ID of the VPC.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AccessDeniedFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceAlreadyExistsFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceQuotaExceededFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ReplicationSubnetGroupDoesNotCoverEnoughAZs",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "InvalidSubnet",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "ReplicationSubnetGroupDescription": "US West subnet group",
                                    "ReplicationSubnetGroupIdentifier": "us-west-2ab-vpc-215ds366",
                                    "SubnetIds": [
                                        "subnet-e145356n",
                                        "subnet-58f79200"
                                    ],
                                    "Tags": [
                                        {
                                            "Key": "Acount",
                                            "Value": "145235"
                                        }
                                    ]
                                },
                                "properties": {
                                    "ReplicationSubnetGroupDescription": {
                                        "description": "The description for the subnet group.",
                                        "type": "string"
                                    },
                                    "ReplicationSubnetGroupIdentifier": {
                                        "description": "<p>The name for the replication subnet group. This value is stored as a lowercase string.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters, periods, spaces, underscores, or hyphens. Must not be \"default\".</p> <p>Example: <code>mySubnetgroup</code> </p>",
                                        "type": "string"
                                    },
                                    "SubnetIds": {
                                        "description": "The EC2 subnet IDs for the subnet group.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "Tags": {
                                        "description": "The tag to be assigned to the subnet group.",
                                        "items": {
                                            "description": "<p/>",
                                            "properties": {
                                                "Key": {
                                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "ReplicationSubnetGroupIdentifier",
                                    "ReplicationSubnetGroupDescription",
                                    "SubnetIds"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateReplicationTask": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a replication task using the specified parameters.",
                "operationId": "CreateReplicationTask",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {
                                        "ReplicationTask": {
                                            "MigrationType": "full-load",
                                            "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
                                            "ReplicationTaskArn": "arn:aws:dms:us-east-1:123456789012:task:OEAMB3NXSTZ6LFYZFEPPBBXPYM",
                                            "ReplicationTaskCreationDate": "2016-12-14T18:25:43Z",
                                            "ReplicationTaskIdentifier": "task1",
                                            "ReplicationTaskSettings": "{\"TargetMetadata\":{\"TargetSchema\":\"\",\"SupportLobs\":true,\"FullLobMode\":true,\"LobChunkSize\":64,\"LimitedSizeLobMode\":false,\"LobMaxSize\":0},\"FullLoadSettings\":{\"FullLoadEnabled\":true,\"ApplyChangesEnabled\":false,\"TargetTablePrepMode\":\"DROP_AND_CREATE\",\"CreatePkAfterFullLoad\":false,\"StopTaskCachedChangesApplied\":false,\"StopTaskCachedChangesNotApplied\":false,\"ResumeEnabled\":false,\"ResumeMinTableSize\":100000,\"ResumeOnlyClusteredPKTables\":true,\"MaxFullLoadSubTasks\":8,\"TransactionConsistencyTimeout\":600,\"CommitRate\":10000},\"Logging\":{\"EnableLogging\":false}}",
                                            "SourceEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ZW5UAN6P4E77EC7YWHK4RZZ3BE",
                                            "Status": "creating",
                                            "TableMappings": "file://mappingfile.json",
                                            "TargetEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E"
                                        }
                                    },
                                    "properties": {
                                        "ReplicationTask": {
                                            "description": "The replication task that was created.",
                                            "properties": {
                                                "CdcStartPosition": {
                                                    "description": "<p>Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p> The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position \"checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93\"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p>",
                                                    "type": "string"
                                                },
                                                "CdcStopPosition": {
                                                    "description": "<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:3018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 3018-02-09T12:12:12 “</p>",
                                                    "type": "string"
                                                },
                                                "LastFailureMessage": {
                                                    "description": "The last error (failure) message generated for the replication instance.",
                                                    "type": "string"
                                                },
                                                "MigrationType": {
                                                    "description": "The type of migration.",
                                                    "enum": [
                                                        "full-load",
                                                        "cdc",
                                                        "full-load-and-cdc"
                                                    ],
                                                    "type": "string"
                                                },
                                                "RecoveryCheckpoint": {
                                                    "description": "Indicates the last checkpoint that occurred during a change data capture (CDC) operation. You can provide this value to the <code>CdcStartPosition</code> parameter to start a CDC operation that begins at that checkpoint.",
                                                    "type": "string"
                                                },
                                                "ReplicationInstanceArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the replication task.",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskCreationDate": {
                                                    "description": "The date the replication task was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskIdentifier": {
                                                    "description": "<p>The user-assigned replication task identifier or name.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskSettings": {
                                                    "description": "The settings for the replication task.",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskStartDate": {
                                                    "description": "The date the replication task is scheduled to start.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskStats": {
                                                    "description": "The statistics for the task, including elapsed time, tables loaded, and table errors.",
                                                    "properties": {
                                                        "ElapsedTimeMillis": {
                                                            "description": "The elapsed time of the task, in milliseconds.",
                                                            "type": "integer"
                                                        },
                                                        "FullLoadProgressPercent": {
                                                            "description": "The percent complete for the full load migration task.",
                                                            "type": "integer"
                                                        },
                                                        "TablesErrored": {
                                                            "description": "The number of errors that have occurred during this task.",
                                                            "type": "integer"
                                                        },
                                                        "TablesLoaded": {
                                                            "description": "The number of tables loaded for this task.",
                                                            "type": "integer"
                                                        },
                                                        "TablesLoading": {
                                                            "description": "The number of tables currently loading for this task.",
                                                            "type": "integer"
                                                        },
                                                        "TablesQueued": {
                                                            "description": "The number of tables queued for this task.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "SourceEndpointArn": {
                                                    "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of the replication task.",
                                                    "type": "string"
                                                },
                                                "StopReason": {
                                                    "description": "The reason the replication task was stopped.",
                                                    "type": "string"
                                                },
                                                "TableMappings": {
                                                    "description": "Table mappings specified in the task.",
                                                    "type": "string"
                                                },
                                                "TargetEndpointArn": {
                                                    "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AccessDeniedFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidResourceStateFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceAlreadyExistsFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "KMSKeyNotAccessibleFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ResourceQuotaExceededFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "CdcStartTime": "2016-12-14T18:25:43Z",
                                    "MigrationType": "full-load",
                                    "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
                                    "ReplicationTaskIdentifier": "task1",
                                    "ReplicationTaskSettings": "",
                                    "SourceEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ZW5UAN6P4E77EC7YWHK4RZZ3BE",
                                    "TableMappings": "file://mappingfile.json",
                                    "Tags": [
                                        {
                                            "Key": "Acount",
                                            "Value": "24352226"
                                        }
                                    ],
                                    "TargetEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E"
                                },
                                "properties": {
                                    "CdcStartPosition": {
                                        "description": "<p>Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p> The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position \"checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93\"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p>",
                                        "type": "string"
                                    },
                                    "CdcStartTime": {
                                        "description": "<p>Indicates the start time for a change data capture (CDC) operation. Use either CdcStartTime or CdcStartPosition to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p>Timestamp Example: --cdc-start-time “2018-03-08T12:12:12”</p>",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "CdcStopPosition": {
                                        "description": "<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:3018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 3018-02-09T12:12:12 “</p>",
                                        "type": "string"
                                    },
                                    "MigrationType": {
                                        "description": "The migration type.",
                                        "enum": [
                                            "full-load",
                                            "cdc",
                                            "full-load-and-cdc"
                                        ],
                                        "type": "string"
                                    },
                                    "ReplicationInstanceArn": {
                                        "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                        "type": "string"
                                    },
                                    "ReplicationTaskIdentifier": {
                                        "description": "<p>The replication task identifier.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "ReplicationTaskSettings": {
                                        "description": "Settings for the task, such as target metadata settings. For a complete list of task settings, see <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.CustomizingTasks.TaskSettings.html\">Task Settings for AWS Database Migration Service Tasks</a> in the <i>AWS Database Migration User Guide.</i> ",
                                        "type": "string"
                                    },
                                    "SourceEndpointArn": {
                                        "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                        "type": "string"
                                    },
                                    "TableMappings": {
                                        "description": "<p>When using the AWS CLI or boto3, provide the path of the JSON file that contains the table mappings. Precede the path with \"file://\". When working with the DMS API, provide the JSON as the parameter value.</p> <p>For example, --table-mappings file://mappingfile.json</p>",
                                        "type": "string"
                                    },
                                    "Tags": {
                                        "description": "Tags to be added to the replication instance.",
                                        "items": {
                                            "description": "<p/>",
                                            "properties": {
                                                "Key": {
                                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "TargetEndpointArn": {
                                        "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ReplicationTaskIdentifier",
                                    "SourceEndpointArn",
                                    "TargetEndpointArn",
                                    "ReplicationInstanceArn",
                                    "MigrationType",
                                    "TableMappings"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteCertificate": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes the specified certificate. ",
                "operationId": "DeleteCertificate",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "Certificate": {}
                                    },
                                    "properties": {
                                        "Certificate": {
                                            "description": "The Secure Sockets Layer (SSL) certificate.",
                                            "properties": {
                                                "CertificateArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the certificate.",
                                                    "type": "string"
                                                },
                                                "CertificateCreationDate": {
                                                    "description": "The date that the certificate was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "CertificateIdentifier": {
                                                    "description": "The customer-assigned name of the certificate. Valid characters are A-z and 0-9.",
                                                    "type": "string"
                                                },
                                                "CertificateOwner": {
                                                    "description": "The owner of the certificate.",
                                                    "type": "string"
                                                },
                                                "CertificatePem": {
                                                    "description": "The contents of the .pem X.509 certificate file for the certificate.",
                                                    "type": "string"
                                                },
                                                "CertificateWallet": {
                                                    "description": "The location of the imported Oracle Wallet certificate for use with SSL.",
                                                    "type": "string"
                                                },
                                                "KeyLength": {
                                                    "description": "The key length of the cryptographic algorithm being used.",
                                                    "type": "integer"
                                                },
                                                "SigningAlgorithm": {
                                                    "description": "The signing algorithm for the certificate.",
                                                    "type": "string"
                                                },
                                                "ValidFromDate": {
                                                    "description": "The beginning date that the certificate is valid.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "ValidToDate": {
                                                    "description": "The final date that the certificate is valid.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidResourceStateFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "example": {
                                    "CertificateArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUSM457DE6XFJCJQ"
                                },
                                "properties": {
                                    "CertificateArn": {
                                        "description": "The Amazon Resource Name (ARN) of the deleted certificate.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "CertificateArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteEndpoint": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Deletes the specified endpoint.</p> <note> <p>All tasks associated with the endpoint must be deleted before you can delete the endpoint.</p> </note> <p/>",
                "operationId": "DeleteEndpoint",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {
                                        "Endpoint": {
                                            "EndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:RAAR3R22XSH46S3PWLC3NJAWKM",
                                            "EndpointIdentifier": "test-endpoint-1",
                                            "EndpointType": "source",
                                            "EngineName": "mysql",
                                            "KmsKeyId": "arn:aws:kms:us-east-1:123456789012:key/4c1731d6-5435-ed4d-be13-d53411a7cfbd",
                                            "Port": 3306,
                                            "ServerName": "mydb.cx1llnox7iyx.us-west-2.rds.amazonaws.com",
                                            "Status": "active",
                                            "Username": "username"
                                        }
                                    },
                                    "properties": {
                                        "Endpoint": {
                                            "description": "The endpoint that was deleted.",
                                            "properties": {
                                                "CertificateArn": {
                                                    "description": "The Amazon Resource Name (ARN) used for SSL connection to the endpoint.",
                                                    "type": "string"
                                                },
                                                "DatabaseName": {
                                                    "description": "The name of the database at the endpoint.",
                                                    "type": "string"
                                                },
                                                "DmsTransferSettings": {
                                                    "description": "<p>The settings in JSON format for the DMS transfer type of source endpoint. </p> <p>Possible attributes include the following:</p> <ul> <li> <p> <code>serviceAccessRoleArn</code> - The IAM role that has permission to access the Amazon S3 bucket.</p> </li> <li> <p> <code>bucketName</code> - The name of the S3 bucket to use.</p> </li> <li> <p> <code>compressionType</code> - An optional parameter to use GZIP to compress the target files. To use GZIP, set this value to <code>NONE</code> (the default). To keep the files uncompressed, don't use this value. </p> </li> </ul> <p>Shorthand syntax for these attributes is as follows: <code>ServiceAccessRoleArn=string,BucketName=string,CompressionType=string</code> </p> <p>JSON syntax for these attributes is as follows: <code>{ \"ServiceAccessRoleArn\": \"string\", \"BucketName\": \"string\", \"CompressionType\": \"none\"|\"gzip\" } </code> </p>",
                                                    "properties": {
                                                        "BucketName": {
                                                            "description": " The name of the S3 bucket to use. ",
                                                            "type": "string"
                                                        },
                                                        "ServiceAccessRoleArn": {
                                                            "description": " The IAM role that has permission to access the Amazon S3 bucket. ",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "DynamoDbSettings": {
                                                    "description": "The settings for the target DynamoDB database. For more information, see the <code>DynamoDBSettings</code> structure.",
                                                    "properties": {
                                                        "ServiceAccessRoleArn": {
                                                            "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "ServiceAccessRoleArn"
                                                    ],
                                                    "type": "object"
                                                },
                                                "ElasticsearchSettings": {
                                                    "description": "The settings for the Elasticsearch source endpoint. For more information, see the <code>ElasticsearchSettings</code> structure.",
                                                    "properties": {
                                                        "EndpointUri": {
                                                            "description": "The endpoint for the ElasticSearch cluster.",
                                                            "type": "string"
                                                        },
                                                        "ErrorRetryDuration": {
                                                            "description": "The maximum number of seconds that DMS retries failed API requests to the Elasticsearch cluster.",
                                                            "type": "integer"
                                                        },
                                                        "FullLoadErrorPercentage": {
                                                            "description": "The maximum percentage of records that can fail to be written before a full load operation stops. ",
                                                            "type": "integer"
                                                        },
                                                        "ServiceAccessRoleArn": {
                                                            "description": "The Amazon Resource Name (ARN) used by service to access the IAM role.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "ServiceAccessRoleArn",
                                                        "EndpointUri"
                                                    ],
                                                    "type": "object"
                                                },
                                                "EndpointArn": {
                                                    "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                                    "type": "string"
                                                },
                                                "EndpointIdentifier": {
                                                    "description": "The database endpoint identifier. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.",
                                                    "type": "string"
                                                },
                                                "EndpointType": {
                                                    "description": "The type of endpoint.",
                                                    "enum": [
                                                        "source",
                                                        "target"
                                                    ],
                                                    "type": "string"
                                                },
                                                "EngineDisplayName": {
                                                    "description": "The expanded name for the engine name. For example, if the <code>EngineName</code> parameter is \"aurora,\" this value would be \"Amazon Aurora MySQL.\"",
                                                    "type": "string"
                                                },
                                                "EngineName": {
                                                    "description": "The database engine name. Valid values, depending on the EndPointType, include mysql, oracle, postgres, mariadb, aurora, aurora-postgresql, redshift, s3, db2, azuredb, sybase, sybase, dynamodb, mongodb, and sqlserver.",
                                                    "type": "string"
                                                },
                                                "ExternalId": {
                                                    "description": " Value returned by a call to CreateEndpoint that can be used for cross-account validation. Use it on a subsequent call to CreateEndpoint to create the endpoint with a cross-account. ",
                                                    "type": "string"
                                                },
                                                "ExternalTableDefinition": {
                                                    "description": "The external table definition.",
                                                    "type": "string"
                                                },
                                                "ExtraConnectionAttributes": {
                                                    "description": "Additional connection attributes used to connect to the endpoint.",
                                                    "type": "string"
                                                },
                                                "KinesisSettings": {
                                                    "description": "The settings for the Amazon Kinesis source endpoint. For more information, see the <code>KinesisSettings</code> structure.",
                                                    "properties": {
                                                        "MessageFormat": {
                                                            "description": "The output format for the records created on the endpoint. The message format is <code>JSON</code>.",
                                                            "enum": [
                                                                "json"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "ServiceAccessRoleArn": {
                                                            "description": "The Amazon Resource Name (ARN) for the IAM role that DMS uses to write to the Amazon Kinesis data stream.",
                                                            "type": "string"
                                                        },
                                                        "StreamArn": {
                                                            "description": "The Amazon Resource Name (ARN) for the Amazon Kinesis Data Streams endpoint.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "KmsKeyId": {
                                                    "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                                    "type": "string"
                                                },
                                                "MongoDbSettings": {
                                                    "description": "The settings for the MongoDB source endpoint. For more information, see the <code>MongoDbSettings</code> structure.",
                                                    "properties": {
                                                        "AuthMechanism": {
                                                            "description": "<p> The authentication mechanism you use to access the MongoDB source endpoint.</p> <p>Valid values: DEFAULT, MONGODB_CR, SCRAM_SHA_1 </p> <p>DEFAULT – For MongoDB version 2.x, use MONGODB_CR. For MongoDB version 3.x, use SCRAM_SHA_1. This attribute is not used when authType=No.</p>",
                                                            "enum": [
                                                                "default",
                                                                "mongodb_cr",
                                                                "scram_sha_1"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "AuthSource": {
                                                            "description": "<p> The MongoDB database name. This attribute is not used when <code>authType=NO</code>. </p> <p>The default is admin.</p>",
                                                            "type": "string"
                                                        },
                                                        "AuthType": {
                                                            "description": "<p> The authentication type you use to access the MongoDB source endpoint.</p> <p>Valid values: NO, PASSWORD </p> <p>When NO is selected, user name and password parameters are not used and can be empty. </p>",
                                                            "enum": [
                                                                "no",
                                                                "password"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "DatabaseName": {
                                                            "description": " The database name on the MongoDB source endpoint. ",
                                                            "type": "string"
                                                        },
                                                        "DocsToInvestigate": {
                                                            "description": "<p> Indicates the number of documents to preview to determine the document organization. Use this attribute when <code>NestingLevel</code> is set to ONE. </p> <p>Must be a positive value greater than 0. Default value is 1000.</p>",
                                                            "type": "string"
                                                        },
                                                        "ExtractDocId": {
                                                            "description": "<p> Specifies the document ID. Use this attribute when <code>NestingLevel</code> is set to NONE. </p> <p>Default value is false. </p>",
                                                            "type": "string"
                                                        },
                                                        "KmsKeyId": {
                                                            "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                                            "type": "string"
                                                        },
                                                        "NestingLevel": {
                                                            "description": "<p> Specifies either document or table mode. </p> <p>Valid values: NONE, ONE</p> <p>Default value is NONE. Specify NONE to use document mode. Specify ONE to use table mode.</p>",
                                                            "enum": [
                                                                "none",
                                                                "one"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "Password": {
                                                            "description": " The password for the user account you use to access the MongoDB source endpoint. ",
                                                            "format": "password",
                                                            "type": "string"
                                                        },
                                                        "Port": {
                                                            "description": " The port value for the MongoDB source endpoint. ",
                                                            "type": "integer"
                                                        },
                                                        "ServerName": {
                                                            "description": " The name of the server on the MongoDB source endpoint. ",
                                                            "type": "string"
                                                        },
                                                        "Username": {
                                                            "description": "The user name you use to access the MongoDB source endpoint. ",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Port": {
                                                    "description": "The port value used to access the endpoint.",
                                                    "type": "integer"
                                                },
                                                "S3Settings": {
                                                    "description": "The settings for the S3 target endpoint. For more information, see the <code>S3Settings</code> structure.",
                                                    "properties": {
                                                        "BucketFolder": {
                                                            "description": " An optional parameter to set a folder name in the S3 bucket. If provided, tables are created in the path &lt;bucketFolder&gt;/&lt;schema_name&gt;/&lt;table_name&gt;/. If this parameter is not specified, then the path used is &lt;schema_name&gt;/&lt;table_name&gt;/. ",
                                                            "type": "string"
                                                        },
                                                        "BucketName": {
                                                            "description": " The name of the S3 bucket. ",
                                                            "type": "string"
                                                        },
                                                        "CompressionType": {
                                                            "description": " An optional parameter to use GZIP to compress the target files. Set to GZIP to compress the target files. Set to NONE (the default) or do not use to leave the files uncompressed. ",
                                                            "enum": [
                                                                "none",
                                                                "gzip"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "CsvDelimiter": {
                                                            "description": " The delimiter used to separate columns in the source files. The default is a comma. ",
                                                            "type": "string"
                                                        },
                                                        "CsvRowDelimiter": {
                                                            "description": " The delimiter used to separate rows in the source files. The default is a carriage return (\\n). ",
                                                            "type": "string"
                                                        },
                                                        "ExternalTableDefinition": {
                                                            "description": " The external table definition. ",
                                                            "type": "string"
                                                        },
                                                        "ServiceAccessRoleArn": {
                                                            "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "ServerName": {
                                                    "description": "The name of the server at the endpoint.",
                                                    "type": "string"
                                                },
                                                "ServiceAccessRoleArn": {
                                                    "description": "The Amazon Resource Name (ARN) used by the service access IAM role.",
                                                    "type": "string"
                                                },
                                                "SslMode": {
                                                    "description": "<p>The SSL mode used to connect to the endpoint.</p> <p>SSL mode can be one of four values: none, require, verify-ca, verify-full. </p> <p>The default value is none.</p>",
                                                    "enum": [
                                                        "none",
                                                        "require",
                                                        "verify-ca",
                                                        "verify-full"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of the endpoint.",
                                                    "type": "string"
                                                },
                                                "Username": {
                                                    "description": "The user name used to connect to the endpoint.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidResourceStateFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "EndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:RAAR3R22XSH46S3PWLC3NJAWKM"
                                },
                                "properties": {
                                    "EndpointArn": {
                                        "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "EndpointArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteEventSubscription": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": " Deletes an AWS DMS event subscription. ",
                "operationId": "DeleteEventSubscription",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "properties": {
                                        "EventSubscription": {
                                            "description": "The event subscription that was deleted.",
                                            "properties": {
                                                "CustSubscriptionId": {
                                                    "description": "The AWS DMS event notification subscription Id.",
                                                    "type": "string"
                                                },
                                                "CustomerAwsId": {
                                                    "description": "The AWS customer account associated with the AWS DMS event notification subscription.",
                                                    "type": "string"
                                                },
                                                "Enabled": {
                                                    "description": "Boolean value that indicates if the event subscription is enabled.",
                                                    "type": "boolean"
                                                },
                                                "EventCategoriesList": {
                                                    "description": "A lists of event categories.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "SnsTopicArn": {
                                                    "description": "The topic ARN of the AWS DMS event notification subscription.",
                                                    "type": "string"
                                                },
                                                "SourceIdsList": {
                                                    "description": "A list of source Ids for the event subscription.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "SourceType": {
                                                    "description": "<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | replication-server | security-group | migration-task</p>",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "<p>The status of the AWS DMS event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that AWS DMS no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                                                    "type": "string"
                                                },
                                                "SubscriptionCreationTime": {
                                                    "description": "The time the RDS event notification subscription was created.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidResourceStateFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "SubscriptionName": {
                                        "description": "The name of the DMS event notification subscription to be deleted.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SubscriptionName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteReplicationInstance": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Deletes the specified replication instance.</p> <note> <p>You must delete any migration tasks that are associated with the replication instance before you can delete it.</p> </note> <p/>",
                "operationId": "DeleteReplicationInstance",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {
                                        "ReplicationInstance": {
                                            "AllocatedStorage": 5,
                                            "AutoMinorVersionUpgrade": true,
                                            "EngineVersion": "1.5.0",
                                            "KmsKeyId": "arn:aws:kms:us-east-1:123456789012:key/4c1731d6-5435-ed4d-be13-d53411a7cfbd",
                                            "PendingModifiedValues": {},
                                            "PreferredMaintenanceWindow": "sun:06:00-sun:14:00",
                                            "PubliclyAccessible": true,
                                            "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
                                            "ReplicationInstanceClass": "dms.t2.micro",
                                            "ReplicationInstanceIdentifier": "test-rep-1",
                                            "ReplicationInstanceStatus": "creating",
                                            "ReplicationSubnetGroup": {
                                                "ReplicationSubnetGroupDescription": "default",
                                                "ReplicationSubnetGroupIdentifier": "default",
                                                "SubnetGroupStatus": "Complete",
                                                "Subnets": [
                                                    {
                                                        "SubnetAvailabilityZone": {
                                                            "Name": "us-east-1d"
                                                        },
                                                        "SubnetIdentifier": "subnet-f6dd91af",
                                                        "SubnetStatus": "Active"
                                                    },
                                                    {
                                                        "SubnetAvailabilityZone": {
                                                            "Name": "us-east-1b"
                                                        },
                                                        "SubnetIdentifier": "subnet-3605751d",
                                                        "SubnetStatus": "Active"
                                                    },
                                                    {
                                                        "SubnetAvailabilityZone": {
                                                            "Name": "us-east-1c"
                                                        },
                                                        "SubnetIdentifier": "subnet-c2daefb5",
                                                        "SubnetStatus": "Active"
                                                    },
                                                    {
                                                        "SubnetAvailabilityZone": {
                                                            "Name": "us-east-1e"
                                                        },
                                                        "SubnetIdentifier": "subnet-85e90cb8",
                                                        "SubnetStatus": "Active"
                                                    }
                                                ],
                                                "VpcId": "vpc-6741a603"
                                            }
                                        }
                                    },
                                    "properties": {
                                        "ReplicationInstance": {
                                            "description": "The replication instance that was deleted.",
                                            "properties": {
                                                "AllocatedStorage": {
                                                    "description": "The amount of storage (in gigabytes) that is allocated for the replication instance.",
                                                    "type": "integer"
                                                },
                                                "AutoMinorVersionUpgrade": {
                                                    "description": "Boolean value indicating if minor version upgrades will be automatically applied to the instance.",
                                                    "type": "boolean"
                                                },
                                                "AvailabilityZone": {
                                                    "description": "The Availability Zone for the instance.",
                                                    "type": "string"
                                                },
                                                "DnsNameServers": {
                                                    "description": "The DNS name servers for the replication instance.",
                                                    "type": "string"
                                                },
                                                "EngineVersion": {
                                                    "description": "The engine version number of the replication instance.",
                                                    "type": "string"
                                                },
                                                "FreeUntil": {
                                                    "description": " The expiration date of the free replication instance that is part of the Free DMS program. ",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "InstanceCreateTime": {
                                                    "description": "The time the replication instance was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "KmsKeyId": {
                                                    "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                                    "type": "string"
                                                },
                                                "MultiAZ": {
                                                    "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. ",
                                                    "type": "boolean"
                                                },
                                                "PendingModifiedValues": {
                                                    "description": "The pending modification values.",
                                                    "properties": {
                                                        "AllocatedStorage": {
                                                            "description": "The amount of storage (in gigabytes) that is allocated for the replication instance.",
                                                            "type": "integer"
                                                        },
                                                        "EngineVersion": {
                                                            "description": "The engine version number of the replication instance.",
                                                            "type": "string"
                                                        },
                                                        "MultiAZ": {
                                                            "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. ",
                                                            "type": "boolean"
                                                        },
                                                        "ReplicationInstanceClass": {
                                                            "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "PreferredMaintenanceWindow": {
                                                    "description": "The maintenance window times for the replication instance.",
                                                    "type": "string"
                                                },
                                                "PubliclyAccessible": {
                                                    "description": " Specifies the accessibility options for the replication instance. A value of <code>true</code> represents an instance with a public IP address. A value of <code>false</code> represents an instance with a private IP address. The default value is <code>true</code>. ",
                                                    "type": "boolean"
                                                },
                                                "ReplicationInstanceArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                                    "type": "string"
                                                },
                                                "ReplicationInstanceClass": {
                                                    "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                                                    "type": "string"
                                                },
                                                "ReplicationInstanceIdentifier": {
                                                    "description": "<p>The replication instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>myrepinstance</code> </p>",
                                                    "type": "string"
                                                },
                                                "ReplicationInstancePrivateIpAddress": {
                                                    "description": "The private IP address of the replication instance.",
                                                    "type": "string"
                                                },
                                                "ReplicationInstancePrivateIpAddresses": {
                                                    "description": "The private IP address of the replication instance.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ReplicationInstancePublicIpAddress": {
                                                    "description": "The public IP address of the replication instance.",
                                                    "type": "string"
                                                },
                                                "ReplicationInstancePublicIpAddresses": {
                                                    "description": "The public IP address of the replication instance.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ReplicationInstanceStatus": {
                                                    "description": "The status of the replication instance.",
                                                    "type": "string"
                                                },
                                                "ReplicationSubnetGroup": {
                                                    "description": "The subnet group for the replication instance.",
                                                    "properties": {
                                                        "ReplicationSubnetGroupDescription": {
                                                            "description": "The description of the replication subnet group.",
                                                            "type": "string"
                                                        },
                                                        "ReplicationSubnetGroupIdentifier": {
                                                            "description": "The identifier of the replication instance subnet group.",
                                                            "type": "string"
                                                        },
                                                        "SubnetGroupStatus": {
                                                            "description": "The status of the subnet group.",
                                                            "type": "string"
                                                        },
                                                        "Subnets": {
                                                            "description": "The subnets that are in the subnet group.",
                                                            "items": {
                                                                "description": "<p/>",
                                                                "properties": {
                                                                    "SubnetAvailabilityZone": {
                                                                        "description": "The Availability Zone of the subnet.",
                                                                        "properties": {
                                                                            "Name": {
                                                                                "description": "The name of the availability zone.",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "SubnetIdentifier": {
                                                                        "description": "The subnet identifier.",
                                                                        "type": "string"
                                                                    },
                                                                    "SubnetStatus": {
                                                                        "description": "The status of the subnet.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "VpcId": {
                                                            "description": "The ID of the VPC.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "SecondaryAvailabilityZone": {
                                                    "description": "The availability zone of the standby replication instance in a Multi-AZ deployment.",
                                                    "type": "string"
                                                },
                                                "VpcSecurityGroups": {
                                                    "description": "The VPC security group for the instance.",
                                                    "items": {
                                                        "description": "<p/>",
                                                        "properties": {
                                                            "Status": {
                                                                "description": "The status of the VPC security group.",
                                                                "type": "string"
                                                            },
                                                            "VpcSecurityGroupId": {
                                                                "description": "The VPC security group Id.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidResourceStateFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ"
                                },
                                "properties": {
                                    "ReplicationInstanceArn": {
                                        "description": "The Amazon Resource Name (ARN) of the replication instance to be deleted.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ReplicationInstanceArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteReplicationSubnetGroup": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes a subnet group.",
                "operationId": "DeleteReplicationSubnetGroup",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {},
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidResourceStateFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "ReplicationSubnetGroupIdentifier": "us-west-2ab-vpc-215ds366"
                                },
                                "properties": {
                                    "ReplicationSubnetGroupIdentifier": {
                                        "description": "The subnet group name of the replication instance.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ReplicationSubnetGroupIdentifier"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteReplicationTask": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes the specified replication task.",
                "operationId": "DeleteReplicationTask",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {
                                        "ReplicationTask": {
                                            "MigrationType": "full-load",
                                            "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
                                            "ReplicationTaskArn": "arn:aws:dms:us-east-1:123456789012:task:OEAMB3NXSTZ6LFYZFEPPBBXPYM",
                                            "ReplicationTaskCreationDate": "2016-12-14T18:25:43Z",
                                            "ReplicationTaskIdentifier": "task1",
                                            "ReplicationTaskSettings": "{\"TargetMetadata\":{\"TargetSchema\":\"\",\"SupportLobs\":true,\"FullLobMode\":true,\"LobChunkSize\":64,\"LimitedSizeLobMode\":false,\"LobMaxSize\":0},\"FullLoadSettings\":{\"FullLoadEnabled\":true,\"ApplyChangesEnabled\":false,\"TargetTablePrepMode\":\"DROP_AND_CREATE\",\"CreatePkAfterFullLoad\":false,\"StopTaskCachedChangesApplied\":false,\"StopTaskCachedChangesNotApplied\":false,\"ResumeEnabled\":false,\"ResumeMinTableSize\":100000,\"ResumeOnlyClusteredPKTables\":true,\"MaxFullLoadSubTasks\":8,\"TransactionConsistencyTimeout\":600,\"CommitRate\":10000},\"Logging\":{\"EnableLogging\":false}}",
                                            "SourceEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ZW5UAN6P4E77EC7YWHK4RZZ3BE",
                                            "Status": "creating",
                                            "TableMappings": "file://mappingfile.json",
                                            "TargetEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E"
                                        }
                                    },
                                    "properties": {
                                        "ReplicationTask": {
                                            "description": "The deleted replication task.",
                                            "properties": {
                                                "CdcStartPosition": {
                                                    "description": "<p>Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p> The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position \"checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93\"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p>",
                                                    "type": "string"
                                                },
                                                "CdcStopPosition": {
                                                    "description": "<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:3018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 3018-02-09T12:12:12 “</p>",
                                                    "type": "string"
                                                },
                                                "LastFailureMessage": {
                                                    "description": "The last error (failure) message generated for the replication instance.",
                                                    "type": "string"
                                                },
                                                "MigrationType": {
                                                    "description": "The type of migration.",
                                                    "enum": [
                                                        "full-load",
                                                        "cdc",
                                                        "full-load-and-cdc"
                                                    ],
                                                    "type": "string"
                                                },
                                                "RecoveryCheckpoint": {
                                                    "description": "Indicates the last checkpoint that occurred during a change data capture (CDC) operation. You can provide this value to the <code>CdcStartPosition</code> parameter to start a CDC operation that begins at that checkpoint.",
                                                    "type": "string"
                                                },
                                                "ReplicationInstanceArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the replication task.",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskCreationDate": {
                                                    "description": "The date the replication task was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskIdentifier": {
                                                    "description": "<p>The user-assigned replication task identifier or name.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskSettings": {
                                                    "description": "The settings for the replication task.",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskStartDate": {
                                                    "description": "The date the replication task is scheduled to start.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskStats": {
                                                    "description": "The statistics for the task, including elapsed time, tables loaded, and table errors.",
                                                    "properties": {
                                                        "ElapsedTimeMillis": {
                                                            "description": "The elapsed time of the task, in milliseconds.",
                                                            "type": "integer"
                                                        },
                                                        "FullLoadProgressPercent": {
                                                            "description": "The percent complete for the full load migration task.",
                                                            "type": "integer"
                                                        },
                                                        "TablesErrored": {
                                                            "description": "The number of errors that have occurred during this task.",
                                                            "type": "integer"
                                                        },
                                                        "TablesLoaded": {
                                                            "description": "The number of tables loaded for this task.",
                                                            "type": "integer"
                                                        },
                                                        "TablesLoading": {
                                                            "description": "The number of tables currently loading for this task.",
                                                            "type": "integer"
                                                        },
                                                        "TablesQueued": {
                                                            "description": "The number of tables queued for this task.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "SourceEndpointArn": {
                                                    "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of the replication task.",
                                                    "type": "string"
                                                },
                                                "StopReason": {
                                                    "description": "The reason the replication task was stopped.",
                                                    "type": "string"
                                                },
                                                "TableMappings": {
                                                    "description": "Table mappings specified in the task.",
                                                    "type": "string"
                                                },
                                                "TargetEndpointArn": {
                                                    "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidResourceStateFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "ReplicationTaskArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ"
                                },
                                "properties": {
                                    "ReplicationTaskArn": {
                                        "description": "The Amazon Resource Name (ARN) of the replication task to be deleted.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ReplicationTaskArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeAccountAttributes": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Lists all of the AWS DMS attributes for a customer account. The attributes include AWS DMS quotas for the account, such as the number of replication instances allowed. The description for a quota includes the quota name, current usage toward that quota, and the quota's maximum value.</p> <p>This command does not take any parameters.</p>",
                "operationId": "DescribeAccountAttributes",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {
                                        "AccountQuotas": [
                                            {
                                                "AccountQuotaName": "ReplicationInstances",
                                                "Max": 20,
                                                "Used": 0
                                            },
                                            {
                                                "AccountQuotaName": "AllocatedStorage",
                                                "Max": 20,
                                                "Used": 0
                                            },
                                            {
                                                "AccountQuotaName": "Endpoints",
                                                "Max": 20,
                                                "Used": 0
                                            }
                                        ]
                                    },
                                    "properties": {
                                        "AccountQuotas": {
                                            "description": "Account quota information.",
                                            "items": {
                                                "description": "Describes a quota for an AWS account, for example, the number of replication instances allowed.",
                                                "properties": {
                                                    "AccountQuotaName": {
                                                        "description": "The name of the AWS DMS quota for this AWS account.",
                                                        "type": "string"
                                                    },
                                                    "Max": {
                                                        "description": "The maximum allowed value for the quota.",
                                                        "type": "integer"
                                                    },
                                                    "Used": {
                                                        "description": "The amount currently used toward the quota maximum.",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {},
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeCertificates": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Provides a description of the certificate.",
                "operationId": "DescribeCertificates",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxRecords",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "Marker",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "Certificates": [],
                                        "Marker": ""
                                    },
                                    "properties": {
                                        "Certificates": {
                                            "description": "The Secure Sockets Layer (SSL) certificates associated with the replication instance.",
                                            "items": {
                                                "description": "The SSL certificate that can be used to encrypt connections between the endpoints and the replication instance.",
                                                "properties": {
                                                    "CertificateArn": {
                                                        "description": "The Amazon Resource Name (ARN) for the certificate.",
                                                        "type": "string"
                                                    },
                                                    "CertificateCreationDate": {
                                                        "description": "The date that the certificate was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "CertificateIdentifier": {
                                                        "description": "The customer-assigned name of the certificate. Valid characters are A-z and 0-9.",
                                                        "type": "string"
                                                    },
                                                    "CertificateOwner": {
                                                        "description": "The owner of the certificate.",
                                                        "type": "string"
                                                    },
                                                    "CertificatePem": {
                                                        "description": "The contents of the .pem X.509 certificate file for the certificate.",
                                                        "type": "string"
                                                    },
                                                    "CertificateWallet": {
                                                        "description": "The location of the imported Oracle Wallet certificate for use with SSL.",
                                                        "type": "string"
                                                    },
                                                    "KeyLength": {
                                                        "description": "The key length of the cryptographic algorithm being used.",
                                                        "type": "integer"
                                                    },
                                                    "SigningAlgorithm": {
                                                        "description": "The signing algorithm for the certificate.",
                                                        "type": "string"
                                                    },
                                                    "ValidFromDate": {
                                                        "description": "The beginning date that the certificate is valid.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "ValidToDate": {
                                                        "description": "The final date that the certificate is valid.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Marker": {
                                            "description": "The pagination token.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "example": {
                                    "Filters": [
                                        {
                                            "Name": "string",
                                            "Values": [
                                                "string",
                                                "string"
                                            ]
                                        }
                                    ],
                                    "Marker": "",
                                    "MaxRecords": 123
                                },
                                "properties": {
                                    "Filters": {
                                        "description": "Filters applied to the certificate described in the form of key-value pairs.",
                                        "items": {
                                            "description": "<p/>",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the filter.",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The filter value.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Marker": {
                                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                        "type": "string"
                                    },
                                    "MaxRecords": {
                                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 10</p>",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeConnections": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Describes the status of the connections that have been made between the replication instance and an endpoint. Connections are created when you test an endpoint.",
                "operationId": "DescribeConnections",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxRecords",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "Marker",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {
                                        "Connections": [
                                            {
                                                "EndpointArn": "arn:aws:dms:us-east-arn:aws:dms:us-east-1:123456789012:endpoint:ZW5UAN6P4E77EC7YWHK4RZZ3BE",
                                                "EndpointIdentifier": "testsrc1",
                                                "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
                                                "ReplicationInstanceIdentifier": "test",
                                                "Status": "successful"
                                            }
                                        ],
                                        "Marker": ""
                                    },
                                    "properties": {
                                        "Connections": {
                                            "description": "A description of the connections.",
                                            "items": {
                                                "description": "<p/>",
                                                "properties": {
                                                    "EndpointArn": {
                                                        "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                                        "type": "string"
                                                    },
                                                    "EndpointIdentifier": {
                                                        "description": "The identifier of the endpoint. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.",
                                                        "type": "string"
                                                    },
                                                    "LastFailureMessage": {
                                                        "description": "The error message when the connection last failed.",
                                                        "type": "string"
                                                    },
                                                    "ReplicationInstanceArn": {
                                                        "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                                        "type": "string"
                                                    },
                                                    "ReplicationInstanceIdentifier": {
                                                        "description": "The replication instance identifier. This parameter is stored as a lowercase string.",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The connection status.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Marker": {
                                            "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "Filters": [
                                        {
                                            "Name": "string",
                                            "Values": [
                                                "string",
                                                "string"
                                            ]
                                        }
                                    ],
                                    "Marker": "",
                                    "MaxRecords": 123
                                },
                                "properties": {
                                    "Filters": {
                                        "description": "<p>The filters applied to the connection.</p> <p>Valid filter names: endpoint-arn | replication-instance-arn</p>",
                                        "items": {
                                            "description": "<p/>",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the filter.",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The filter value.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Marker": {
                                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                        "type": "string"
                                    },
                                    "MaxRecords": {
                                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeEndpointTypes": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns information about the type of endpoints available.",
                "operationId": "DescribeEndpointTypes",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxRecords",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "Marker",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {
                                        "Marker": "",
                                        "SupportedEndpointTypes": []
                                    },
                                    "properties": {
                                        "Marker": {
                                            "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                            "type": "string"
                                        },
                                        "SupportedEndpointTypes": {
                                            "description": "The type of endpoints that are supported.",
                                            "items": {
                                                "description": "<p/>",
                                                "properties": {
                                                    "EndpointType": {
                                                        "description": "The type of endpoint.",
                                                        "enum": [
                                                            "source",
                                                            "target"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "EngineDisplayName": {
                                                        "description": "The expanded name for the engine name. For example, if the <code>EngineName</code> parameter is \"aurora,\" this value would be \"Amazon Aurora MySQL.\"",
                                                        "type": "string"
                                                    },
                                                    "EngineName": {
                                                        "description": "The database engine name. Valid values, depending on the EndPointType, include mysql, oracle, postgres, mariadb, aurora, aurora-postgresql, redshift, s3, db2, azuredb, sybase, sybase, dynamodb, mongodb, and sqlserver.",
                                                        "type": "string"
                                                    },
                                                    "SupportsCDC": {
                                                        "description": "Indicates if Change Data Capture (CDC) is supported.",
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "Filters": [
                                        {
                                            "Name": "string",
                                            "Values": [
                                                "string",
                                                "string"
                                            ]
                                        }
                                    ],
                                    "Marker": "",
                                    "MaxRecords": 123
                                },
                                "properties": {
                                    "Filters": {
                                        "description": "<p>Filters applied to the describe action.</p> <p>Valid filter names: engine-name | endpoint-type</p>",
                                        "items": {
                                            "description": "<p/>",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the filter.",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The filter value.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Marker": {
                                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                        "type": "string"
                                    },
                                    "MaxRecords": {
                                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeEndpoints": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns information about the endpoints for your account in the current region.",
                "operationId": "DescribeEndpoints",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxRecords",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "Marker",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {
                                        "Endpoints": [],
                                        "Marker": ""
                                    },
                                    "properties": {
                                        "Endpoints": {
                                            "description": "Endpoint description.",
                                            "items": {
                                                "description": "<p/>",
                                                "properties": {
                                                    "CertificateArn": {
                                                        "description": "The Amazon Resource Name (ARN) used for SSL connection to the endpoint.",
                                                        "type": "string"
                                                    },
                                                    "DatabaseName": {
                                                        "description": "The name of the database at the endpoint.",
                                                        "type": "string"
                                                    },
                                                    "DmsTransferSettings": {
                                                        "description": "<p>The settings in JSON format for the DMS transfer type of source endpoint. </p> <p>Possible attributes include the following:</p> <ul> <li> <p> <code>serviceAccessRoleArn</code> - The IAM role that has permission to access the Amazon S3 bucket.</p> </li> <li> <p> <code>bucketName</code> - The name of the S3 bucket to use.</p> </li> <li> <p> <code>compressionType</code> - An optional parameter to use GZIP to compress the target files. To use GZIP, set this value to <code>NONE</code> (the default). To keep the files uncompressed, don't use this value. </p> </li> </ul> <p>Shorthand syntax for these attributes is as follows: <code>ServiceAccessRoleArn=string,BucketName=string,CompressionType=string</code> </p> <p>JSON syntax for these attributes is as follows: <code>{ \"ServiceAccessRoleArn\": \"string\", \"BucketName\": \"string\", \"CompressionType\": \"none\"|\"gzip\" } </code> </p>",
                                                        "properties": {
                                                            "BucketName": {
                                                                "description": " The name of the S3 bucket to use. ",
                                                                "type": "string"
                                                            },
                                                            "ServiceAccessRoleArn": {
                                                                "description": " The IAM role that has permission to access the Amazon S3 bucket. ",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "DynamoDbSettings": {
                                                        "description": "The settings for the target DynamoDB database. For more information, see the <code>DynamoDBSettings</code> structure.",
                                                        "properties": {
                                                            "ServiceAccessRoleArn": {
                                                                "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "ServiceAccessRoleArn"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "ElasticsearchSettings": {
                                                        "description": "The settings for the Elasticsearch source endpoint. For more information, see the <code>ElasticsearchSettings</code> structure.",
                                                        "properties": {
                                                            "EndpointUri": {
                                                                "description": "The endpoint for the ElasticSearch cluster.",
                                                                "type": "string"
                                                            },
                                                            "ErrorRetryDuration": {
                                                                "description": "The maximum number of seconds that DMS retries failed API requests to the Elasticsearch cluster.",
                                                                "type": "integer"
                                                            },
                                                            "FullLoadErrorPercentage": {
                                                                "description": "The maximum percentage of records that can fail to be written before a full load operation stops. ",
                                                                "type": "integer"
                                                            },
                                                            "ServiceAccessRoleArn": {
                                                                "description": "The Amazon Resource Name (ARN) used by service to access the IAM role.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "ServiceAccessRoleArn",
                                                            "EndpointUri"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "EndpointArn": {
                                                        "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                                        "type": "string"
                                                    },
                                                    "EndpointIdentifier": {
                                                        "description": "The database endpoint identifier. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.",
                                                        "type": "string"
                                                    },
                                                    "EndpointType": {
                                                        "description": "The type of endpoint.",
                                                        "enum": [
                                                            "source",
                                                            "target"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "EngineDisplayName": {
                                                        "description": "The expanded name for the engine name. For example, if the <code>EngineName</code> parameter is \"aurora,\" this value would be \"Amazon Aurora MySQL.\"",
                                                        "type": "string"
                                                    },
                                                    "EngineName": {
                                                        "description": "The database engine name. Valid values, depending on the EndPointType, include mysql, oracle, postgres, mariadb, aurora, aurora-postgresql, redshift, s3, db2, azuredb, sybase, sybase, dynamodb, mongodb, and sqlserver.",
                                                        "type": "string"
                                                    },
                                                    "ExternalId": {
                                                        "description": " Value returned by a call to CreateEndpoint that can be used for cross-account validation. Use it on a subsequent call to CreateEndpoint to create the endpoint with a cross-account. ",
                                                        "type": "string"
                                                    },
                                                    "ExternalTableDefinition": {
                                                        "description": "The external table definition.",
                                                        "type": "string"
                                                    },
                                                    "ExtraConnectionAttributes": {
                                                        "description": "Additional connection attributes used to connect to the endpoint.",
                                                        "type": "string"
                                                    },
                                                    "KinesisSettings": {
                                                        "description": "The settings for the Amazon Kinesis source endpoint. For more information, see the <code>KinesisSettings</code> structure.",
                                                        "properties": {
                                                            "MessageFormat": {
                                                                "description": "The output format for the records created on the endpoint. The message format is <code>JSON</code>.",
                                                                "enum": [
                                                                    "json"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "ServiceAccessRoleArn": {
                                                                "description": "The Amazon Resource Name (ARN) for the IAM role that DMS uses to write to the Amazon Kinesis data stream.",
                                                                "type": "string"
                                                            },
                                                            "StreamArn": {
                                                                "description": "The Amazon Resource Name (ARN) for the Amazon Kinesis Data Streams endpoint.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "KmsKeyId": {
                                                        "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                                        "type": "string"
                                                    },
                                                    "MongoDbSettings": {
                                                        "description": "The settings for the MongoDB source endpoint. For more information, see the <code>MongoDbSettings</code> structure.",
                                                        "properties": {
                                                            "AuthMechanism": {
                                                                "description": "<p> The authentication mechanism you use to access the MongoDB source endpoint.</p> <p>Valid values: DEFAULT, MONGODB_CR, SCRAM_SHA_1 </p> <p>DEFAULT – For MongoDB version 2.x, use MONGODB_CR. For MongoDB version 3.x, use SCRAM_SHA_1. This attribute is not used when authType=No.</p>",
                                                                "enum": [
                                                                    "default",
                                                                    "mongodb_cr",
                                                                    "scram_sha_1"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "AuthSource": {
                                                                "description": "<p> The MongoDB database name. This attribute is not used when <code>authType=NO</code>. </p> <p>The default is admin.</p>",
                                                                "type": "string"
                                                            },
                                                            "AuthType": {
                                                                "description": "<p> The authentication type you use to access the MongoDB source endpoint.</p> <p>Valid values: NO, PASSWORD </p> <p>When NO is selected, user name and password parameters are not used and can be empty. </p>",
                                                                "enum": [
                                                                    "no",
                                                                    "password"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "DatabaseName": {
                                                                "description": " The database name on the MongoDB source endpoint. ",
                                                                "type": "string"
                                                            },
                                                            "DocsToInvestigate": {
                                                                "description": "<p> Indicates the number of documents to preview to determine the document organization. Use this attribute when <code>NestingLevel</code> is set to ONE. </p> <p>Must be a positive value greater than 0. Default value is 1000.</p>",
                                                                "type": "string"
                                                            },
                                                            "ExtractDocId": {
                                                                "description": "<p> Specifies the document ID. Use this attribute when <code>NestingLevel</code> is set to NONE. </p> <p>Default value is false. </p>",
                                                                "type": "string"
                                                            },
                                                            "KmsKeyId": {
                                                                "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                                                "type": "string"
                                                            },
                                                            "NestingLevel": {
                                                                "description": "<p> Specifies either document or table mode. </p> <p>Valid values: NONE, ONE</p> <p>Default value is NONE. Specify NONE to use document mode. Specify ONE to use table mode.</p>",
                                                                "enum": [
                                                                    "none",
                                                                    "one"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "Password": {
                                                                "description": " The password for the user account you use to access the MongoDB source endpoint. ",
                                                                "format": "password",
                                                                "type": "string"
                                                            },
                                                            "Port": {
                                                                "description": " The port value for the MongoDB source endpoint. ",
                                                                "type": "integer"
                                                            },
                                                            "ServerName": {
                                                                "description": " The name of the server on the MongoDB source endpoint. ",
                                                                "type": "string"
                                                            },
                                                            "Username": {
                                                                "description": "The user name you use to access the MongoDB source endpoint. ",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "Port": {
                                                        "description": "The port value used to access the endpoint.",
                                                        "type": "integer"
                                                    },
                                                    "S3Settings": {
                                                        "description": "The settings for the S3 target endpoint. For more information, see the <code>S3Settings</code> structure.",
                                                        "properties": {
                                                            "BucketFolder": {
                                                                "description": " An optional parameter to set a folder name in the S3 bucket. If provided, tables are created in the path &lt;bucketFolder&gt;/&lt;schema_name&gt;/&lt;table_name&gt;/. If this parameter is not specified, then the path used is &lt;schema_name&gt;/&lt;table_name&gt;/. ",
                                                                "type": "string"
                                                            },
                                                            "BucketName": {
                                                                "description": " The name of the S3 bucket. ",
                                                                "type": "string"
                                                            },
                                                            "CompressionType": {
                                                                "description": " An optional parameter to use GZIP to compress the target files. Set to GZIP to compress the target files. Set to NONE (the default) or do not use to leave the files uncompressed. ",
                                                                "enum": [
                                                                    "none",
                                                                    "gzip"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "CsvDelimiter": {
                                                                "description": " The delimiter used to separate columns in the source files. The default is a comma. ",
                                                                "type": "string"
                                                            },
                                                            "CsvRowDelimiter": {
                                                                "description": " The delimiter used to separate rows in the source files. The default is a carriage return (\\n). ",
                                                                "type": "string"
                                                            },
                                                            "ExternalTableDefinition": {
                                                                "description": " The external table definition. ",
                                                                "type": "string"
                                                            },
                                                            "ServiceAccessRoleArn": {
                                                                "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "ServerName": {
                                                        "description": "The name of the server at the endpoint.",
                                                        "type": "string"
                                                    },
                                                    "ServiceAccessRoleArn": {
                                                        "description": "The Amazon Resource Name (ARN) used by the service access IAM role.",
                                                        "type": "string"
                                                    },
                                                    "SslMode": {
                                                        "description": "<p>The SSL mode used to connect to the endpoint.</p> <p>SSL mode can be one of four values: none, require, verify-ca, verify-full. </p> <p>The default value is none.</p>",
                                                        "enum": [
                                                            "none",
                                                            "require",
                                                            "verify-ca",
                                                            "verify-full"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The status of the endpoint.",
                                                        "type": "string"
                                                    },
                                                    "Username": {
                                                        "description": "The user name used to connect to the endpoint.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Marker": {
                                            "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "Filters": [
                                        {
                                            "Name": "string",
                                            "Values": [
                                                "string",
                                                "string"
                                            ]
                                        }
                                    ],
                                    "Marker": "",
                                    "MaxRecords": 123
                                },
                                "properties": {
                                    "Filters": {
                                        "description": "<p>Filters applied to the describe action.</p> <p>Valid filter names: endpoint-arn | endpoint-type | endpoint-id | engine-name</p>",
                                        "items": {
                                            "description": "<p/>",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the filter.",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The filter value.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Marker": {
                                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                        "type": "string"
                                    },
                                    "MaxRecords": {
                                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeEventCategories": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Lists categories for all event source types, or, if specified, for a specified source type. You can see a list of the event categories and source types in <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html\">Working with Events and Notifications</a> in the <i>AWS Database Migration Service User Guide.</i> ",
                "operationId": "DescribeEventCategories",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "properties": {
                                        "EventCategoryGroupList": {
                                            "description": "A list of event categories.",
                                            "items": {
                                                "description": "<p/>",
                                                "properties": {
                                                    "EventCategories": {
                                                        "description": " A list of event categories for a <code>SourceType</code> that you want to subscribe to. ",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "SourceType": {
                                                        "description": "<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | replication-server | security-group | migration-task</p>",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "Filters": {
                                        "description": "Filters applied to the action.",
                                        "items": {
                                            "description": "<p/>",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the filter.",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The filter value.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "SourceType": {
                                        "description": "<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | migration-task</p>",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeEventSubscriptions": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Lists all the event subscriptions for a customer account. The description of a subscription includes <code>SubscriptionName</code>, <code>SNSTopicARN</code>, <code>CustomerID</code>, <code>SourceType</code>, <code>SourceID</code>, <code>CreationTime</code>, and <code>Status</code>. </p> <p>If you specify <code>SubscriptionName</code>, this action lists the description for that subscription.</p>",
                "operationId": "DescribeEventSubscriptions",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxRecords",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "Marker",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "properties": {
                                        "EventSubscriptionsList": {
                                            "description": "A list of event subscriptions.",
                                            "items": {
                                                "description": "<p/>",
                                                "properties": {
                                                    "CustSubscriptionId": {
                                                        "description": "The AWS DMS event notification subscription Id.",
                                                        "type": "string"
                                                    },
                                                    "CustomerAwsId": {
                                                        "description": "The AWS customer account associated with the AWS DMS event notification subscription.",
                                                        "type": "string"
                                                    },
                                                    "Enabled": {
                                                        "description": "Boolean value that indicates if the event subscription is enabled.",
                                                        "type": "boolean"
                                                    },
                                                    "EventCategoriesList": {
                                                        "description": "A lists of event categories.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "SnsTopicArn": {
                                                        "description": "The topic ARN of the AWS DMS event notification subscription.",
                                                        "type": "string"
                                                    },
                                                    "SourceIdsList": {
                                                        "description": "A list of source Ids for the event subscription.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "SourceType": {
                                                        "description": "<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | replication-server | security-group | migration-task</p>",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "<p>The status of the AWS DMS event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that AWS DMS no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                                                        "type": "string"
                                                    },
                                                    "SubscriptionCreationTime": {
                                                        "description": "The time the RDS event notification subscription was created.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Marker": {
                                            "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "Filters": {
                                        "description": "Filters applied to the action.",
                                        "items": {
                                            "description": "<p/>",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the filter.",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The filter value.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Marker": {
                                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                        "type": "string"
                                    },
                                    "MaxRecords": {
                                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                                        "type": "integer"
                                    },
                                    "SubscriptionName": {
                                        "description": "The name of the AWS DMS event subscription to be described.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeEvents": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": " Lists events for a given source identifier and source type. You can also specify a start and end time. For more information on AWS DMS events, see <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html\">Working with Events and Notifications</a> in the <i>AWS Database Migration User Guide.</i> ",
                "operationId": "DescribeEvents",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxRecords",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "Marker",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "properties": {
                                        "Events": {
                                            "description": "The events described.",
                                            "items": {
                                                "description": "<p/>",
                                                "properties": {
                                                    "Date": {
                                                        "description": "The date of the event.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "EventCategories": {
                                                        "description": "The event categories available for the specified source type.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "Message": {
                                                        "description": "The event message.",
                                                        "type": "string"
                                                    },
                                                    "SourceIdentifier": {
                                                        "description": "<p> The identifier of the event source. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it cannot end with a hyphen or contain two consecutive hyphens. </p> <p>Constraints:replication instance, endpoint, migration task</p>",
                                                        "type": "string"
                                                    },
                                                    "SourceType": {
                                                        "description": "<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | endpoint | migration-task</p>",
                                                        "enum": [
                                                            "replication-instance"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Marker": {
                                            "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "Duration": {
                                        "description": "The duration of the events to be listed.",
                                        "type": "integer"
                                    },
                                    "EndTime": {
                                        "description": "The end time for the events to be listed.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "EventCategories": {
                                        "description": "A list of event categories for a source type that you want to subscribe to.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "Filters": {
                                        "description": "Filters applied to the action.",
                                        "items": {
                                            "description": "<p/>",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the filter.",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The filter value.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Marker": {
                                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                        "type": "string"
                                    },
                                    "MaxRecords": {
                                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                                        "type": "integer"
                                    },
                                    "SourceIdentifier": {
                                        "description": " The identifier of the event source. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens. It cannot end with a hyphen or contain two consecutive hyphens. ",
                                        "type": "string"
                                    },
                                    "SourceType": {
                                        "description": "<p>The type of AWS DMS resource that generates events.</p> <p>Valid values: replication-instance | migration-task</p>",
                                        "enum": [
                                            "replication-instance"
                                        ],
                                        "type": "string"
                                    },
                                    "StartTime": {
                                        "description": "The start time for the events to be listed.",
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeOrderableReplicationInstances": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns information about the replication instance types that can be created in the specified region.",
                "operationId": "DescribeOrderableReplicationInstances",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxRecords",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "Marker",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {
                                        "Marker": "",
                                        "OrderableReplicationInstances": []
                                    },
                                    "properties": {
                                        "Marker": {
                                            "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                            "type": "string"
                                        },
                                        "OrderableReplicationInstances": {
                                            "description": "The order-able replication instances available.",
                                            "items": {
                                                "description": "<p/>",
                                                "properties": {
                                                    "DefaultAllocatedStorage": {
                                                        "description": "The default amount of storage (in gigabytes) that is allocated for the replication instance.",
                                                        "type": "integer"
                                                    },
                                                    "EngineVersion": {
                                                        "description": "The version of the replication engine.",
                                                        "type": "string"
                                                    },
                                                    "IncludedAllocatedStorage": {
                                                        "description": "The amount of storage (in gigabytes) that is allocated for the replication instance.",
                                                        "type": "integer"
                                                    },
                                                    "MaxAllocatedStorage": {
                                                        "description": "The minimum amount of storage (in gigabytes) that can be allocated for the replication instance.",
                                                        "type": "integer"
                                                    },
                                                    "MinAllocatedStorage": {
                                                        "description": "The minimum amount of storage (in gigabytes) that can be allocated for the replication instance.",
                                                        "type": "integer"
                                                    },
                                                    "ReplicationInstanceClass": {
                                                        "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                                                        "type": "string"
                                                    },
                                                    "StorageType": {
                                                        "description": "The type of storage used by the replication instance.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "Marker": "",
                                    "MaxRecords": 123
                                },
                                "properties": {
                                    "Marker": {
                                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                        "type": "string"
                                    },
                                    "MaxRecords": {
                                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeRefreshSchemasStatus": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns the status of the RefreshSchemas operation.",
                "operationId": "DescribeRefreshSchemasStatus",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {
                                        "RefreshSchemasStatus": {}
                                    },
                                    "properties": {
                                        "RefreshSchemasStatus": {
                                            "description": "The status of the schema.",
                                            "properties": {
                                                "EndpointArn": {
                                                    "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                                    "type": "string"
                                                },
                                                "LastFailureMessage": {
                                                    "description": "The last failure message for the schema.",
                                                    "type": "string"
                                                },
                                                "LastRefreshDate": {
                                                    "description": "The date the schema was last refreshed.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "ReplicationInstanceArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of the schema.",
                                                    "enum": [
                                                        "successful",
                                                        "failed",
                                                        "refreshing"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidResourceStateFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "EndpointArn": ""
                                },
                                "properties": {
                                    "EndpointArn": {
                                        "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "EndpointArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeReplicationInstanceTaskLogs": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns information about the task logs for the specified task.",
                "operationId": "DescribeReplicationInstanceTaskLogs",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxRecords",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "Marker",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Marker": {
                                            "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.",
                                            "type": "string"
                                        },
                                        "ReplicationInstanceArn": {
                                            "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                            "type": "string"
                                        },
                                        "ReplicationInstanceTaskLogs": {
                                            "description": "An array of replication task log metadata. Each member of the array contains the replication task name, ARN, and task log size (in bytes). ",
                                            "items": {
                                                "description": "Contains metadata for a replication instance task log.",
                                                "properties": {
                                                    "ReplicationInstanceTaskLogSize": {
                                                        "description": "The size, in bytes, of the replication task log.",
                                                        "type": "integer"
                                                    },
                                                    "ReplicationTaskArn": {
                                                        "description": "The Amazon Resource Name (ARN) of the replication task.",
                                                        "type": "string"
                                                    },
                                                    "ReplicationTaskName": {
                                                        "description": "The name of the replication task.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidResourceStateFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Marker": {
                                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.",
                                        "type": "string"
                                    },
                                    "MaxRecords": {
                                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                                        "type": "integer"
                                    },
                                    "ReplicationInstanceArn": {
                                        "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ReplicationInstanceArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeReplicationInstances": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns information about replication instances for your account in the current region.",
                "operationId": "DescribeReplicationInstances",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxRecords",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "Marker",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {
                                        "Marker": "",
                                        "ReplicationInstances": []
                                    },
                                    "properties": {
                                        "Marker": {
                                            "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                            "type": "string"
                                        },
                                        "ReplicationInstances": {
                                            "description": "The replication instances described.",
                                            "items": {
                                                "description": "<p/>",
                                                "properties": {
                                                    "AllocatedStorage": {
                                                        "description": "The amount of storage (in gigabytes) that is allocated for the replication instance.",
                                                        "type": "integer"
                                                    },
                                                    "AutoMinorVersionUpgrade": {
                                                        "description": "Boolean value indicating if minor version upgrades will be automatically applied to the instance.",
                                                        "type": "boolean"
                                                    },
                                                    "AvailabilityZone": {
                                                        "description": "The Availability Zone for the instance.",
                                                        "type": "string"
                                                    },
                                                    "DnsNameServers": {
                                                        "description": "The DNS name servers for the replication instance.",
                                                        "type": "string"
                                                    },
                                                    "EngineVersion": {
                                                        "description": "The engine version number of the replication instance.",
                                                        "type": "string"
                                                    },
                                                    "FreeUntil": {
                                                        "description": " The expiration date of the free replication instance that is part of the Free DMS program. ",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "InstanceCreateTime": {
                                                        "description": "The time the replication instance was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "KmsKeyId": {
                                                        "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                                        "type": "string"
                                                    },
                                                    "MultiAZ": {
                                                        "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. ",
                                                        "type": "boolean"
                                                    },
                                                    "PendingModifiedValues": {
                                                        "description": "The pending modification values.",
                                                        "properties": {
                                                            "AllocatedStorage": {
                                                                "description": "The amount of storage (in gigabytes) that is allocated for the replication instance.",
                                                                "type": "integer"
                                                            },
                                                            "EngineVersion": {
                                                                "description": "The engine version number of the replication instance.",
                                                                "type": "string"
                                                            },
                                                            "MultiAZ": {
                                                                "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. ",
                                                                "type": "boolean"
                                                            },
                                                            "ReplicationInstanceClass": {
                                                                "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "PreferredMaintenanceWindow": {
                                                        "description": "The maintenance window times for the replication instance.",
                                                        "type": "string"
                                                    },
                                                    "PubliclyAccessible": {
                                                        "description": " Specifies the accessibility options for the replication instance. A value of <code>true</code> represents an instance with a public IP address. A value of <code>false</code> represents an instance with a private IP address. The default value is <code>true</code>. ",
                                                        "type": "boolean"
                                                    },
                                                    "ReplicationInstanceArn": {
                                                        "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                                        "type": "string"
                                                    },
                                                    "ReplicationInstanceClass": {
                                                        "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                                                        "type": "string"
                                                    },
                                                    "ReplicationInstanceIdentifier": {
                                                        "description": "<p>The replication instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>myrepinstance</code> </p>",
                                                        "type": "string"
                                                    },
                                                    "ReplicationInstancePrivateIpAddress": {
                                                        "description": "The private IP address of the replication instance.",
                                                        "type": "string"
                                                    },
                                                    "ReplicationInstancePrivateIpAddresses": {
                                                        "description": "The private IP address of the replication instance.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ReplicationInstancePublicIpAddress": {
                                                        "description": "The public IP address of the replication instance.",
                                                        "type": "string"
                                                    },
                                                    "ReplicationInstancePublicIpAddresses": {
                                                        "description": "The public IP address of the replication instance.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ReplicationInstanceStatus": {
                                                        "description": "The status of the replication instance.",
                                                        "type": "string"
                                                    },
                                                    "ReplicationSubnetGroup": {
                                                        "description": "The subnet group for the replication instance.",
                                                        "properties": {
                                                            "ReplicationSubnetGroupDescription": {
                                                                "description": "The description of the replication subnet group.",
                                                                "type": "string"
                                                            },
                                                            "ReplicationSubnetGroupIdentifier": {
                                                                "description": "The identifier of the replication instance subnet group.",
                                                                "type": "string"
                                                            },
                                                            "SubnetGroupStatus": {
                                                                "description": "The status of the subnet group.",
                                                                "type": "string"
                                                            },
                                                            "Subnets": {
                                                                "description": "The subnets that are in the subnet group.",
                                                                "items": {
                                                                    "description": "<p/>",
                                                                    "properties": {
                                                                        "SubnetAvailabilityZone": {
                                                                            "description": "The Availability Zone of the subnet.",
                                                                            "properties": {
                                                                                "Name": {
                                                                                    "description": "The name of the availability zone.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "SubnetIdentifier": {
                                                                            "description": "The subnet identifier.",
                                                                            "type": "string"
                                                                        },
                                                                        "SubnetStatus": {
                                                                            "description": "The status of the subnet.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "VpcId": {
                                                                "description": "The ID of the VPC.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "SecondaryAvailabilityZone": {
                                                        "description": "The availability zone of the standby replication instance in a Multi-AZ deployment.",
                                                        "type": "string"
                                                    },
                                                    "VpcSecurityGroups": {
                                                        "description": "The VPC security group for the instance.",
                                                        "items": {
                                                            "description": "<p/>",
                                                            "properties": {
                                                                "Status": {
                                                                    "description": "The status of the VPC security group.",
                                                                    "type": "string"
                                                                },
                                                                "VpcSecurityGroupId": {
                                                                    "description": "The VPC security group Id.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "Filters": [
                                        {
                                            "Name": "string",
                                            "Values": [
                                                "string",
                                                "string"
                                            ]
                                        }
                                    ],
                                    "Marker": "",
                                    "MaxRecords": 123
                                },
                                "properties": {
                                    "Filters": {
                                        "description": "<p>Filters applied to the describe action.</p> <p>Valid filter names: replication-instance-arn | replication-instance-id | replication-instance-class | engine-version</p>",
                                        "items": {
                                            "description": "<p/>",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the filter.",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The filter value.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Marker": {
                                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                        "type": "string"
                                    },
                                    "MaxRecords": {
                                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeReplicationSubnetGroups": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns information about the replication subnet groups.",
                "operationId": "DescribeReplicationSubnetGroups",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxRecords",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "Marker",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {
                                        "Marker": "",
                                        "ReplicationSubnetGroups": []
                                    },
                                    "properties": {
                                        "Marker": {
                                            "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                            "type": "string"
                                        },
                                        "ReplicationSubnetGroups": {
                                            "description": "A description of the replication subnet groups.",
                                            "items": {
                                                "description": "<p/>",
                                                "properties": {
                                                    "ReplicationSubnetGroupDescription": {
                                                        "description": "The description of the replication subnet group.",
                                                        "type": "string"
                                                    },
                                                    "ReplicationSubnetGroupIdentifier": {
                                                        "description": "The identifier of the replication instance subnet group.",
                                                        "type": "string"
                                                    },
                                                    "SubnetGroupStatus": {
                                                        "description": "The status of the subnet group.",
                                                        "type": "string"
                                                    },
                                                    "Subnets": {
                                                        "description": "The subnets that are in the subnet group.",
                                                        "items": {
                                                            "description": "<p/>",
                                                            "properties": {
                                                                "SubnetAvailabilityZone": {
                                                                    "description": "The Availability Zone of the subnet.",
                                                                    "properties": {
                                                                        "Name": {
                                                                            "description": "The name of the availability zone.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "SubnetIdentifier": {
                                                                    "description": "The subnet identifier.",
                                                                    "type": "string"
                                                                },
                                                                "SubnetStatus": {
                                                                    "description": "The status of the subnet.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "VpcId": {
                                                        "description": "The ID of the VPC.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "Filters": [
                                        {
                                            "Name": "string",
                                            "Values": [
                                                "string",
                                                "string"
                                            ]
                                        }
                                    ],
                                    "Marker": "",
                                    "MaxRecords": 123
                                },
                                "properties": {
                                    "Filters": {
                                        "description": "Filters applied to the describe action.",
                                        "items": {
                                            "description": "<p/>",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the filter.",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The filter value.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Marker": {
                                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                        "type": "string"
                                    },
                                    "MaxRecords": {
                                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeReplicationTaskAssessmentResults": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns the task assessment results from Amazon S3. This action always returns the latest results.",
                "operationId": "DescribeReplicationTaskAssessmentResults",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxRecords",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "Marker",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "properties": {
                                        "BucketName": {
                                            "description": "- The Amazon S3 bucket where the task assessment report is located. ",
                                            "type": "string"
                                        },
                                        "Marker": {
                                            "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                            "type": "string"
                                        },
                                        "ReplicationTaskAssessmentResults": {
                                            "description": " The task assessment report. ",
                                            "items": {
                                                "description": " The task assessment report in JSON format. ",
                                                "properties": {
                                                    "AssessmentResults": {
                                                        "description": " The task assessment results in JSON format. ",
                                                        "type": "string"
                                                    },
                                                    "AssessmentResultsFile": {
                                                        "description": " The file containing the results of the task assessment. ",
                                                        "type": "string"
                                                    },
                                                    "AssessmentStatus": {
                                                        "description": " The status of the task assessment. ",
                                                        "type": "string"
                                                    },
                                                    "ReplicationTaskArn": {
                                                        "description": "The Amazon Resource Name (ARN) of the replication task. ",
                                                        "type": "string"
                                                    },
                                                    "ReplicationTaskIdentifier": {
                                                        "description": " The replication task identifier of the task on which the task assessment was run. ",
                                                        "type": "string"
                                                    },
                                                    "ReplicationTaskLastAssessmentDate": {
                                                        "description": "The date the task assessment was completed. ",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "S3ObjectUrl": {
                                                        "description": " The URL of the S3 object containing the task assessment results. ",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "Marker": {
                                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                        "type": "string"
                                    },
                                    "MaxRecords": {
                                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                                        "type": "integer"
                                    },
                                    "ReplicationTaskArn": {
                                        "description": "- The Amazon Resource Name (ARN) string that uniquely identifies the task. When this input parameter is specified the API will return only one result and ignore the values of the max-records and marker parameters. ",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeReplicationTasks": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns information about replication tasks for your account in the current region.",
                "operationId": "DescribeReplicationTasks",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxRecords",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "Marker",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {
                                        "Marker": "",
                                        "ReplicationTasks": []
                                    },
                                    "properties": {
                                        "Marker": {
                                            "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                            "type": "string"
                                        },
                                        "ReplicationTasks": {
                                            "description": "A description of the replication tasks.",
                                            "items": {
                                                "description": "<p/>",
                                                "properties": {
                                                    "CdcStartPosition": {
                                                        "description": "<p>Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p> The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position \"checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93\"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p>",
                                                        "type": "string"
                                                    },
                                                    "CdcStopPosition": {
                                                        "description": "<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:3018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 3018-02-09T12:12:12 “</p>",
                                                        "type": "string"
                                                    },
                                                    "LastFailureMessage": {
                                                        "description": "The last error (failure) message generated for the replication instance.",
                                                        "type": "string"
                                                    },
                                                    "MigrationType": {
                                                        "description": "The type of migration.",
                                                        "enum": [
                                                            "full-load",
                                                            "cdc",
                                                            "full-load-and-cdc"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "RecoveryCheckpoint": {
                                                        "description": "Indicates the last checkpoint that occurred during a change data capture (CDC) operation. You can provide this value to the <code>CdcStartPosition</code> parameter to start a CDC operation that begins at that checkpoint.",
                                                        "type": "string"
                                                    },
                                                    "ReplicationInstanceArn": {
                                                        "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                                        "type": "string"
                                                    },
                                                    "ReplicationTaskArn": {
                                                        "description": "The Amazon Resource Name (ARN) of the replication task.",
                                                        "type": "string"
                                                    },
                                                    "ReplicationTaskCreationDate": {
                                                        "description": "The date the replication task was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "ReplicationTaskIdentifier": {
                                                        "description": "<p>The user-assigned replication task identifier or name.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>",
                                                        "type": "string"
                                                    },
                                                    "ReplicationTaskSettings": {
                                                        "description": "The settings for the replication task.",
                                                        "type": "string"
                                                    },
                                                    "ReplicationTaskStartDate": {
                                                        "description": "The date the replication task is scheduled to start.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "ReplicationTaskStats": {
                                                        "description": "The statistics for the task, including elapsed time, tables loaded, and table errors.",
                                                        "properties": {
                                                            "ElapsedTimeMillis": {
                                                                "description": "The elapsed time of the task, in milliseconds.",
                                                                "type": "integer"
                                                            },
                                                            "FullLoadProgressPercent": {
                                                                "description": "The percent complete for the full load migration task.",
                                                                "type": "integer"
                                                            },
                                                            "TablesErrored": {
                                                                "description": "The number of errors that have occurred during this task.",
                                                                "type": "integer"
                                                            },
                                                            "TablesLoaded": {
                                                                "description": "The number of tables loaded for this task.",
                                                                "type": "integer"
                                                            },
                                                            "TablesLoading": {
                                                                "description": "The number of tables currently loading for this task.",
                                                                "type": "integer"
                                                            },
                                                            "TablesQueued": {
                                                                "description": "The number of tables queued for this task.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "SourceEndpointArn": {
                                                        "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The status of the replication task.",
                                                        "type": "string"
                                                    },
                                                    "StopReason": {
                                                        "description": "The reason the replication task was stopped.",
                                                        "type": "string"
                                                    },
                                                    "TableMappings": {
                                                        "description": "Table mappings specified in the task.",
                                                        "type": "string"
                                                    },
                                                    "TargetEndpointArn": {
                                                        "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "Filters": [
                                        {
                                            "Name": "string",
                                            "Values": [
                                                "string",
                                                "string"
                                            ]
                                        }
                                    ],
                                    "Marker": "",
                                    "MaxRecords": 123
                                },
                                "properties": {
                                    "Filters": {
                                        "description": "<p>Filters applied to the describe action.</p> <p>Valid filter names: replication-task-arn | replication-task-id | migration-type | endpoint-arn | replication-instance-arn</p>",
                                        "items": {
                                            "description": "<p/>",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the filter.",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The filter value.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Marker": {
                                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                        "type": "string"
                                    },
                                    "MaxRecords": {
                                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeSchemas": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Returns information about the schema for the specified endpoint.</p> <p/>",
                "operationId": "DescribeSchemas",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxRecords",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "Marker",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {
                                        "Marker": "",
                                        "Schemas": []
                                    },
                                    "properties": {
                                        "Marker": {
                                            "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                            "type": "string"
                                        },
                                        "Schemas": {
                                            "description": "The described schema.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidResourceStateFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "EndpointArn": "",
                                    "Marker": "",
                                    "MaxRecords": 123
                                },
                                "properties": {
                                    "EndpointArn": {
                                        "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                        "type": "string"
                                    },
                                    "Marker": {
                                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                        "type": "string"
                                    },
                                    "MaxRecords": {
                                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "EndpointArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeTableStatistics": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Returns table statistics on the database migration task, including table name, rows inserted, rows updated, and rows deleted.</p> <p>Note that the \"last updated\" column the DMS console only indicates the time that AWS DMS last updated the table statistics record for a table. It does not indicate the time of the last update to the table.</p>",
                "operationId": "DescribeTableStatistics",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxRecords",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "Marker",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {
                                        "Marker": "",
                                        "ReplicationTaskArn": "",
                                        "TableStatistics": []
                                    },
                                    "properties": {
                                        "Marker": {
                                            "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                            "type": "string"
                                        },
                                        "ReplicationTaskArn": {
                                            "description": "The Amazon Resource Name (ARN) of the replication task.",
                                            "type": "string"
                                        },
                                        "TableStatistics": {
                                            "description": "The table statistics.",
                                            "items": {
                                                "description": "<p/>",
                                                "properties": {
                                                    "Ddls": {
                                                        "description": "The Data Definition Language (DDL) used to build and modify the structure of your tables.",
                                                        "type": "integer"
                                                    },
                                                    "Deletes": {
                                                        "description": "The number of delete actions performed on a table.",
                                                        "type": "integer"
                                                    },
                                                    "FullLoadCondtnlChkFailedRows": {
                                                        "description": "The number of rows that failed conditional checks during the Full Load operation (valid only for DynamoDB as a target migrations).",
                                                        "type": "integer"
                                                    },
                                                    "FullLoadErrorRows": {
                                                        "description": "The number of rows that failed to load during the Full Load operation (valid only for DynamoDB as a target migrations).",
                                                        "type": "integer"
                                                    },
                                                    "FullLoadRows": {
                                                        "description": "The number of rows added during the Full Load operation.",
                                                        "type": "integer"
                                                    },
                                                    "Inserts": {
                                                        "description": "The number of insert actions performed on a table.",
                                                        "type": "integer"
                                                    },
                                                    "LastUpdateTime": {
                                                        "description": "The last time the table was updated.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "SchemaName": {
                                                        "description": "The schema name.",
                                                        "type": "string"
                                                    },
                                                    "TableName": {
                                                        "description": "The name of the table.",
                                                        "type": "string"
                                                    },
                                                    "TableState": {
                                                        "description": "<p>The state of the tables described.</p> <p>Valid states: Table does not exist | Before load | Full load | Table completed | Table cancelled | Table error | Table all | Table updates | Table is being reloaded</p>",
                                                        "type": "string"
                                                    },
                                                    "Updates": {
                                                        "description": "The number of update actions performed on a table.",
                                                        "type": "integer"
                                                    },
                                                    "ValidationFailedRecords": {
                                                        "description": "The number of records that failed validation.",
                                                        "type": "integer"
                                                    },
                                                    "ValidationPendingRecords": {
                                                        "description": "The number of records that have yet to be validated.",
                                                        "type": "integer"
                                                    },
                                                    "ValidationState": {
                                                        "description": "<p>The validation state of the table.</p> <p>The parameter can have the following values</p> <ul> <li> <p>Not enabled—Validation is not enabled for the table in the migration task.</p> </li> <li> <p>Pending records—Some records in the table are waiting for validation.</p> </li> <li> <p>Mismatched records—Some records in the table do not match between the source and target.</p> </li> <li> <p>Suspended records—Some records in the table could not be validated.</p> </li> <li> <p>No primary key—The table could not be validated because it had no primary key.</p> </li> <li> <p>Table error—The table was not validated because it was in an error state and some data was not migrated.</p> </li> <li> <p>Validated—All rows in the table were validated. If the table is updated, the status can change from Validated.</p> </li> <li> <p>Error—The table could not be validated because of an unexpected error.</p> </li> </ul>",
                                                        "type": "string"
                                                    },
                                                    "ValidationStateDetails": {
                                                        "description": "Additional details about the state of validation.",
                                                        "type": "string"
                                                    },
                                                    "ValidationSuspendedRecords": {
                                                        "description": "The number of records that could not be validated.",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidResourceStateFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "Marker": "",
                                    "MaxRecords": 123,
                                    "ReplicationTaskArn": ""
                                },
                                "properties": {
                                    "Filters": {
                                        "description": "<p>Filters applied to the describe table statistics action.</p> <p>Valid filter names: schema-name | table-name | table-state</p> <p>A combination of filters creates an AND condition where each record matches all specified filters.</p>",
                                        "items": {
                                            "description": "<p/>",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the filter.",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The filter value.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Marker": {
                                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                        "type": "string"
                                    },
                                    "MaxRecords": {
                                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 500.</p>",
                                        "type": "integer"
                                    },
                                    "ReplicationTaskArn": {
                                        "description": "The Amazon Resource Name (ARN) of the replication task.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ReplicationTaskArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ImportCertificate": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Uploads the specified certificate.",
                "operationId": "ImportCertificate",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "Certificate": {}
                                    },
                                    "properties": {
                                        "Certificate": {
                                            "description": "The certificate to be uploaded.",
                                            "properties": {
                                                "CertificateArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the certificate.",
                                                    "type": "string"
                                                },
                                                "CertificateCreationDate": {
                                                    "description": "The date that the certificate was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "CertificateIdentifier": {
                                                    "description": "The customer-assigned name of the certificate. Valid characters are A-z and 0-9.",
                                                    "type": "string"
                                                },
                                                "CertificateOwner": {
                                                    "description": "The owner of the certificate.",
                                                    "type": "string"
                                                },
                                                "CertificatePem": {
                                                    "description": "The contents of the .pem X.509 certificate file for the certificate.",
                                                    "type": "string"
                                                },
                                                "CertificateWallet": {
                                                    "description": "The location of the imported Oracle Wallet certificate for use with SSL.",
                                                    "type": "string"
                                                },
                                                "KeyLength": {
                                                    "description": "The key length of the cryptographic algorithm being used.",
                                                    "type": "integer"
                                                },
                                                "SigningAlgorithm": {
                                                    "description": "The signing algorithm for the certificate.",
                                                    "type": "string"
                                                },
                                                "ValidFromDate": {
                                                    "description": "The beginning date that the certificate is valid.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "ValidToDate": {
                                                    "description": "The final date that the certificate is valid.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceAlreadyExistsFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidCertificateFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceQuotaExceededFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "example": {
                                    "CertificateIdentifier": "",
                                    "CertificatePem": ""
                                },
                                "properties": {
                                    "CertificateIdentifier": {
                                        "description": "The customer-assigned name of the certificate. Valid characters are A-z and 0-9.",
                                        "type": "string"
                                    },
                                    "CertificatePem": {
                                        "description": "The contents of the .pem X.509 certificate file for the certificate.",
                                        "type": "string"
                                    },
                                    "CertificateWallet": {
                                        "description": "The location of the imported Oracle Wallet certificate for use with SSL.",
                                        "type": "string"
                                    },
                                    "Tags": {
                                        "description": "The tags associated with the certificate.",
                                        "items": {
                                            "description": "<p/>",
                                            "properties": {
                                                "Key": {
                                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "CertificateIdentifier"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListTagsForResource": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Lists all tags for an AWS DMS resource.",
                "operationId": "ListTagsForResource",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {
                                        "TagList": []
                                    },
                                    "properties": {
                                        "TagList": {
                                            "description": "A list of tags for the resource.",
                                            "items": {
                                                "description": "<p/>",
                                                "properties": {
                                                    "Key": {
                                                        "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "ResourceArn": ""
                                },
                                "properties": {
                                    "ResourceArn": {
                                        "description": "The Amazon Resource Name (ARN) string that uniquely identifies the AWS DMS resource.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ResourceArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ModifyEndpoint": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Modifies the specified endpoint.",
                "operationId": "ModifyEndpoint",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {
                                        "Endpoint": {}
                                    },
                                    "properties": {
                                        "Endpoint": {
                                            "description": "The modified endpoint.",
                                            "properties": {
                                                "CertificateArn": {
                                                    "description": "The Amazon Resource Name (ARN) used for SSL connection to the endpoint.",
                                                    "type": "string"
                                                },
                                                "DatabaseName": {
                                                    "description": "The name of the database at the endpoint.",
                                                    "type": "string"
                                                },
                                                "DmsTransferSettings": {
                                                    "description": "<p>The settings in JSON format for the DMS transfer type of source endpoint. </p> <p>Possible attributes include the following:</p> <ul> <li> <p> <code>serviceAccessRoleArn</code> - The IAM role that has permission to access the Amazon S3 bucket.</p> </li> <li> <p> <code>bucketName</code> - The name of the S3 bucket to use.</p> </li> <li> <p> <code>compressionType</code> - An optional parameter to use GZIP to compress the target files. To use GZIP, set this value to <code>NONE</code> (the default). To keep the files uncompressed, don't use this value. </p> </li> </ul> <p>Shorthand syntax for these attributes is as follows: <code>ServiceAccessRoleArn=string,BucketName=string,CompressionType=string</code> </p> <p>JSON syntax for these attributes is as follows: <code>{ \"ServiceAccessRoleArn\": \"string\", \"BucketName\": \"string\", \"CompressionType\": \"none\"|\"gzip\" } </code> </p>",
                                                    "properties": {
                                                        "BucketName": {
                                                            "description": " The name of the S3 bucket to use. ",
                                                            "type": "string"
                                                        },
                                                        "ServiceAccessRoleArn": {
                                                            "description": " The IAM role that has permission to access the Amazon S3 bucket. ",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "DynamoDbSettings": {
                                                    "description": "The settings for the target DynamoDB database. For more information, see the <code>DynamoDBSettings</code> structure.",
                                                    "properties": {
                                                        "ServiceAccessRoleArn": {
                                                            "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "ServiceAccessRoleArn"
                                                    ],
                                                    "type": "object"
                                                },
                                                "ElasticsearchSettings": {
                                                    "description": "The settings for the Elasticsearch source endpoint. For more information, see the <code>ElasticsearchSettings</code> structure.",
                                                    "properties": {
                                                        "EndpointUri": {
                                                            "description": "The endpoint for the ElasticSearch cluster.",
                                                            "type": "string"
                                                        },
                                                        "ErrorRetryDuration": {
                                                            "description": "The maximum number of seconds that DMS retries failed API requests to the Elasticsearch cluster.",
                                                            "type": "integer"
                                                        },
                                                        "FullLoadErrorPercentage": {
                                                            "description": "The maximum percentage of records that can fail to be written before a full load operation stops. ",
                                                            "type": "integer"
                                                        },
                                                        "ServiceAccessRoleArn": {
                                                            "description": "The Amazon Resource Name (ARN) used by service to access the IAM role.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "ServiceAccessRoleArn",
                                                        "EndpointUri"
                                                    ],
                                                    "type": "object"
                                                },
                                                "EndpointArn": {
                                                    "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                                    "type": "string"
                                                },
                                                "EndpointIdentifier": {
                                                    "description": "The database endpoint identifier. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.",
                                                    "type": "string"
                                                },
                                                "EndpointType": {
                                                    "description": "The type of endpoint.",
                                                    "enum": [
                                                        "source",
                                                        "target"
                                                    ],
                                                    "type": "string"
                                                },
                                                "EngineDisplayName": {
                                                    "description": "The expanded name for the engine name. For example, if the <code>EngineName</code> parameter is \"aurora,\" this value would be \"Amazon Aurora MySQL.\"",
                                                    "type": "string"
                                                },
                                                "EngineName": {
                                                    "description": "The database engine name. Valid values, depending on the EndPointType, include mysql, oracle, postgres, mariadb, aurora, aurora-postgresql, redshift, s3, db2, azuredb, sybase, sybase, dynamodb, mongodb, and sqlserver.",
                                                    "type": "string"
                                                },
                                                "ExternalId": {
                                                    "description": " Value returned by a call to CreateEndpoint that can be used for cross-account validation. Use it on a subsequent call to CreateEndpoint to create the endpoint with a cross-account. ",
                                                    "type": "string"
                                                },
                                                "ExternalTableDefinition": {
                                                    "description": "The external table definition.",
                                                    "type": "string"
                                                },
                                                "ExtraConnectionAttributes": {
                                                    "description": "Additional connection attributes used to connect to the endpoint.",
                                                    "type": "string"
                                                },
                                                "KinesisSettings": {
                                                    "description": "The settings for the Amazon Kinesis source endpoint. For more information, see the <code>KinesisSettings</code> structure.",
                                                    "properties": {
                                                        "MessageFormat": {
                                                            "description": "The output format for the records created on the endpoint. The message format is <code>JSON</code>.",
                                                            "enum": [
                                                                "json"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "ServiceAccessRoleArn": {
                                                            "description": "The Amazon Resource Name (ARN) for the IAM role that DMS uses to write to the Amazon Kinesis data stream.",
                                                            "type": "string"
                                                        },
                                                        "StreamArn": {
                                                            "description": "The Amazon Resource Name (ARN) for the Amazon Kinesis Data Streams endpoint.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "KmsKeyId": {
                                                    "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                                    "type": "string"
                                                },
                                                "MongoDbSettings": {
                                                    "description": "The settings for the MongoDB source endpoint. For more information, see the <code>MongoDbSettings</code> structure.",
                                                    "properties": {
                                                        "AuthMechanism": {
                                                            "description": "<p> The authentication mechanism you use to access the MongoDB source endpoint.</p> <p>Valid values: DEFAULT, MONGODB_CR, SCRAM_SHA_1 </p> <p>DEFAULT – For MongoDB version 2.x, use MONGODB_CR. For MongoDB version 3.x, use SCRAM_SHA_1. This attribute is not used when authType=No.</p>",
                                                            "enum": [
                                                                "default",
                                                                "mongodb_cr",
                                                                "scram_sha_1"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "AuthSource": {
                                                            "description": "<p> The MongoDB database name. This attribute is not used when <code>authType=NO</code>. </p> <p>The default is admin.</p>",
                                                            "type": "string"
                                                        },
                                                        "AuthType": {
                                                            "description": "<p> The authentication type you use to access the MongoDB source endpoint.</p> <p>Valid values: NO, PASSWORD </p> <p>When NO is selected, user name and password parameters are not used and can be empty. </p>",
                                                            "enum": [
                                                                "no",
                                                                "password"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "DatabaseName": {
                                                            "description": " The database name on the MongoDB source endpoint. ",
                                                            "type": "string"
                                                        },
                                                        "DocsToInvestigate": {
                                                            "description": "<p> Indicates the number of documents to preview to determine the document organization. Use this attribute when <code>NestingLevel</code> is set to ONE. </p> <p>Must be a positive value greater than 0. Default value is 1000.</p>",
                                                            "type": "string"
                                                        },
                                                        "ExtractDocId": {
                                                            "description": "<p> Specifies the document ID. Use this attribute when <code>NestingLevel</code> is set to NONE. </p> <p>Default value is false. </p>",
                                                            "type": "string"
                                                        },
                                                        "KmsKeyId": {
                                                            "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                                            "type": "string"
                                                        },
                                                        "NestingLevel": {
                                                            "description": "<p> Specifies either document or table mode. </p> <p>Valid values: NONE, ONE</p> <p>Default value is NONE. Specify NONE to use document mode. Specify ONE to use table mode.</p>",
                                                            "enum": [
                                                                "none",
                                                                "one"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "Password": {
                                                            "description": " The password for the user account you use to access the MongoDB source endpoint. ",
                                                            "format": "password",
                                                            "type": "string"
                                                        },
                                                        "Port": {
                                                            "description": " The port value for the MongoDB source endpoint. ",
                                                            "type": "integer"
                                                        },
                                                        "ServerName": {
                                                            "description": " The name of the server on the MongoDB source endpoint. ",
                                                            "type": "string"
                                                        },
                                                        "Username": {
                                                            "description": "The user name you use to access the MongoDB source endpoint. ",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Port": {
                                                    "description": "The port value used to access the endpoint.",
                                                    "type": "integer"
                                                },
                                                "S3Settings": {
                                                    "description": "The settings for the S3 target endpoint. For more information, see the <code>S3Settings</code> structure.",
                                                    "properties": {
                                                        "BucketFolder": {
                                                            "description": " An optional parameter to set a folder name in the S3 bucket. If provided, tables are created in the path &lt;bucketFolder&gt;/&lt;schema_name&gt;/&lt;table_name&gt;/. If this parameter is not specified, then the path used is &lt;schema_name&gt;/&lt;table_name&gt;/. ",
                                                            "type": "string"
                                                        },
                                                        "BucketName": {
                                                            "description": " The name of the S3 bucket. ",
                                                            "type": "string"
                                                        },
                                                        "CompressionType": {
                                                            "description": " An optional parameter to use GZIP to compress the target files. Set to GZIP to compress the target files. Set to NONE (the default) or do not use to leave the files uncompressed. ",
                                                            "enum": [
                                                                "none",
                                                                "gzip"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "CsvDelimiter": {
                                                            "description": " The delimiter used to separate columns in the source files. The default is a comma. ",
                                                            "type": "string"
                                                        },
                                                        "CsvRowDelimiter": {
                                                            "description": " The delimiter used to separate rows in the source files. The default is a carriage return (\\n). ",
                                                            "type": "string"
                                                        },
                                                        "ExternalTableDefinition": {
                                                            "description": " The external table definition. ",
                                                            "type": "string"
                                                        },
                                                        "ServiceAccessRoleArn": {
                                                            "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "ServerName": {
                                                    "description": "The name of the server at the endpoint.",
                                                    "type": "string"
                                                },
                                                "ServiceAccessRoleArn": {
                                                    "description": "The Amazon Resource Name (ARN) used by the service access IAM role.",
                                                    "type": "string"
                                                },
                                                "SslMode": {
                                                    "description": "<p>The SSL mode used to connect to the endpoint.</p> <p>SSL mode can be one of four values: none, require, verify-ca, verify-full. </p> <p>The default value is none.</p>",
                                                    "enum": [
                                                        "none",
                                                        "require",
                                                        "verify-ca",
                                                        "verify-full"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of the endpoint.",
                                                    "type": "string"
                                                },
                                                "Username": {
                                                    "description": "The user name used to connect to the endpoint.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidResourceStateFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceAlreadyExistsFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "KMSKeyNotAccessibleFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "AccessDeniedFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "CertificateArn": "",
                                    "DatabaseName": "",
                                    "EndpointArn": "",
                                    "EndpointIdentifier": "",
                                    "EndpointType": "source",
                                    "EngineName": "",
                                    "ExtraConnectionAttributes": "",
                                    "Password": "",
                                    "Port": 123,
                                    "ServerName": "",
                                    "SslMode": "require",
                                    "Username": ""
                                },
                                "properties": {
                                    "CertificateArn": {
                                        "description": "The Amazon Resource Name (ARN) of the certificate used for SSL connection.",
                                        "type": "string"
                                    },
                                    "DatabaseName": {
                                        "description": "The name of the endpoint database.",
                                        "type": "string"
                                    },
                                    "DmsTransferSettings": {
                                        "description": "<p>The settings in JSON format for the DMS transfer type of source endpoint. </p> <p>Attributes include the following:</p> <ul> <li> <p>serviceAccessRoleArn - The IAM role that has permission to access the Amazon S3 bucket.</p> </li> <li> <p>BucketName - The name of the S3 bucket to use.</p> </li> <li> <p>compressionType - An optional parameter to use GZIP to compress the target files. Set to NONE (the default) or do not use to leave the files uncompressed.</p> </li> </ul> <p>Shorthand syntax: ServiceAccessRoleArn=string ,BucketName=string,CompressionType=string</p> <p>JSON syntax:</p> <p> { \"ServiceAccessRoleArn\": \"string\", \"BucketName\": \"string\", \"CompressionType\": \"none\"|\"gzip\" } </p>",
                                        "properties": {
                                            "BucketName": {
                                                "description": " The name of the S3 bucket to use. ",
                                                "type": "string"
                                            },
                                            "ServiceAccessRoleArn": {
                                                "description": " The IAM role that has permission to access the Amazon S3 bucket. ",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "DynamoDbSettings": {
                                        "description": "Settings in JSON format for the target Amazon DynamoDB endpoint. For more information about the available settings, see <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.DynamoDB.html\">Using Object Mapping to Migrate Data to DynamoDB</a> in the <i>AWS Database Migration Service User Guide.</i> ",
                                        "properties": {
                                            "ServiceAccessRoleArn": {
                                                "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "ServiceAccessRoleArn"
                                        ],
                                        "type": "object"
                                    },
                                    "ElasticsearchSettings": {
                                        "description": "Settings in JSON format for the target Elasticsearch endpoint. For more information about the available settings, see <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Elasticsearch.html#CHAP_Target.Elasticsearch.Configuration\">Extra Connection Attributes When Using Elasticsearch as a Target for AWS DMS</a> in the <i>AWS Database Migration User Guide.</i> ",
                                        "properties": {
                                            "EndpointUri": {
                                                "description": "The endpoint for the ElasticSearch cluster.",
                                                "type": "string"
                                            },
                                            "ErrorRetryDuration": {
                                                "description": "The maximum number of seconds that DMS retries failed API requests to the Elasticsearch cluster.",
                                                "type": "integer"
                                            },
                                            "FullLoadErrorPercentage": {
                                                "description": "The maximum percentage of records that can fail to be written before a full load operation stops. ",
                                                "type": "integer"
                                            },
                                            "ServiceAccessRoleArn": {
                                                "description": "The Amazon Resource Name (ARN) used by service to access the IAM role.",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "ServiceAccessRoleArn",
                                            "EndpointUri"
                                        ],
                                        "type": "object"
                                    },
                                    "EndpointArn": {
                                        "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                        "type": "string"
                                    },
                                    "EndpointIdentifier": {
                                        "description": "The database endpoint identifier. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.",
                                        "type": "string"
                                    },
                                    "EndpointType": {
                                        "description": "The type of endpoint.",
                                        "enum": [
                                            "source",
                                            "target"
                                        ],
                                        "type": "string"
                                    },
                                    "EngineName": {
                                        "description": "The type of engine for the endpoint. Valid values, depending on the EndPointType, include mysql, oracle, postgres, mariadb, aurora, aurora-postgresql, redshift, s3, db2, azuredb, sybase, sybase, dynamodb, mongodb, and sqlserver.",
                                        "type": "string"
                                    },
                                    "ExternalTableDefinition": {
                                        "description": "The external table definition.",
                                        "type": "string"
                                    },
                                    "ExtraConnectionAttributes": {
                                        "description": "Additional attributes associated with the connection. To reset this parameter, pass the empty string (\"\") as an argument.",
                                        "type": "string"
                                    },
                                    "KinesisSettings": {
                                        "description": "Settings in JSON format for the target Amazon Kinesis Data Streams endpoint. For more information about the available settings, see <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Kinesis.html#CHAP_Target.Kinesis.ObjectMapping \">Using Object Mapping to Migrate Data to a Kinesis Data Stream</a> in the <i>AWS Database Migration User Guide.</i> ",
                                        "properties": {
                                            "MessageFormat": {
                                                "description": "The output format for the records created on the endpoint. The message format is <code>JSON</code>.",
                                                "enum": [
                                                    "json"
                                                ],
                                                "type": "string"
                                            },
                                            "ServiceAccessRoleArn": {
                                                "description": "The Amazon Resource Name (ARN) for the IAM role that DMS uses to write to the Amazon Kinesis data stream.",
                                                "type": "string"
                                            },
                                            "StreamArn": {
                                                "description": "The Amazon Resource Name (ARN) for the Amazon Kinesis Data Streams endpoint.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "MongoDbSettings": {
                                        "description": "Settings in JSON format for the source MongoDB endpoint. For more information about the available settings, see the configuration properties section in <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.MongoDB.html\"> Using MongoDB as a Target for AWS Database Migration Service</a> in the <i>AWS Database Migration Service User Guide.</i> ",
                                        "properties": {
                                            "AuthMechanism": {
                                                "description": "<p> The authentication mechanism you use to access the MongoDB source endpoint.</p> <p>Valid values: DEFAULT, MONGODB_CR, SCRAM_SHA_1 </p> <p>DEFAULT – For MongoDB version 2.x, use MONGODB_CR. For MongoDB version 3.x, use SCRAM_SHA_1. This attribute is not used when authType=No.</p>",
                                                "enum": [
                                                    "default",
                                                    "mongodb_cr",
                                                    "scram_sha_1"
                                                ],
                                                "type": "string"
                                            },
                                            "AuthSource": {
                                                "description": "<p> The MongoDB database name. This attribute is not used when <code>authType=NO</code>. </p> <p>The default is admin.</p>",
                                                "type": "string"
                                            },
                                            "AuthType": {
                                                "description": "<p> The authentication type you use to access the MongoDB source endpoint.</p> <p>Valid values: NO, PASSWORD </p> <p>When NO is selected, user name and password parameters are not used and can be empty. </p>",
                                                "enum": [
                                                    "no",
                                                    "password"
                                                ],
                                                "type": "string"
                                            },
                                            "DatabaseName": {
                                                "description": " The database name on the MongoDB source endpoint. ",
                                                "type": "string"
                                            },
                                            "DocsToInvestigate": {
                                                "description": "<p> Indicates the number of documents to preview to determine the document organization. Use this attribute when <code>NestingLevel</code> is set to ONE. </p> <p>Must be a positive value greater than 0. Default value is 1000.</p>",
                                                "type": "string"
                                            },
                                            "ExtractDocId": {
                                                "description": "<p> Specifies the document ID. Use this attribute when <code>NestingLevel</code> is set to NONE. </p> <p>Default value is false. </p>",
                                                "type": "string"
                                            },
                                            "KmsKeyId": {
                                                "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                                "type": "string"
                                            },
                                            "NestingLevel": {
                                                "description": "<p> Specifies either document or table mode. </p> <p>Valid values: NONE, ONE</p> <p>Default value is NONE. Specify NONE to use document mode. Specify ONE to use table mode.</p>",
                                                "enum": [
                                                    "none",
                                                    "one"
                                                ],
                                                "type": "string"
                                            },
                                            "Password": {
                                                "description": " The password for the user account you use to access the MongoDB source endpoint. ",
                                                "format": "password",
                                                "type": "string"
                                            },
                                            "Port": {
                                                "description": " The port value for the MongoDB source endpoint. ",
                                                "type": "integer"
                                            },
                                            "ServerName": {
                                                "description": " The name of the server on the MongoDB source endpoint. ",
                                                "type": "string"
                                            },
                                            "Username": {
                                                "description": "The user name you use to access the MongoDB source endpoint. ",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Password": {
                                        "description": "The password to be used to login to the endpoint database.",
                                        "format": "password",
                                        "type": "string"
                                    },
                                    "Port": {
                                        "description": "The port used by the endpoint database.",
                                        "type": "integer"
                                    },
                                    "S3Settings": {
                                        "description": "Settings in JSON format for the target Amazon S3 endpoint. For more information about the available settings, see <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html#CHAP_Target.S3.Configuring\">Extra Connection Attributes When Using Amazon S3 as a Target for AWS DMS</a> in the <i>AWS Database Migration Service User Guide.</i> ",
                                        "properties": {
                                            "BucketFolder": {
                                                "description": " An optional parameter to set a folder name in the S3 bucket. If provided, tables are created in the path &lt;bucketFolder&gt;/&lt;schema_name&gt;/&lt;table_name&gt;/. If this parameter is not specified, then the path used is &lt;schema_name&gt;/&lt;table_name&gt;/. ",
                                                "type": "string"
                                            },
                                            "BucketName": {
                                                "description": " The name of the S3 bucket. ",
                                                "type": "string"
                                            },
                                            "CompressionType": {
                                                "description": " An optional parameter to use GZIP to compress the target files. Set to GZIP to compress the target files. Set to NONE (the default) or do not use to leave the files uncompressed. ",
                                                "enum": [
                                                    "none",
                                                    "gzip"
                                                ],
                                                "type": "string"
                                            },
                                            "CsvDelimiter": {
                                                "description": " The delimiter used to separate columns in the source files. The default is a comma. ",
                                                "type": "string"
                                            },
                                            "CsvRowDelimiter": {
                                                "description": " The delimiter used to separate rows in the source files. The default is a carriage return (\\n). ",
                                                "type": "string"
                                            },
                                            "ExternalTableDefinition": {
                                                "description": " The external table definition. ",
                                                "type": "string"
                                            },
                                            "ServiceAccessRoleArn": {
                                                "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "ServerName": {
                                        "description": "The name of the server where the endpoint database resides.",
                                        "type": "string"
                                    },
                                    "ServiceAccessRoleArn": {
                                        "description": " The Amazon Resource Name (ARN) for the service access role you want to use to modify the endpoint. ",
                                        "type": "string"
                                    },
                                    "SslMode": {
                                        "description": "<p>The SSL mode to be used.</p> <p>SSL mode can be one of four values: none, require, verify-ca, verify-full. </p> <p>The default value is none.</p>",
                                        "enum": [
                                            "none",
                                            "require",
                                            "verify-ca",
                                            "verify-full"
                                        ],
                                        "type": "string"
                                    },
                                    "Username": {
                                        "description": "The user name to be used to login to the endpoint database.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "EndpointArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ModifyEventSubscription": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Modifies an existing AWS DMS event notification subscription. ",
                "operationId": "ModifyEventSubscription",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "properties": {
                                        "EventSubscription": {
                                            "description": "The modified event subscription.",
                                            "properties": {
                                                "CustSubscriptionId": {
                                                    "description": "The AWS DMS event notification subscription Id.",
                                                    "type": "string"
                                                },
                                                "CustomerAwsId": {
                                                    "description": "The AWS customer account associated with the AWS DMS event notification subscription.",
                                                    "type": "string"
                                                },
                                                "Enabled": {
                                                    "description": "Boolean value that indicates if the event subscription is enabled.",
                                                    "type": "boolean"
                                                },
                                                "EventCategoriesList": {
                                                    "description": "A lists of event categories.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "SnsTopicArn": {
                                                    "description": "The topic ARN of the AWS DMS event notification subscription.",
                                                    "type": "string"
                                                },
                                                "SourceIdsList": {
                                                    "description": "A list of source Ids for the event subscription.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "SourceType": {
                                                    "description": "<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | replication-server | security-group | migration-task</p>",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "<p>The status of the AWS DMS event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that AWS DMS no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                                                    "type": "string"
                                                },
                                                "SubscriptionCreationTime": {
                                                    "description": "The time the RDS event notification subscription was created.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceQuotaExceededFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "SNSInvalidTopicFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "SNSNoAuthorizationFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "Enabled": {
                                        "description": " A Boolean value; set to <b>true</b> to activate the subscription. ",
                                        "type": "boolean"
                                    },
                                    "EventCategories": {
                                        "description": " A list of event categories for a source type that you want to subscribe to. Use the <code>DescribeEventCategories</code> action to see a list of event categories. ",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "SnsTopicArn": {
                                        "description": " The Amazon Resource Name (ARN) of the Amazon SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.",
                                        "type": "string"
                                    },
                                    "SourceType": {
                                        "description": "<p> The type of AWS DMS resource that generates the events you want to subscribe to. </p> <p>Valid values: replication-instance | migration-task</p>",
                                        "type": "string"
                                    },
                                    "SubscriptionName": {
                                        "description": "The name of the AWS DMS event notification subscription to be modified.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SubscriptionName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ModifyReplicationInstance": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Modifies the replication instance to apply new settings. You can change one or more parameters by specifying these parameters and the new values in the request.</p> <p>Some settings are applied during the maintenance window.</p> <p/>",
                "operationId": "ModifyReplicationInstance",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {
                                        "ReplicationInstance": {
                                            "AllocatedStorage": 5,
                                            "AutoMinorVersionUpgrade": true,
                                            "EngineVersion": "1.5.0",
                                            "KmsKeyId": "arn:aws:kms:us-east-1:123456789012:key/4c1731d6-5435-ed4d-be13-d53411a7cfbd",
                                            "PendingModifiedValues": {},
                                            "PreferredMaintenanceWindow": "sun:06:00-sun:14:00",
                                            "PubliclyAccessible": true,
                                            "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
                                            "ReplicationInstanceClass": "dms.t2.micro",
                                            "ReplicationInstanceIdentifier": "test-rep-1",
                                            "ReplicationInstanceStatus": "available",
                                            "ReplicationSubnetGroup": {
                                                "ReplicationSubnetGroupDescription": "default",
                                                "ReplicationSubnetGroupIdentifier": "default",
                                                "SubnetGroupStatus": "Complete",
                                                "Subnets": [
                                                    {
                                                        "SubnetAvailabilityZone": {
                                                            "Name": "us-east-1d"
                                                        },
                                                        "SubnetIdentifier": "subnet-f6dd91af",
                                                        "SubnetStatus": "Active"
                                                    },
                                                    {
                                                        "SubnetAvailabilityZone": {
                                                            "Name": "us-east-1b"
                                                        },
                                                        "SubnetIdentifier": "subnet-3605751d",
                                                        "SubnetStatus": "Active"
                                                    },
                                                    {
                                                        "SubnetAvailabilityZone": {
                                                            "Name": "us-east-1c"
                                                        },
                                                        "SubnetIdentifier": "subnet-c2daefb5",
                                                        "SubnetStatus": "Active"
                                                    },
                                                    {
                                                        "SubnetAvailabilityZone": {
                                                            "Name": "us-east-1e"
                                                        },
                                                        "SubnetIdentifier": "subnet-85e90cb8",
                                                        "SubnetStatus": "Active"
                                                    }
                                                ],
                                                "VpcId": "vpc-6741a603"
                                            }
                                        }
                                    },
                                    "properties": {
                                        "ReplicationInstance": {
                                            "description": "The modified replication instance.",
                                            "properties": {
                                                "AllocatedStorage": {
                                                    "description": "The amount of storage (in gigabytes) that is allocated for the replication instance.",
                                                    "type": "integer"
                                                },
                                                "AutoMinorVersionUpgrade": {
                                                    "description": "Boolean value indicating if minor version upgrades will be automatically applied to the instance.",
                                                    "type": "boolean"
                                                },
                                                "AvailabilityZone": {
                                                    "description": "The Availability Zone for the instance.",
                                                    "type": "string"
                                                },
                                                "DnsNameServers": {
                                                    "description": "The DNS name servers for the replication instance.",
                                                    "type": "string"
                                                },
                                                "EngineVersion": {
                                                    "description": "The engine version number of the replication instance.",
                                                    "type": "string"
                                                },
                                                "FreeUntil": {
                                                    "description": " The expiration date of the free replication instance that is part of the Free DMS program. ",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "InstanceCreateTime": {
                                                    "description": "The time the replication instance was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "KmsKeyId": {
                                                    "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                                    "type": "string"
                                                },
                                                "MultiAZ": {
                                                    "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. ",
                                                    "type": "boolean"
                                                },
                                                "PendingModifiedValues": {
                                                    "description": "The pending modification values.",
                                                    "properties": {
                                                        "AllocatedStorage": {
                                                            "description": "The amount of storage (in gigabytes) that is allocated for the replication instance.",
                                                            "type": "integer"
                                                        },
                                                        "EngineVersion": {
                                                            "description": "The engine version number of the replication instance.",
                                                            "type": "string"
                                                        },
                                                        "MultiAZ": {
                                                            "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. ",
                                                            "type": "boolean"
                                                        },
                                                        "ReplicationInstanceClass": {
                                                            "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "PreferredMaintenanceWindow": {
                                                    "description": "The maintenance window times for the replication instance.",
                                                    "type": "string"
                                                },
                                                "PubliclyAccessible": {
                                                    "description": " Specifies the accessibility options for the replication instance. A value of <code>true</code> represents an instance with a public IP address. A value of <code>false</code> represents an instance with a private IP address. The default value is <code>true</code>. ",
                                                    "type": "boolean"
                                                },
                                                "ReplicationInstanceArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                                    "type": "string"
                                                },
                                                "ReplicationInstanceClass": {
                                                    "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                                                    "type": "string"
                                                },
                                                "ReplicationInstanceIdentifier": {
                                                    "description": "<p>The replication instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>myrepinstance</code> </p>",
                                                    "type": "string"
                                                },
                                                "ReplicationInstancePrivateIpAddress": {
                                                    "description": "The private IP address of the replication instance.",
                                                    "type": "string"
                                                },
                                                "ReplicationInstancePrivateIpAddresses": {
                                                    "description": "The private IP address of the replication instance.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ReplicationInstancePublicIpAddress": {
                                                    "description": "The public IP address of the replication instance.",
                                                    "type": "string"
                                                },
                                                "ReplicationInstancePublicIpAddresses": {
                                                    "description": "The public IP address of the replication instance.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ReplicationInstanceStatus": {
                                                    "description": "The status of the replication instance.",
                                                    "type": "string"
                                                },
                                                "ReplicationSubnetGroup": {
                                                    "description": "The subnet group for the replication instance.",
                                                    "properties": {
                                                        "ReplicationSubnetGroupDescription": {
                                                            "description": "The description of the replication subnet group.",
                                                            "type": "string"
                                                        },
                                                        "ReplicationSubnetGroupIdentifier": {
                                                            "description": "The identifier of the replication instance subnet group.",
                                                            "type": "string"
                                                        },
                                                        "SubnetGroupStatus": {
                                                            "description": "The status of the subnet group.",
                                                            "type": "string"
                                                        },
                                                        "Subnets": {
                                                            "description": "The subnets that are in the subnet group.",
                                                            "items": {
                                                                "description": "<p/>",
                                                                "properties": {
                                                                    "SubnetAvailabilityZone": {
                                                                        "description": "The Availability Zone of the subnet.",
                                                                        "properties": {
                                                                            "Name": {
                                                                                "description": "The name of the availability zone.",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "SubnetIdentifier": {
                                                                        "description": "The subnet identifier.",
                                                                        "type": "string"
                                                                    },
                                                                    "SubnetStatus": {
                                                                        "description": "The status of the subnet.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "VpcId": {
                                                            "description": "The ID of the VPC.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "SecondaryAvailabilityZone": {
                                                    "description": "The availability zone of the standby replication instance in a Multi-AZ deployment.",
                                                    "type": "string"
                                                },
                                                "VpcSecurityGroups": {
                                                    "description": "The VPC security group for the instance.",
                                                    "items": {
                                                        "description": "<p/>",
                                                        "properties": {
                                                            "Status": {
                                                                "description": "The status of the VPC security group.",
                                                                "type": "string"
                                                            },
                                                            "VpcSecurityGroupId": {
                                                                "description": "The VPC security group Id.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidResourceStateFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceAlreadyExistsFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InsufficientResourceCapacityFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "StorageQuotaExceededFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "UpgradeDependencyFailureFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "AllocatedStorage": 123,
                                    "AllowMajorVersionUpgrade": true,
                                    "ApplyImmediately": true,
                                    "AutoMinorVersionUpgrade": true,
                                    "EngineVersion": "1.5.0",
                                    "MultiAZ": true,
                                    "PreferredMaintenanceWindow": "sun:06:00-sun:14:00",
                                    "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
                                    "ReplicationInstanceClass": "dms.t2.micro",
                                    "ReplicationInstanceIdentifier": "test-rep-1",
                                    "VpcSecurityGroupIds": []
                                },
                                "properties": {
                                    "AllocatedStorage": {
                                        "description": "The amount of storage (in gigabytes) to be allocated for the replication instance.",
                                        "type": "integer"
                                    },
                                    "AllowMajorVersionUpgrade": {
                                        "description": "<p>Indicates that major version upgrades are allowed. Changing this parameter does not result in an outage and the change is asynchronously applied as soon as possible.</p> <p>Constraints: This parameter must be set to true when specifying a value for the <code>EngineVersion</code> parameter that is a different major version than the replication instance's current version.</p>",
                                        "type": "boolean"
                                    },
                                    "ApplyImmediately": {
                                        "description": "Indicates whether the changes should be applied immediately or during the next maintenance window.",
                                        "type": "boolean"
                                    },
                                    "AutoMinorVersionUpgrade": {
                                        "description": " Indicates that minor version upgrades will be applied automatically to the replication instance during the maintenance window. Changing this parameter does not result in an outage except in the following case and the change is asynchronously applied as soon as possible. An outage will result if this parameter is set to <code>true</code> during the maintenance window, and a newer minor version is available, and AWS DMS has enabled auto patching for that engine version. ",
                                        "type": "boolean"
                                    },
                                    "EngineVersion": {
                                        "description": "The engine version number of the replication instance.",
                                        "type": "string"
                                    },
                                    "MultiAZ": {
                                        "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. ",
                                        "type": "boolean"
                                    },
                                    "PreferredMaintenanceWindow": {
                                        "description": "<p>The weekly time range (in UTC) during which system maintenance can occur, which might result in an outage. Changing this parameter does not result in an outage, except in the following situation, and the change is asynchronously applied as soon as possible. If moving this window to the current time, there must be at least 30 minutes between the current time and end of the window to ensure pending changes are applied.</p> <p>Default: Uses existing setting</p> <p>Format: ddd:hh24:mi-ddd:hh24:mi</p> <p>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</p> <p>Constraints: Must be at least 30 minutes</p>",
                                        "type": "string"
                                    },
                                    "ReplicationInstanceArn": {
                                        "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                        "type": "string"
                                    },
                                    "ReplicationInstanceClass": {
                                        "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                                        "type": "string"
                                    },
                                    "ReplicationInstanceIdentifier": {
                                        "description": "The replication instance identifier. This parameter is stored as a lowercase string.",
                                        "type": "string"
                                    },
                                    "VpcSecurityGroupIds": {
                                        "description": " Specifies the VPC security group to be used with the replication instance. The VPC security group must work with the VPC containing the replication instance. ",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "ReplicationInstanceArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ModifyReplicationSubnetGroup": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Modifies the settings for the specified replication subnet group.",
                "operationId": "ModifyReplicationSubnetGroup",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {
                                        "ReplicationSubnetGroup": {}
                                    },
                                    "properties": {
                                        "ReplicationSubnetGroup": {
                                            "description": "The modified replication subnet group.",
                                            "properties": {
                                                "ReplicationSubnetGroupDescription": {
                                                    "description": "The description of the replication subnet group.",
                                                    "type": "string"
                                                },
                                                "ReplicationSubnetGroupIdentifier": {
                                                    "description": "The identifier of the replication instance subnet group.",
                                                    "type": "string"
                                                },
                                                "SubnetGroupStatus": {
                                                    "description": "The status of the subnet group.",
                                                    "type": "string"
                                                },
                                                "Subnets": {
                                                    "description": "The subnets that are in the subnet group.",
                                                    "items": {
                                                        "description": "<p/>",
                                                        "properties": {
                                                            "SubnetAvailabilityZone": {
                                                                "description": "The Availability Zone of the subnet.",
                                                                "properties": {
                                                                    "Name": {
                                                                        "description": "The name of the availability zone.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "SubnetIdentifier": {
                                                                "description": "The subnet identifier.",
                                                                "type": "string"
                                                            },
                                                            "SubnetStatus": {
                                                                "description": "The status of the subnet.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "VpcId": {
                                                    "description": "The ID of the VPC.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AccessDeniedFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceQuotaExceededFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "SubnetAlreadyInUse",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ReplicationSubnetGroupDoesNotCoverEnoughAZs",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "InvalidSubnet",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "ReplicationSubnetGroupDescription": "",
                                    "ReplicationSubnetGroupIdentifier": "",
                                    "SubnetIds": []
                                },
                                "properties": {
                                    "ReplicationSubnetGroupDescription": {
                                        "description": "The description of the replication instance subnet group.",
                                        "type": "string"
                                    },
                                    "ReplicationSubnetGroupIdentifier": {
                                        "description": "The name of the replication instance subnet group.",
                                        "type": "string"
                                    },
                                    "SubnetIds": {
                                        "description": "A list of subnet IDs.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "ReplicationSubnetGroupIdentifier",
                                    "SubnetIds"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ModifyReplicationTask": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Modifies the specified replication task.</p> <p>You can't modify the task endpoints. The task must be stopped before you can modify it. </p> <p>For more information about AWS DMS tasks, see <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.html\">Working with Migration Tasks</a> in the <i>AWS Database Migration Service User Guide</i>.</p>",
                "operationId": "ModifyReplicationTask",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "properties": {
                                        "ReplicationTask": {
                                            "description": "The replication task that was modified.",
                                            "properties": {
                                                "CdcStartPosition": {
                                                    "description": "<p>Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p> The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position \"checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93\"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p>",
                                                    "type": "string"
                                                },
                                                "CdcStopPosition": {
                                                    "description": "<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:3018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 3018-02-09T12:12:12 “</p>",
                                                    "type": "string"
                                                },
                                                "LastFailureMessage": {
                                                    "description": "The last error (failure) message generated for the replication instance.",
                                                    "type": "string"
                                                },
                                                "MigrationType": {
                                                    "description": "The type of migration.",
                                                    "enum": [
                                                        "full-load",
                                                        "cdc",
                                                        "full-load-and-cdc"
                                                    ],
                                                    "type": "string"
                                                },
                                                "RecoveryCheckpoint": {
                                                    "description": "Indicates the last checkpoint that occurred during a change data capture (CDC) operation. You can provide this value to the <code>CdcStartPosition</code> parameter to start a CDC operation that begins at that checkpoint.",
                                                    "type": "string"
                                                },
                                                "ReplicationInstanceArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the replication task.",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskCreationDate": {
                                                    "description": "The date the replication task was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskIdentifier": {
                                                    "description": "<p>The user-assigned replication task identifier or name.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskSettings": {
                                                    "description": "The settings for the replication task.",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskStartDate": {
                                                    "description": "The date the replication task is scheduled to start.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskStats": {
                                                    "description": "The statistics for the task, including elapsed time, tables loaded, and table errors.",
                                                    "properties": {
                                                        "ElapsedTimeMillis": {
                                                            "description": "The elapsed time of the task, in milliseconds.",
                                                            "type": "integer"
                                                        },
                                                        "FullLoadProgressPercent": {
                                                            "description": "The percent complete for the full load migration task.",
                                                            "type": "integer"
                                                        },
                                                        "TablesErrored": {
                                                            "description": "The number of errors that have occurred during this task.",
                                                            "type": "integer"
                                                        },
                                                        "TablesLoaded": {
                                                            "description": "The number of tables loaded for this task.",
                                                            "type": "integer"
                                                        },
                                                        "TablesLoading": {
                                                            "description": "The number of tables currently loading for this task.",
                                                            "type": "integer"
                                                        },
                                                        "TablesQueued": {
                                                            "description": "The number of tables queued for this task.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "SourceEndpointArn": {
                                                    "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of the replication task.",
                                                    "type": "string"
                                                },
                                                "StopReason": {
                                                    "description": "The reason the replication task was stopped.",
                                                    "type": "string"
                                                },
                                                "TableMappings": {
                                                    "description": "Table mappings specified in the task.",
                                                    "type": "string"
                                                },
                                                "TargetEndpointArn": {
                                                    "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidResourceStateFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceAlreadyExistsFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "KMSKeyNotAccessibleFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "CdcStartPosition": {
                                        "description": "<p>Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p> The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position \"checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93\"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p>",
                                        "type": "string"
                                    },
                                    "CdcStartTime": {
                                        "description": "<p>Indicates the start time for a change data capture (CDC) operation. Use either CdcStartTime or CdcStartPosition to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p>Timestamp Example: --cdc-start-time “2018-03-08T12:12:12”</p>",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "CdcStopPosition": {
                                        "description": "<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:3018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 3018-02-09T12:12:12 “</p>",
                                        "type": "string"
                                    },
                                    "MigrationType": {
                                        "description": "<p>The migration type.</p> <p>Valid values: full-load | cdc | full-load-and-cdc</p>",
                                        "enum": [
                                            "full-load",
                                            "cdc",
                                            "full-load-and-cdc"
                                        ],
                                        "type": "string"
                                    },
                                    "ReplicationTaskArn": {
                                        "description": "The Amazon Resource Name (ARN) of the replication task.",
                                        "type": "string"
                                    },
                                    "ReplicationTaskIdentifier": {
                                        "description": "<p>The replication task identifier.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "ReplicationTaskSettings": {
                                        "description": "JSON file that contains settings for the task, such as target metadata settings.",
                                        "type": "string"
                                    },
                                    "TableMappings": {
                                        "description": "<p>When using the AWS CLI or boto3, provide the path of the JSON file that contains the table mappings. Precede the path with \"file://\". When working with the DMS API, provide the JSON as the parameter value.</p> <p>For example, --table-mappings file://mappingfile.json</p>",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ReplicationTaskArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#RebootReplicationInstance": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Reboots a replication instance. Rebooting results in a momentary outage, until the replication instance becomes available again.",
                "operationId": "RebootReplicationInstance",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ReplicationInstance": {
                                            "description": "The replication instance that is being rebooted. ",
                                            "properties": {
                                                "AllocatedStorage": {
                                                    "description": "The amount of storage (in gigabytes) that is allocated for the replication instance.",
                                                    "type": "integer"
                                                },
                                                "AutoMinorVersionUpgrade": {
                                                    "description": "Boolean value indicating if minor version upgrades will be automatically applied to the instance.",
                                                    "type": "boolean"
                                                },
                                                "AvailabilityZone": {
                                                    "description": "The Availability Zone for the instance.",
                                                    "type": "string"
                                                },
                                                "DnsNameServers": {
                                                    "description": "The DNS name servers for the replication instance.",
                                                    "type": "string"
                                                },
                                                "EngineVersion": {
                                                    "description": "The engine version number of the replication instance.",
                                                    "type": "string"
                                                },
                                                "FreeUntil": {
                                                    "description": " The expiration date of the free replication instance that is part of the Free DMS program. ",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "InstanceCreateTime": {
                                                    "description": "The time the replication instance was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "KmsKeyId": {
                                                    "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                                    "type": "string"
                                                },
                                                "MultiAZ": {
                                                    "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. ",
                                                    "type": "boolean"
                                                },
                                                "PendingModifiedValues": {
                                                    "description": "The pending modification values.",
                                                    "properties": {
                                                        "AllocatedStorage": {
                                                            "description": "The amount of storage (in gigabytes) that is allocated for the replication instance.",
                                                            "type": "integer"
                                                        },
                                                        "EngineVersion": {
                                                            "description": "The engine version number of the replication instance.",
                                                            "type": "string"
                                                        },
                                                        "MultiAZ": {
                                                            "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. ",
                                                            "type": "boolean"
                                                        },
                                                        "ReplicationInstanceClass": {
                                                            "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "PreferredMaintenanceWindow": {
                                                    "description": "The maintenance window times for the replication instance.",
                                                    "type": "string"
                                                },
                                                "PubliclyAccessible": {
                                                    "description": " Specifies the accessibility options for the replication instance. A value of <code>true</code> represents an instance with a public IP address. A value of <code>false</code> represents an instance with a private IP address. The default value is <code>true</code>. ",
                                                    "type": "boolean"
                                                },
                                                "ReplicationInstanceArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                                    "type": "string"
                                                },
                                                "ReplicationInstanceClass": {
                                                    "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                                                    "type": "string"
                                                },
                                                "ReplicationInstanceIdentifier": {
                                                    "description": "<p>The replication instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>myrepinstance</code> </p>",
                                                    "type": "string"
                                                },
                                                "ReplicationInstancePrivateIpAddress": {
                                                    "description": "The private IP address of the replication instance.",
                                                    "type": "string"
                                                },
                                                "ReplicationInstancePrivateIpAddresses": {
                                                    "description": "The private IP address of the replication instance.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ReplicationInstancePublicIpAddress": {
                                                    "description": "The public IP address of the replication instance.",
                                                    "type": "string"
                                                },
                                                "ReplicationInstancePublicIpAddresses": {
                                                    "description": "The public IP address of the replication instance.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ReplicationInstanceStatus": {
                                                    "description": "The status of the replication instance.",
                                                    "type": "string"
                                                },
                                                "ReplicationSubnetGroup": {
                                                    "description": "The subnet group for the replication instance.",
                                                    "properties": {
                                                        "ReplicationSubnetGroupDescription": {
                                                            "description": "The description of the replication subnet group.",
                                                            "type": "string"
                                                        },
                                                        "ReplicationSubnetGroupIdentifier": {
                                                            "description": "The identifier of the replication instance subnet group.",
                                                            "type": "string"
                                                        },
                                                        "SubnetGroupStatus": {
                                                            "description": "The status of the subnet group.",
                                                            "type": "string"
                                                        },
                                                        "Subnets": {
                                                            "description": "The subnets that are in the subnet group.",
                                                            "items": {
                                                                "description": "<p/>",
                                                                "properties": {
                                                                    "SubnetAvailabilityZone": {
                                                                        "description": "The Availability Zone of the subnet.",
                                                                        "properties": {
                                                                            "Name": {
                                                                                "description": "The name of the availability zone.",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "SubnetIdentifier": {
                                                                        "description": "The subnet identifier.",
                                                                        "type": "string"
                                                                    },
                                                                    "SubnetStatus": {
                                                                        "description": "The status of the subnet.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "VpcId": {
                                                            "description": "The ID of the VPC.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "SecondaryAvailabilityZone": {
                                                    "description": "The availability zone of the standby replication instance in a Multi-AZ deployment.",
                                                    "type": "string"
                                                },
                                                "VpcSecurityGroups": {
                                                    "description": "The VPC security group for the instance.",
                                                    "items": {
                                                        "description": "<p/>",
                                                        "properties": {
                                                            "Status": {
                                                                "description": "The status of the VPC security group.",
                                                                "type": "string"
                                                            },
                                                            "VpcSecurityGroupId": {
                                                                "description": "The VPC security group Id.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidResourceStateFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ForceFailover": {
                                        "description": "If this parameter is <code>true</code>, the reboot is conducted through a Multi-AZ failover. (If the instance isn't configured for Multi-AZ, then you can't specify <code>true</code>.)",
                                        "type": "boolean"
                                    },
                                    "ReplicationInstanceArn": {
                                        "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ReplicationInstanceArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#RefreshSchemas": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Populates the schema for the specified endpoint. This is an asynchronous operation and can take several minutes. You can check the status of this operation by calling the DescribeRefreshSchemasStatus operation.",
                "operationId": "RefreshSchemas",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {
                                        "RefreshSchemasStatus": {}
                                    },
                                    "properties": {
                                        "RefreshSchemasStatus": {
                                            "description": "The status of the refreshed schema.",
                                            "properties": {
                                                "EndpointArn": {
                                                    "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                                    "type": "string"
                                                },
                                                "LastFailureMessage": {
                                                    "description": "The last failure message for the schema.",
                                                    "type": "string"
                                                },
                                                "LastRefreshDate": {
                                                    "description": "The date the schema was last refreshed.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "ReplicationInstanceArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of the schema.",
                                                    "enum": [
                                                        "successful",
                                                        "failed",
                                                        "refreshing"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidResourceStateFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "KMSKeyNotAccessibleFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceQuotaExceededFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "EndpointArn": "",
                                    "ReplicationInstanceArn": ""
                                },
                                "properties": {
                                    "EndpointArn": {
                                        "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                        "type": "string"
                                    },
                                    "ReplicationInstanceArn": {
                                        "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "EndpointArn",
                                    "ReplicationInstanceArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ReloadTables": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Reloads the target database table with the source data. ",
                "operationId": "ReloadTables",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ReplicationTaskArn": {
                                            "description": "The Amazon Resource Name (ARN) of the replication task. ",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidResourceStateFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ReloadOption": {
                                        "description": "<p>Options for reload. Specify <code>data-reload</code> to reload the data and re-validate it if validation is enabled. Specify <code>validate-only</code> to re-validate the table. This option applies only when validation is enabled for the task. </p> <p>Valid values: data-reload, validate-only</p> <p>Default value is data-reload.</p>",
                                        "enum": [
                                            "data-reload",
                                            "validate-only"
                                        ],
                                        "type": "string"
                                    },
                                    "ReplicationTaskArn": {
                                        "description": "The Amazon Resource Name (ARN) of the replication task. ",
                                        "type": "string"
                                    },
                                    "TablesToReload": {
                                        "description": "The name and schema of the table to be reloaded. ",
                                        "items": {
                                            "description": "<p/>",
                                            "properties": {
                                                "SchemaName": {
                                                    "description": "The schema name of the table to be reloaded.",
                                                    "type": "string"
                                                },
                                                "TableName": {
                                                    "description": "The table name of the table to be reloaded.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "ReplicationTaskArn",
                                    "TablesToReload"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#RemoveTagsFromResource": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Removes metadata tags from a DMS resource.",
                "operationId": "RemoveTagsFromResource",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {},
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "ResourceArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E",
                                    "TagKeys": []
                                },
                                "properties": {
                                    "ResourceArn": {
                                        "description": "&gt;The Amazon Resource Name (ARN) of the AWS DMS resource the tag is to be removed from.",
                                        "type": "string"
                                    },
                                    "TagKeys": {
                                        "description": "The tag key (name) of the tag to be removed.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "ResourceArn",
                                    "TagKeys"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#StartReplicationTask": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Starts the replication task.</p> <p>For more information about AWS DMS tasks, see <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.html\">Working with Migration Tasks </a> in the <i>AWS Database Migration Service User Guide.</i> </p>",
                "operationId": "StartReplicationTask",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {
                                        "ReplicationTask": {
                                            "MigrationType": "full-load",
                                            "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
                                            "ReplicationTaskArn": "arn:aws:dms:us-east-1:123456789012:task:OEAMB3NXSTZ6LFYZFEPPBBXPYM",
                                            "ReplicationTaskCreationDate": "2016-12-14T18:25:43Z",
                                            "ReplicationTaskIdentifier": "task1",
                                            "ReplicationTaskSettings": "{\"TargetMetadata\":{\"TargetSchema\":\"\",\"SupportLobs\":true,\"FullLobMode\":true,\"LobChunkSize\":64,\"LimitedSizeLobMode\":false,\"LobMaxSize\":0},\"FullLoadSettings\":{\"FullLoadEnabled\":true,\"ApplyChangesEnabled\":false,\"TargetTablePrepMode\":\"DROP_AND_CREATE\",\"CreatePkAfterFullLoad\":false,\"StopTaskCachedChangesApplied\":false,\"StopTaskCachedChangesNotApplied\":false,\"ResumeEnabled\":false,\"ResumeMinTableSize\":100000,\"ResumeOnlyClusteredPKTables\":true,\"MaxFullLoadSubTasks\":8,\"TransactionConsistencyTimeout\":600,\"CommitRate\":10000},\"Logging\":{\"EnableLogging\":false}}",
                                            "SourceEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ZW5UAN6P4E77EC7YWHK4RZZ3BE",
                                            "Status": "creating",
                                            "TableMappings": "file://mappingfile.json",
                                            "TargetEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E"
                                        }
                                    },
                                    "properties": {
                                        "ReplicationTask": {
                                            "description": "The replication task started.",
                                            "properties": {
                                                "CdcStartPosition": {
                                                    "description": "<p>Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p> The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position \"checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93\"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p>",
                                                    "type": "string"
                                                },
                                                "CdcStopPosition": {
                                                    "description": "<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:3018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 3018-02-09T12:12:12 “</p>",
                                                    "type": "string"
                                                },
                                                "LastFailureMessage": {
                                                    "description": "The last error (failure) message generated for the replication instance.",
                                                    "type": "string"
                                                },
                                                "MigrationType": {
                                                    "description": "The type of migration.",
                                                    "enum": [
                                                        "full-load",
                                                        "cdc",
                                                        "full-load-and-cdc"
                                                    ],
                                                    "type": "string"
                                                },
                                                "RecoveryCheckpoint": {
                                                    "description": "Indicates the last checkpoint that occurred during a change data capture (CDC) operation. You can provide this value to the <code>CdcStartPosition</code> parameter to start a CDC operation that begins at that checkpoint.",
                                                    "type": "string"
                                                },
                                                "ReplicationInstanceArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the replication task.",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskCreationDate": {
                                                    "description": "The date the replication task was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskIdentifier": {
                                                    "description": "<p>The user-assigned replication task identifier or name.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskSettings": {
                                                    "description": "The settings for the replication task.",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskStartDate": {
                                                    "description": "The date the replication task is scheduled to start.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskStats": {
                                                    "description": "The statistics for the task, including elapsed time, tables loaded, and table errors.",
                                                    "properties": {
                                                        "ElapsedTimeMillis": {
                                                            "description": "The elapsed time of the task, in milliseconds.",
                                                            "type": "integer"
                                                        },
                                                        "FullLoadProgressPercent": {
                                                            "description": "The percent complete for the full load migration task.",
                                                            "type": "integer"
                                                        },
                                                        "TablesErrored": {
                                                            "description": "The number of errors that have occurred during this task.",
                                                            "type": "integer"
                                                        },
                                                        "TablesLoaded": {
                                                            "description": "The number of tables loaded for this task.",
                                                            "type": "integer"
                                                        },
                                                        "TablesLoading": {
                                                            "description": "The number of tables currently loading for this task.",
                                                            "type": "integer"
                                                        },
                                                        "TablesQueued": {
                                                            "description": "The number of tables queued for this task.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "SourceEndpointArn": {
                                                    "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of the replication task.",
                                                    "type": "string"
                                                },
                                                "StopReason": {
                                                    "description": "The reason the replication task was stopped.",
                                                    "type": "string"
                                                },
                                                "TableMappings": {
                                                    "description": "Table mappings specified in the task.",
                                                    "type": "string"
                                                },
                                                "TargetEndpointArn": {
                                                    "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidResourceStateFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "AccessDeniedFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "CdcStartTime": "2016-12-14T13:33:20Z",
                                    "ReplicationTaskArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
                                    "StartReplicationTaskType": "start-replication"
                                },
                                "properties": {
                                    "CdcStartPosition": {
                                        "description": "<p>Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p> The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position \"checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93\"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p>",
                                        "type": "string"
                                    },
                                    "CdcStartTime": {
                                        "description": "<p>Indicates the start time for a change data capture (CDC) operation. Use either CdcStartTime or CdcStartPosition to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p>Timestamp Example: --cdc-start-time “2018-03-08T12:12:12”</p>",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "CdcStopPosition": {
                                        "description": "<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:3018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 3018-02-09T12:12:12 “</p>",
                                        "type": "string"
                                    },
                                    "ReplicationTaskArn": {
                                        "description": "The Amazon Resource Name (ARN) of the replication task to be started.",
                                        "type": "string"
                                    },
                                    "StartReplicationTaskType": {
                                        "description": "The type of replication task.",
                                        "enum": [
                                            "start-replication",
                                            "resume-processing",
                                            "reload-target"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ReplicationTaskArn",
                                    "StartReplicationTaskType"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#StartReplicationTaskAssessment": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": " Starts the replication task assessment for unsupported data types in the source database. ",
                "operationId": "StartReplicationTaskAssessment",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "properties": {
                                        "ReplicationTask": {
                                            "description": " The assessed replication task. ",
                                            "properties": {
                                                "CdcStartPosition": {
                                                    "description": "<p>Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p> The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position \"checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93\"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p>",
                                                    "type": "string"
                                                },
                                                "CdcStopPosition": {
                                                    "description": "<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:3018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 3018-02-09T12:12:12 “</p>",
                                                    "type": "string"
                                                },
                                                "LastFailureMessage": {
                                                    "description": "The last error (failure) message generated for the replication instance.",
                                                    "type": "string"
                                                },
                                                "MigrationType": {
                                                    "description": "The type of migration.",
                                                    "enum": [
                                                        "full-load",
                                                        "cdc",
                                                        "full-load-and-cdc"
                                                    ],
                                                    "type": "string"
                                                },
                                                "RecoveryCheckpoint": {
                                                    "description": "Indicates the last checkpoint that occurred during a change data capture (CDC) operation. You can provide this value to the <code>CdcStartPosition</code> parameter to start a CDC operation that begins at that checkpoint.",
                                                    "type": "string"
                                                },
                                                "ReplicationInstanceArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the replication task.",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskCreationDate": {
                                                    "description": "The date the replication task was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskIdentifier": {
                                                    "description": "<p>The user-assigned replication task identifier or name.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskSettings": {
                                                    "description": "The settings for the replication task.",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskStartDate": {
                                                    "description": "The date the replication task is scheduled to start.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskStats": {
                                                    "description": "The statistics for the task, including elapsed time, tables loaded, and table errors.",
                                                    "properties": {
                                                        "ElapsedTimeMillis": {
                                                            "description": "The elapsed time of the task, in milliseconds.",
                                                            "type": "integer"
                                                        },
                                                        "FullLoadProgressPercent": {
                                                            "description": "The percent complete for the full load migration task.",
                                                            "type": "integer"
                                                        },
                                                        "TablesErrored": {
                                                            "description": "The number of errors that have occurred during this task.",
                                                            "type": "integer"
                                                        },
                                                        "TablesLoaded": {
                                                            "description": "The number of tables loaded for this task.",
                                                            "type": "integer"
                                                        },
                                                        "TablesLoading": {
                                                            "description": "The number of tables currently loading for this task.",
                                                            "type": "integer"
                                                        },
                                                        "TablesQueued": {
                                                            "description": "The number of tables queued for this task.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "SourceEndpointArn": {
                                                    "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of the replication task.",
                                                    "type": "string"
                                                },
                                                "StopReason": {
                                                    "description": "The reason the replication task was stopped.",
                                                    "type": "string"
                                                },
                                                "TableMappings": {
                                                    "description": "Table mappings specified in the task.",
                                                    "type": "string"
                                                },
                                                "TargetEndpointArn": {
                                                    "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidResourceStateFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "ReplicationTaskArn": {
                                        "description": " The Amazon Resource Name (ARN) of the replication task. ",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ReplicationTaskArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#StopReplicationTask": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Stops the replication task.</p> <p/>",
                "operationId": "StopReplicationTask",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {
                                        "ReplicationTask": {
                                            "MigrationType": "full-load",
                                            "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
                                            "ReplicationTaskArn": "arn:aws:dms:us-east-1:123456789012:task:OEAMB3NXSTZ6LFYZFEPPBBXPYM",
                                            "ReplicationTaskCreationDate": "2016-12-14T18:25:43Z",
                                            "ReplicationTaskIdentifier": "task1",
                                            "ReplicationTaskSettings": "{\"TargetMetadata\":{\"TargetSchema\":\"\",\"SupportLobs\":true,\"FullLobMode\":true,\"LobChunkSize\":64,\"LimitedSizeLobMode\":false,\"LobMaxSize\":0},\"FullLoadSettings\":{\"FullLoadEnabled\":true,\"ApplyChangesEnabled\":false,\"TargetTablePrepMode\":\"DROP_AND_CREATE\",\"CreatePkAfterFullLoad\":false,\"StopTaskCachedChangesApplied\":false,\"StopTaskCachedChangesNotApplied\":false,\"ResumeEnabled\":false,\"ResumeMinTableSize\":100000,\"ResumeOnlyClusteredPKTables\":true,\"MaxFullLoadSubTasks\":8,\"TransactionConsistencyTimeout\":600,\"CommitRate\":10000},\"Logging\":{\"EnableLogging\":false}}",
                                            "SourceEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ZW5UAN6P4E77EC7YWHK4RZZ3BE",
                                            "Status": "creating",
                                            "TableMappings": "file://mappingfile.json",
                                            "TargetEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E"
                                        }
                                    },
                                    "properties": {
                                        "ReplicationTask": {
                                            "description": "The replication task stopped.",
                                            "properties": {
                                                "CdcStartPosition": {
                                                    "description": "<p>Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p> The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position \"checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93\"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p>",
                                                    "type": "string"
                                                },
                                                "CdcStopPosition": {
                                                    "description": "<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:3018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 3018-02-09T12:12:12 “</p>",
                                                    "type": "string"
                                                },
                                                "LastFailureMessage": {
                                                    "description": "The last error (failure) message generated for the replication instance.",
                                                    "type": "string"
                                                },
                                                "MigrationType": {
                                                    "description": "The type of migration.",
                                                    "enum": [
                                                        "full-load",
                                                        "cdc",
                                                        "full-load-and-cdc"
                                                    ],
                                                    "type": "string"
                                                },
                                                "RecoveryCheckpoint": {
                                                    "description": "Indicates the last checkpoint that occurred during a change data capture (CDC) operation. You can provide this value to the <code>CdcStartPosition</code> parameter to start a CDC operation that begins at that checkpoint.",
                                                    "type": "string"
                                                },
                                                "ReplicationInstanceArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the replication task.",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskCreationDate": {
                                                    "description": "The date the replication task was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskIdentifier": {
                                                    "description": "<p>The user-assigned replication task identifier or name.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskSettings": {
                                                    "description": "The settings for the replication task.",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskStartDate": {
                                                    "description": "The date the replication task is scheduled to start.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "ReplicationTaskStats": {
                                                    "description": "The statistics for the task, including elapsed time, tables loaded, and table errors.",
                                                    "properties": {
                                                        "ElapsedTimeMillis": {
                                                            "description": "The elapsed time of the task, in milliseconds.",
                                                            "type": "integer"
                                                        },
                                                        "FullLoadProgressPercent": {
                                                            "description": "The percent complete for the full load migration task.",
                                                            "type": "integer"
                                                        },
                                                        "TablesErrored": {
                                                            "description": "The number of errors that have occurred during this task.",
                                                            "type": "integer"
                                                        },
                                                        "TablesLoaded": {
                                                            "description": "The number of tables loaded for this task.",
                                                            "type": "integer"
                                                        },
                                                        "TablesLoading": {
                                                            "description": "The number of tables currently loading for this task.",
                                                            "type": "integer"
                                                        },
                                                        "TablesQueued": {
                                                            "description": "The number of tables queued for this task.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "SourceEndpointArn": {
                                                    "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of the replication task.",
                                                    "type": "string"
                                                },
                                                "StopReason": {
                                                    "description": "The reason the replication task was stopped.",
                                                    "type": "string"
                                                },
                                                "TableMappings": {
                                                    "description": "Table mappings specified in the task.",
                                                    "type": "string"
                                                },
                                                "TargetEndpointArn": {
                                                    "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidResourceStateFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "ReplicationTaskArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E"
                                },
                                "properties": {
                                    "ReplicationTaskArn": {
                                        "description": "The Amazon Resource Name(ARN) of the replication task to be stopped.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ReplicationTaskArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#TestConnection": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Tests the connection between the replication instance and the endpoint.",
                "operationId": "TestConnection",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {
                                        "Connection": {}
                                    },
                                    "properties": {
                                        "Connection": {
                                            "description": "The connection tested.",
                                            "properties": {
                                                "EndpointArn": {
                                                    "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                                    "type": "string"
                                                },
                                                "EndpointIdentifier": {
                                                    "description": "The identifier of the endpoint. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.",
                                                    "type": "string"
                                                },
                                                "LastFailureMessage": {
                                                    "description": "The error message when the connection last failed.",
                                                    "type": "string"
                                                },
                                                "ReplicationInstanceArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                                    "type": "string"
                                                },
                                                "ReplicationInstanceIdentifier": {
                                                    "description": "The replication instance identifier. This parameter is stored as a lowercase string.",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The connection status.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidResourceStateFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "KMSKeyNotAccessibleFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceQuotaExceededFault",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "EndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:RAAR3R22XSH46S3PWLC3NJAWKM",
                                    "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ"
                                },
                                "properties": {
                                    "EndpointArn": {
                                        "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                        "type": "string"
                                    },
                                    "ReplicationInstanceArn": {
                                        "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ReplicationInstanceArn",
                                    "EndpointArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AccessDeniedFault": {},
            "AccountQuota": {
                "description": "Describes a quota for an AWS account, for example, the number of replication instances allowed.",
                "properties": {
                    "AccountQuotaName": {
                        "description": "The name of the AWS DMS quota for this AWS account.",
                        "type": "string"
                    },
                    "Max": {
                        "description": "The maximum allowed value for the quota.",
                        "type": "integer"
                    },
                    "Used": {
                        "description": "The amount currently used toward the quota maximum.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AccountQuotaList": {
                "items": {
                    "description": "Describes a quota for an AWS account, for example, the number of replication instances allowed.",
                    "properties": {
                        "AccountQuotaName": {
                            "description": "The name of the AWS DMS quota for this AWS account.",
                            "type": "string"
                        },
                        "Max": {
                            "description": "The maximum allowed value for the quota.",
                            "type": "integer"
                        },
                        "Used": {
                            "description": "The amount currently used toward the quota maximum.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "AddTagsToResourceMessage": {
                "description": "<p/>",
                "example": {
                    "ResourceArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E",
                    "Tags": [
                        {
                            "Key": "Acount",
                            "Value": "1633456"
                        }
                    ]
                },
                "properties": {
                    "ResourceArn": {
                        "description": "The Amazon Resource Name (ARN) of the AWS DMS resource the tag is to be added to. AWS DMS resources include a replication instance, endpoint, and a replication task.",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "The tag to be assigned to the DMS resource.",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "Key": {
                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "ResourceArn",
                    "Tags"
                ],
                "type": "object"
            },
            "AddTagsToResourceResponse": {
                "description": "<p/>",
                "example": {},
                "properties": {},
                "type": "object"
            },
            "AuthMechanismValue": {
                "enum": [
                    "default",
                    "mongodb_cr",
                    "scram_sha_1"
                ],
                "type": "string"
            },
            "AuthTypeValue": {
                "enum": [
                    "no",
                    "password"
                ],
                "type": "string"
            },
            "AvailabilityZone": {
                "description": "<p/>",
                "properties": {
                    "Name": {
                        "description": "The name of the availability zone.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Boolean": {
                "type": "boolean"
            },
            "BooleanOptional": {
                "type": "boolean"
            },
            "Certificate": {
                "description": "The SSL certificate that can be used to encrypt connections between the endpoints and the replication instance.",
                "properties": {
                    "CertificateArn": {
                        "description": "The Amazon Resource Name (ARN) for the certificate.",
                        "type": "string"
                    },
                    "CertificateCreationDate": {
                        "description": "The date that the certificate was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "CertificateIdentifier": {
                        "description": "The customer-assigned name of the certificate. Valid characters are A-z and 0-9.",
                        "type": "string"
                    },
                    "CertificateOwner": {
                        "description": "The owner of the certificate.",
                        "type": "string"
                    },
                    "CertificatePem": {
                        "description": "The contents of the .pem X.509 certificate file for the certificate.",
                        "type": "string"
                    },
                    "CertificateWallet": {
                        "description": "The location of the imported Oracle Wallet certificate for use with SSL.",
                        "type": "string"
                    },
                    "KeyLength": {
                        "description": "The key length of the cryptographic algorithm being used.",
                        "type": "integer"
                    },
                    "SigningAlgorithm": {
                        "description": "The signing algorithm for the certificate.",
                        "type": "string"
                    },
                    "ValidFromDate": {
                        "description": "The beginning date that the certificate is valid.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "ValidToDate": {
                        "description": "The final date that the certificate is valid.",
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CertificateList": {
                "items": {
                    "description": "The SSL certificate that can be used to encrypt connections between the endpoints and the replication instance.",
                    "properties": {
                        "CertificateArn": {
                            "description": "The Amazon Resource Name (ARN) for the certificate.",
                            "type": "string"
                        },
                        "CertificateCreationDate": {
                            "description": "The date that the certificate was created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "CertificateIdentifier": {
                            "description": "The customer-assigned name of the certificate. Valid characters are A-z and 0-9.",
                            "type": "string"
                        },
                        "CertificateOwner": {
                            "description": "The owner of the certificate.",
                            "type": "string"
                        },
                        "CertificatePem": {
                            "description": "The contents of the .pem X.509 certificate file for the certificate.",
                            "type": "string"
                        },
                        "CertificateWallet": {
                            "description": "The location of the imported Oracle Wallet certificate for use with SSL.",
                            "type": "string"
                        },
                        "KeyLength": {
                            "description": "The key length of the cryptographic algorithm being used.",
                            "type": "integer"
                        },
                        "SigningAlgorithm": {
                            "description": "The signing algorithm for the certificate.",
                            "type": "string"
                        },
                        "ValidFromDate": {
                            "description": "The beginning date that the certificate is valid.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "ValidToDate": {
                            "description": "The final date that the certificate is valid.",
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "CertificateWallet": {
                "type": "string"
            },
            "CompressionTypeValue": {
                "enum": [
                    "none",
                    "gzip"
                ],
                "type": "string"
            },
            "Connection": {
                "description": "<p/>",
                "properties": {
                    "EndpointArn": {
                        "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                        "type": "string"
                    },
                    "EndpointIdentifier": {
                        "description": "The identifier of the endpoint. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.",
                        "type": "string"
                    },
                    "LastFailureMessage": {
                        "description": "The error message when the connection last failed.",
                        "type": "string"
                    },
                    "ReplicationInstanceArn": {
                        "description": "The Amazon Resource Name (ARN) of the replication instance.",
                        "type": "string"
                    },
                    "ReplicationInstanceIdentifier": {
                        "description": "The replication instance identifier. This parameter is stored as a lowercase string.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The connection status.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ConnectionList": {
                "items": {
                    "description": "<p/>",
                    "properties": {
                        "EndpointArn": {
                            "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                            "type": "string"
                        },
                        "EndpointIdentifier": {
                            "description": "The identifier of the endpoint. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.",
                            "type": "string"
                        },
                        "LastFailureMessage": {
                            "description": "The error message when the connection last failed.",
                            "type": "string"
                        },
                        "ReplicationInstanceArn": {
                            "description": "The Amazon Resource Name (ARN) of the replication instance.",
                            "type": "string"
                        },
                        "ReplicationInstanceIdentifier": {
                            "description": "The replication instance identifier. This parameter is stored as a lowercase string.",
                            "type": "string"
                        },
                        "Status": {
                            "description": "The connection status.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "CreateEndpointMessage": {
                "description": "<p/>",
                "example": {
                    "CertificateArn": "",
                    "DatabaseName": "testdb",
                    "EndpointIdentifier": "test-endpoint-1",
                    "EndpointType": "source",
                    "EngineName": "mysql",
                    "ExtraConnectionAttributes": "",
                    "KmsKeyId": "arn:aws:kms:us-east-1:123456789012:key/4c1731d6-5435-ed4d-be13-d53411a7cfbd",
                    "Password": "pasword",
                    "Port": 3306,
                    "ServerName": "mydb.cx1llnox7iyx.us-west-2.rds.amazonaws.com",
                    "SslMode": "require",
                    "Tags": [
                        {
                            "Key": "Acount",
                            "Value": "143327655"
                        }
                    ],
                    "Username": "username"
                },
                "properties": {
                    "CertificateArn": {
                        "description": "The Amazon Resource Name (ARN) for the certificate.",
                        "type": "string"
                    },
                    "DatabaseName": {
                        "description": "The name of the endpoint database.",
                        "type": "string"
                    },
                    "DmsTransferSettings": {
                        "description": "<p>The settings in JSON format for the DMS transfer type of source endpoint. </p> <p>Possible attributes include the following:</p> <ul> <li> <p> <code>serviceAccessRoleArn</code> - The IAM role that has permission to access the Amazon S3 bucket.</p> </li> <li> <p> <code>bucketName</code> - The name of the S3 bucket to use.</p> </li> <li> <p> <code>compressionType</code> - An optional parameter to use GZIP to compress the target files. To use GZIP, set this value to <code>NONE</code> (the default). To keep the files uncompressed, don't use this value. </p> </li> </ul> <p>Shorthand syntax for these attributes is as follows: <code>ServiceAccessRoleArn=string,BucketName=string,CompressionType=string</code> </p> <p>JSON syntax for these attributes is as follows: <code>{ \"ServiceAccessRoleArn\": \"string\", \"BucketName\": \"string\", \"CompressionType\": \"none\"|\"gzip\" } </code> </p>",
                        "properties": {
                            "BucketName": {
                                "description": " The name of the S3 bucket to use. ",
                                "type": "string"
                            },
                            "ServiceAccessRoleArn": {
                                "description": " The IAM role that has permission to access the Amazon S3 bucket. ",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "DynamoDbSettings": {
                        "description": "Settings in JSON format for the target Amazon DynamoDB endpoint. For more information about the available settings, see <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.DynamoDB.html\">Using Object Mapping to Migrate Data to DynamoDB</a> in the <i>AWS Database Migration Service User Guide.</i> ",
                        "properties": {
                            "ServiceAccessRoleArn": {
                                "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                                "type": "string"
                            }
                        },
                        "required": [
                            "ServiceAccessRoleArn"
                        ],
                        "type": "object"
                    },
                    "ElasticsearchSettings": {
                        "description": "Settings in JSON format for the target Elasticsearch endpoint. For more information about the available settings, see <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Elasticsearch.html#CHAP_Target.Elasticsearch.Configuration\">Extra Connection Attributes When Using Elasticsearch as a Target for AWS DMS</a> in the <i>AWS Database Migration User Guide.</i> ",
                        "properties": {
                            "EndpointUri": {
                                "description": "The endpoint for the ElasticSearch cluster.",
                                "type": "string"
                            },
                            "ErrorRetryDuration": {
                                "description": "The maximum number of seconds that DMS retries failed API requests to the Elasticsearch cluster.",
                                "type": "integer"
                            },
                            "FullLoadErrorPercentage": {
                                "description": "The maximum percentage of records that can fail to be written before a full load operation stops. ",
                                "type": "integer"
                            },
                            "ServiceAccessRoleArn": {
                                "description": "The Amazon Resource Name (ARN) used by service to access the IAM role.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "ServiceAccessRoleArn",
                            "EndpointUri"
                        ],
                        "type": "object"
                    },
                    "EndpointIdentifier": {
                        "description": "The database endpoint identifier. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.",
                        "type": "string"
                    },
                    "EndpointType": {
                        "description": "The type of endpoint.",
                        "enum": [
                            "source",
                            "target"
                        ],
                        "type": "string"
                    },
                    "EngineName": {
                        "description": "The type of engine for the endpoint. Valid values, depending on the <code>EndPointType</code> value, include <code>mysql</code>, <code>oracle</code>, <code>postgres</code>, <code>mariadb</code>, <code>aurora</code>, <code>aurora-postgresql</code>, <code>redshift</code>, <code>s3</code>, <code>db2</code>, <code>azuredb</code>, <code>sybase</code>, <code>dynamodb</code>, <code>mongodb</code>, and <code>sqlserver</code>.",
                        "type": "string"
                    },
                    "ExternalTableDefinition": {
                        "description": "The external table definition. ",
                        "type": "string"
                    },
                    "ExtraConnectionAttributes": {
                        "description": "Additional attributes associated with the connection.",
                        "type": "string"
                    },
                    "KinesisSettings": {
                        "description": "Settings in JSON format for the target Amazon Kinesis Data Streams endpoint. For more information about the available settings, see <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Kinesis.html#CHAP_Target.Kinesis.ObjectMapping \">Using Object Mapping to Migrate Data to a Kinesis Data Stream</a> in the <i>AWS Database Migration User Guide.</i> ",
                        "properties": {
                            "MessageFormat": {
                                "description": "The output format for the records created on the endpoint. The message format is <code>JSON</code>.",
                                "enum": [
                                    "json"
                                ],
                                "type": "string"
                            },
                            "ServiceAccessRoleArn": {
                                "description": "The Amazon Resource Name (ARN) for the IAM role that DMS uses to write to the Amazon Kinesis data stream.",
                                "type": "string"
                            },
                            "StreamArn": {
                                "description": "The Amazon Resource Name (ARN) for the Amazon Kinesis Data Streams endpoint.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "KmsKeyId": {
                        "description": "The AWS KMS key identifier to use to encrypt the connection parameters. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                        "type": "string"
                    },
                    "MongoDbSettings": {
                        "description": "Settings in JSON format for the source MongoDB endpoint. For more information about the available settings, see the configuration properties section in <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.MongoDB.html\"> Using MongoDB as a Target for AWS Database Migration Service</a> in the <i>AWS Database Migration Service User Guide.</i> ",
                        "properties": {
                            "AuthMechanism": {
                                "description": "<p> The authentication mechanism you use to access the MongoDB source endpoint.</p> <p>Valid values: DEFAULT, MONGODB_CR, SCRAM_SHA_1 </p> <p>DEFAULT – For MongoDB version 2.x, use MONGODB_CR. For MongoDB version 3.x, use SCRAM_SHA_1. This attribute is not used when authType=No.</p>",
                                "enum": [
                                    "default",
                                    "mongodb_cr",
                                    "scram_sha_1"
                                ],
                                "type": "string"
                            },
                            "AuthSource": {
                                "description": "<p> The MongoDB database name. This attribute is not used when <code>authType=NO</code>. </p> <p>The default is admin.</p>",
                                "type": "string"
                            },
                            "AuthType": {
                                "description": "<p> The authentication type you use to access the MongoDB source endpoint.</p> <p>Valid values: NO, PASSWORD </p> <p>When NO is selected, user name and password parameters are not used and can be empty. </p>",
                                "enum": [
                                    "no",
                                    "password"
                                ],
                                "type": "string"
                            },
                            "DatabaseName": {
                                "description": " The database name on the MongoDB source endpoint. ",
                                "type": "string"
                            },
                            "DocsToInvestigate": {
                                "description": "<p> Indicates the number of documents to preview to determine the document organization. Use this attribute when <code>NestingLevel</code> is set to ONE. </p> <p>Must be a positive value greater than 0. Default value is 1000.</p>",
                                "type": "string"
                            },
                            "ExtractDocId": {
                                "description": "<p> Specifies the document ID. Use this attribute when <code>NestingLevel</code> is set to NONE. </p> <p>Default value is false. </p>",
                                "type": "string"
                            },
                            "KmsKeyId": {
                                "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                "type": "string"
                            },
                            "NestingLevel": {
                                "description": "<p> Specifies either document or table mode. </p> <p>Valid values: NONE, ONE</p> <p>Default value is NONE. Specify NONE to use document mode. Specify ONE to use table mode.</p>",
                                "enum": [
                                    "none",
                                    "one"
                                ],
                                "type": "string"
                            },
                            "Password": {
                                "description": " The password for the user account you use to access the MongoDB source endpoint. ",
                                "format": "password",
                                "type": "string"
                            },
                            "Port": {
                                "description": " The port value for the MongoDB source endpoint. ",
                                "type": "integer"
                            },
                            "ServerName": {
                                "description": " The name of the server on the MongoDB source endpoint. ",
                                "type": "string"
                            },
                            "Username": {
                                "description": "The user name you use to access the MongoDB source endpoint. ",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "Password": {
                        "description": "The password to be used to log in to the endpoint database.",
                        "format": "password",
                        "type": "string"
                    },
                    "Port": {
                        "description": "The port used by the endpoint database.",
                        "type": "integer"
                    },
                    "S3Settings": {
                        "description": "Settings in JSON format for the target Amazon S3 endpoint. For more information about the available settings, see <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html#CHAP_Target.S3.Configuring\">Extra Connection Attributes When Using Amazon S3 as a Target for AWS DMS</a> in the <i>AWS Database Migration Service User Guide.</i> ",
                        "properties": {
                            "BucketFolder": {
                                "description": " An optional parameter to set a folder name in the S3 bucket. If provided, tables are created in the path &lt;bucketFolder&gt;/&lt;schema_name&gt;/&lt;table_name&gt;/. If this parameter is not specified, then the path used is &lt;schema_name&gt;/&lt;table_name&gt;/. ",
                                "type": "string"
                            },
                            "BucketName": {
                                "description": " The name of the S3 bucket. ",
                                "type": "string"
                            },
                            "CompressionType": {
                                "description": " An optional parameter to use GZIP to compress the target files. Set to GZIP to compress the target files. Set to NONE (the default) or do not use to leave the files uncompressed. ",
                                "enum": [
                                    "none",
                                    "gzip"
                                ],
                                "type": "string"
                            },
                            "CsvDelimiter": {
                                "description": " The delimiter used to separate columns in the source files. The default is a comma. ",
                                "type": "string"
                            },
                            "CsvRowDelimiter": {
                                "description": " The delimiter used to separate rows in the source files. The default is a carriage return (\\n). ",
                                "type": "string"
                            },
                            "ExternalTableDefinition": {
                                "description": " The external table definition. ",
                                "type": "string"
                            },
                            "ServiceAccessRoleArn": {
                                "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "ServerName": {
                        "description": "The name of the server where the endpoint database resides.",
                        "type": "string"
                    },
                    "ServiceAccessRoleArn": {
                        "description": " The Amazon Resource Name (ARN) for the service access role that you want to use to create the endpoint. ",
                        "type": "string"
                    },
                    "SslMode": {
                        "description": "The Secure Sockets Layer (SSL) mode to use for the SSL connection. The SSL mode can be one of four values: <code>none</code>, <code>require</code>, <code>verify-ca</code>, <code>verify-full</code>. The default value is <code>none</code>.",
                        "enum": [
                            "none",
                            "require",
                            "verify-ca",
                            "verify-full"
                        ],
                        "type": "string"
                    },
                    "Tags": {
                        "description": "Tags to be added to the endpoint.",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "Key": {
                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Username": {
                        "description": "The user name to be used to log in to the endpoint database.",
                        "type": "string"
                    }
                },
                "required": [
                    "EndpointIdentifier",
                    "EndpointType",
                    "EngineName"
                ],
                "type": "object"
            },
            "CreateEndpointResponse": {
                "description": "<p/>",
                "example": {
                    "Endpoint": {
                        "EndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:RAAR3R22XSH46S3PWLC3NJAWKM",
                        "EndpointIdentifier": "test-endpoint-1",
                        "EndpointType": "source",
                        "EngineName": "mysql",
                        "KmsKeyId": "arn:aws:kms:us-east-1:123456789012:key/4c1731d6-5435-ed4d-be13-d53411a7cfbd",
                        "Port": 3306,
                        "ServerName": "mydb.cx1llnox7iyx.us-west-2.rds.amazonaws.com",
                        "Status": "active",
                        "Username": "username"
                    }
                },
                "properties": {
                    "Endpoint": {
                        "description": "The endpoint that was created.",
                        "properties": {
                            "CertificateArn": {
                                "description": "The Amazon Resource Name (ARN) used for SSL connection to the endpoint.",
                                "type": "string"
                            },
                            "DatabaseName": {
                                "description": "The name of the database at the endpoint.",
                                "type": "string"
                            },
                            "DmsTransferSettings": {
                                "description": "<p>The settings in JSON format for the DMS transfer type of source endpoint. </p> <p>Possible attributes include the following:</p> <ul> <li> <p> <code>serviceAccessRoleArn</code> - The IAM role that has permission to access the Amazon S3 bucket.</p> </li> <li> <p> <code>bucketName</code> - The name of the S3 bucket to use.</p> </li> <li> <p> <code>compressionType</code> - An optional parameter to use GZIP to compress the target files. To use GZIP, set this value to <code>NONE</code> (the default). To keep the files uncompressed, don't use this value. </p> </li> </ul> <p>Shorthand syntax for these attributes is as follows: <code>ServiceAccessRoleArn=string,BucketName=string,CompressionType=string</code> </p> <p>JSON syntax for these attributes is as follows: <code>{ \"ServiceAccessRoleArn\": \"string\", \"BucketName\": \"string\", \"CompressionType\": \"none\"|\"gzip\" } </code> </p>",
                                "properties": {
                                    "BucketName": {
                                        "description": " The name of the S3 bucket to use. ",
                                        "type": "string"
                                    },
                                    "ServiceAccessRoleArn": {
                                        "description": " The IAM role that has permission to access the Amazon S3 bucket. ",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "DynamoDbSettings": {
                                "description": "The settings for the target DynamoDB database. For more information, see the <code>DynamoDBSettings</code> structure.",
                                "properties": {
                                    "ServiceAccessRoleArn": {
                                        "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ServiceAccessRoleArn"
                                ],
                                "type": "object"
                            },
                            "ElasticsearchSettings": {
                                "description": "The settings for the Elasticsearch source endpoint. For more information, see the <code>ElasticsearchSettings</code> structure.",
                                "properties": {
                                    "EndpointUri": {
                                        "description": "The endpoint for the ElasticSearch cluster.",
                                        "type": "string"
                                    },
                                    "ErrorRetryDuration": {
                                        "description": "The maximum number of seconds that DMS retries failed API requests to the Elasticsearch cluster.",
                                        "type": "integer"
                                    },
                                    "FullLoadErrorPercentage": {
                                        "description": "The maximum percentage of records that can fail to be written before a full load operation stops. ",
                                        "type": "integer"
                                    },
                                    "ServiceAccessRoleArn": {
                                        "description": "The Amazon Resource Name (ARN) used by service to access the IAM role.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ServiceAccessRoleArn",
                                    "EndpointUri"
                                ],
                                "type": "object"
                            },
                            "EndpointArn": {
                                "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                "type": "string"
                            },
                            "EndpointIdentifier": {
                                "description": "The database endpoint identifier. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.",
                                "type": "string"
                            },
                            "EndpointType": {
                                "description": "The type of endpoint.",
                                "enum": [
                                    "source",
                                    "target"
                                ],
                                "type": "string"
                            },
                            "EngineDisplayName": {
                                "description": "The expanded name for the engine name. For example, if the <code>EngineName</code> parameter is \"aurora,\" this value would be \"Amazon Aurora MySQL.\"",
                                "type": "string"
                            },
                            "EngineName": {
                                "description": "The database engine name. Valid values, depending on the EndPointType, include mysql, oracle, postgres, mariadb, aurora, aurora-postgresql, redshift, s3, db2, azuredb, sybase, sybase, dynamodb, mongodb, and sqlserver.",
                                "type": "string"
                            },
                            "ExternalId": {
                                "description": " Value returned by a call to CreateEndpoint that can be used for cross-account validation. Use it on a subsequent call to CreateEndpoint to create the endpoint with a cross-account. ",
                                "type": "string"
                            },
                            "ExternalTableDefinition": {
                                "description": "The external table definition.",
                                "type": "string"
                            },
                            "ExtraConnectionAttributes": {
                                "description": "Additional connection attributes used to connect to the endpoint.",
                                "type": "string"
                            },
                            "KinesisSettings": {
                                "description": "The settings for the Amazon Kinesis source endpoint. For more information, see the <code>KinesisSettings</code> structure.",
                                "properties": {
                                    "MessageFormat": {
                                        "description": "The output format for the records created on the endpoint. The message format is <code>JSON</code>.",
                                        "enum": [
                                            "json"
                                        ],
                                        "type": "string"
                                    },
                                    "ServiceAccessRoleArn": {
                                        "description": "The Amazon Resource Name (ARN) for the IAM role that DMS uses to write to the Amazon Kinesis data stream.",
                                        "type": "string"
                                    },
                                    "StreamArn": {
                                        "description": "The Amazon Resource Name (ARN) for the Amazon Kinesis Data Streams endpoint.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "KmsKeyId": {
                                "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                "type": "string"
                            },
                            "MongoDbSettings": {
                                "description": "The settings for the MongoDB source endpoint. For more information, see the <code>MongoDbSettings</code> structure.",
                                "properties": {
                                    "AuthMechanism": {
                                        "description": "<p> The authentication mechanism you use to access the MongoDB source endpoint.</p> <p>Valid values: DEFAULT, MONGODB_CR, SCRAM_SHA_1 </p> <p>DEFAULT – For MongoDB version 2.x, use MONGODB_CR. For MongoDB version 3.x, use SCRAM_SHA_1. This attribute is not used when authType=No.</p>",
                                        "enum": [
                                            "default",
                                            "mongodb_cr",
                                            "scram_sha_1"
                                        ],
                                        "type": "string"
                                    },
                                    "AuthSource": {
                                        "description": "<p> The MongoDB database name. This attribute is not used when <code>authType=NO</code>. </p> <p>The default is admin.</p>",
                                        "type": "string"
                                    },
                                    "AuthType": {
                                        "description": "<p> The authentication type you use to access the MongoDB source endpoint.</p> <p>Valid values: NO, PASSWORD </p> <p>When NO is selected, user name and password parameters are not used and can be empty. </p>",
                                        "enum": [
                                            "no",
                                            "password"
                                        ],
                                        "type": "string"
                                    },
                                    "DatabaseName": {
                                        "description": " The database name on the MongoDB source endpoint. ",
                                        "type": "string"
                                    },
                                    "DocsToInvestigate": {
                                        "description": "<p> Indicates the number of documents to preview to determine the document organization. Use this attribute when <code>NestingLevel</code> is set to ONE. </p> <p>Must be a positive value greater than 0. Default value is 1000.</p>",
                                        "type": "string"
                                    },
                                    "ExtractDocId": {
                                        "description": "<p> Specifies the document ID. Use this attribute when <code>NestingLevel</code> is set to NONE. </p> <p>Default value is false. </p>",
                                        "type": "string"
                                    },
                                    "KmsKeyId": {
                                        "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                        "type": "string"
                                    },
                                    "NestingLevel": {
                                        "description": "<p> Specifies either document or table mode. </p> <p>Valid values: NONE, ONE</p> <p>Default value is NONE. Specify NONE to use document mode. Specify ONE to use table mode.</p>",
                                        "enum": [
                                            "none",
                                            "one"
                                        ],
                                        "type": "string"
                                    },
                                    "Password": {
                                        "description": " The password for the user account you use to access the MongoDB source endpoint. ",
                                        "format": "password",
                                        "type": "string"
                                    },
                                    "Port": {
                                        "description": " The port value for the MongoDB source endpoint. ",
                                        "type": "integer"
                                    },
                                    "ServerName": {
                                        "description": " The name of the server on the MongoDB source endpoint. ",
                                        "type": "string"
                                    },
                                    "Username": {
                                        "description": "The user name you use to access the MongoDB source endpoint. ",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "Port": {
                                "description": "The port value used to access the endpoint.",
                                "type": "integer"
                            },
                            "S3Settings": {
                                "description": "The settings for the S3 target endpoint. For more information, see the <code>S3Settings</code> structure.",
                                "properties": {
                                    "BucketFolder": {
                                        "description": " An optional parameter to set a folder name in the S3 bucket. If provided, tables are created in the path &lt;bucketFolder&gt;/&lt;schema_name&gt;/&lt;table_name&gt;/. If this parameter is not specified, then the path used is &lt;schema_name&gt;/&lt;table_name&gt;/. ",
                                        "type": "string"
                                    },
                                    "BucketName": {
                                        "description": " The name of the S3 bucket. ",
                                        "type": "string"
                                    },
                                    "CompressionType": {
                                        "description": " An optional parameter to use GZIP to compress the target files. Set to GZIP to compress the target files. Set to NONE (the default) or do not use to leave the files uncompressed. ",
                                        "enum": [
                                            "none",
                                            "gzip"
                                        ],
                                        "type": "string"
                                    },
                                    "CsvDelimiter": {
                                        "description": " The delimiter used to separate columns in the source files. The default is a comma. ",
                                        "type": "string"
                                    },
                                    "CsvRowDelimiter": {
                                        "description": " The delimiter used to separate rows in the source files. The default is a carriage return (\\n). ",
                                        "type": "string"
                                    },
                                    "ExternalTableDefinition": {
                                        "description": " The external table definition. ",
                                        "type": "string"
                                    },
                                    "ServiceAccessRoleArn": {
                                        "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "ServerName": {
                                "description": "The name of the server at the endpoint.",
                                "type": "string"
                            },
                            "ServiceAccessRoleArn": {
                                "description": "The Amazon Resource Name (ARN) used by the service access IAM role.",
                                "type": "string"
                            },
                            "SslMode": {
                                "description": "<p>The SSL mode used to connect to the endpoint.</p> <p>SSL mode can be one of four values: none, require, verify-ca, verify-full. </p> <p>The default value is none.</p>",
                                "enum": [
                                    "none",
                                    "require",
                                    "verify-ca",
                                    "verify-full"
                                ],
                                "type": "string"
                            },
                            "Status": {
                                "description": "The status of the endpoint.",
                                "type": "string"
                            },
                            "Username": {
                                "description": "The user name used to connect to the endpoint.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CreateEventSubscriptionMessage": {
                "description": "<p/>",
                "properties": {
                    "Enabled": {
                        "description": " A Boolean value; set to <code>true</code> to activate the subscription, or set to <code>false</code> to create the subscription but not activate it. ",
                        "type": "boolean"
                    },
                    "EventCategories": {
                        "description": " A list of event categories for a source type that you want to subscribe to. You can see a list of the categories for a given source type by calling the <code>DescribeEventCategories</code> action or in the topic <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html\">Working with Events and Notifications</a> in the <i>AWS Database Migration Service User Guide.</i> ",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "SnsTopicArn": {
                        "description": " The Amazon Resource Name (ARN) of the Amazon SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it. ",
                        "type": "string"
                    },
                    "SourceIds": {
                        "description": " The list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it cannot end with a hyphen or contain two consecutive hyphens. ",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "SourceType": {
                        "description": "<p> The type of AWS DMS resource that generates the events. For example, if you want to be notified of events generated by a replication instance, you set this parameter to <code>replication-instance</code>. If this value is not specified, all events are returned. </p> <p>Valid values: replication-instance | migration-task</p>",
                        "type": "string"
                    },
                    "SubscriptionName": {
                        "description": "<p>The name of the AWS DMS event notification subscription. </p> <p>Constraints: The name must be less than 255 characters. </p>",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "A tag to be attached to the event subscription.",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "Key": {
                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "SubscriptionName",
                    "SnsTopicArn"
                ],
                "type": "object"
            },
            "CreateEventSubscriptionResponse": {
                "description": "<p/>",
                "properties": {
                    "EventSubscription": {
                        "description": "The event subscription that was created.",
                        "properties": {
                            "CustSubscriptionId": {
                                "description": "The AWS DMS event notification subscription Id.",
                                "type": "string"
                            },
                            "CustomerAwsId": {
                                "description": "The AWS customer account associated with the AWS DMS event notification subscription.",
                                "type": "string"
                            },
                            "Enabled": {
                                "description": "Boolean value that indicates if the event subscription is enabled.",
                                "type": "boolean"
                            },
                            "EventCategoriesList": {
                                "description": "A lists of event categories.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "SnsTopicArn": {
                                "description": "The topic ARN of the AWS DMS event notification subscription.",
                                "type": "string"
                            },
                            "SourceIdsList": {
                                "description": "A list of source Ids for the event subscription.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "SourceType": {
                                "description": "<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | replication-server | security-group | migration-task</p>",
                                "type": "string"
                            },
                            "Status": {
                                "description": "<p>The status of the AWS DMS event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that AWS DMS no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                                "type": "string"
                            },
                            "SubscriptionCreationTime": {
                                "description": "The time the RDS event notification subscription was created.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CreateReplicationInstanceMessage": {
                "description": "<p/>",
                "example": {
                    "AllocatedStorage": 123,
                    "AutoMinorVersionUpgrade": true,
                    "AvailabilityZone": "",
                    "EngineVersion": "",
                    "KmsKeyId": "",
                    "MultiAZ": true,
                    "PreferredMaintenanceWindow": "",
                    "PubliclyAccessible": true,
                    "ReplicationInstanceClass": "",
                    "ReplicationInstanceIdentifier": "",
                    "ReplicationSubnetGroupIdentifier": "",
                    "Tags": [
                        {
                            "Key": "string",
                            "Value": "string"
                        }
                    ],
                    "VpcSecurityGroupIds": []
                },
                "properties": {
                    "AllocatedStorage": {
                        "description": "The amount of storage (in gigabytes) to be initially allocated for the replication instance.",
                        "type": "integer"
                    },
                    "AutoMinorVersionUpgrade": {
                        "description": "<p>Indicates that minor engine upgrades will be applied automatically to the replication instance during the maintenance window.</p> <p>Default: <code>true</code> </p>",
                        "type": "boolean"
                    },
                    "AvailabilityZone": {
                        "description": "<p>The EC2 Availability Zone that the replication instance will be created in.</p> <p>Default: A random, system-chosen Availability Zone in the endpoint's region.</p> <p> Example: <code>us-east-1d</code> </p>",
                        "type": "string"
                    },
                    "DnsNameServers": {
                        "description": "A list of DNS name servers supported for the replication instance.",
                        "type": "string"
                    },
                    "EngineVersion": {
                        "description": "The engine version number of the replication instance.",
                        "type": "string"
                    },
                    "KmsKeyId": {
                        "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                        "type": "string"
                    },
                    "MultiAZ": {
                        "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. ",
                        "type": "boolean"
                    },
                    "PreferredMaintenanceWindow": {
                        "description": "<p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p> <p> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>Default: A 30-minute window selected at random from an 8-hour block of time per region, occurring on a random day of the week.</p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun</p> <p>Constraints: Minimum 30-minute window.</p>",
                        "type": "string"
                    },
                    "PubliclyAccessible": {
                        "description": " Specifies the accessibility options for the replication instance. A value of <code>true</code> represents an instance with a public IP address. A value of <code>false</code> represents an instance with a private IP address. The default value is <code>true</code>. ",
                        "type": "boolean"
                    },
                    "ReplicationInstanceClass": {
                        "description": "<p>The compute and memory capacity of the replication instance as specified by the replication instance class.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                        "type": "string"
                    },
                    "ReplicationInstanceIdentifier": {
                        "description": "<p>The replication instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>myrepinstance</code> </p>",
                        "type": "string"
                    },
                    "ReplicationSubnetGroupIdentifier": {
                        "description": "A subnet group to associate with the replication instance.",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "Tags to be associated with the replication instance.",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "Key": {
                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "VpcSecurityGroupIds": {
                        "description": " Specifies the VPC security group to be used with the replication instance. The VPC security group must work with the VPC containing the replication instance. ",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "ReplicationInstanceIdentifier",
                    "ReplicationInstanceClass"
                ],
                "type": "object"
            },
            "CreateReplicationInstanceResponse": {
                "description": "<p/>",
                "example": {
                    "ReplicationInstance": {
                        "AllocatedStorage": 5,
                        "AutoMinorVersionUpgrade": true,
                        "EngineVersion": "1.5.0",
                        "KmsKeyId": "arn:aws:kms:us-east-1:123456789012:key/4c1731d6-5435-ed4d-be13-d53411a7cfbd",
                        "PendingModifiedValues": {},
                        "PreferredMaintenanceWindow": "sun:06:00-sun:14:00",
                        "PubliclyAccessible": true,
                        "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
                        "ReplicationInstanceClass": "dms.t2.micro",
                        "ReplicationInstanceIdentifier": "test-rep-1",
                        "ReplicationInstanceStatus": "creating",
                        "ReplicationSubnetGroup": {
                            "ReplicationSubnetGroupDescription": "default",
                            "ReplicationSubnetGroupIdentifier": "default",
                            "SubnetGroupStatus": "Complete",
                            "Subnets": [
                                {
                                    "SubnetAvailabilityZone": {
                                        "Name": "us-east-1d"
                                    },
                                    "SubnetIdentifier": "subnet-f6dd91af",
                                    "SubnetStatus": "Active"
                                },
                                {
                                    "SubnetAvailabilityZone": {
                                        "Name": "us-east-1b"
                                    },
                                    "SubnetIdentifier": "subnet-3605751d",
                                    "SubnetStatus": "Active"
                                },
                                {
                                    "SubnetAvailabilityZone": {
                                        "Name": "us-east-1c"
                                    },
                                    "SubnetIdentifier": "subnet-c2daefb5",
                                    "SubnetStatus": "Active"
                                },
                                {
                                    "SubnetAvailabilityZone": {
                                        "Name": "us-east-1e"
                                    },
                                    "SubnetIdentifier": "subnet-85e90cb8",
                                    "SubnetStatus": "Active"
                                }
                            ],
                            "VpcId": "vpc-6741a603"
                        }
                    }
                },
                "properties": {
                    "ReplicationInstance": {
                        "description": "The replication instance that was created.",
                        "properties": {
                            "AllocatedStorage": {
                                "description": "The amount of storage (in gigabytes) that is allocated for the replication instance.",
                                "type": "integer"
                            },
                            "AutoMinorVersionUpgrade": {
                                "description": "Boolean value indicating if minor version upgrades will be automatically applied to the instance.",
                                "type": "boolean"
                            },
                            "AvailabilityZone": {
                                "description": "The Availability Zone for the instance.",
                                "type": "string"
                            },
                            "DnsNameServers": {
                                "description": "The DNS name servers for the replication instance.",
                                "type": "string"
                            },
                            "EngineVersion": {
                                "description": "The engine version number of the replication instance.",
                                "type": "string"
                            },
                            "FreeUntil": {
                                "description": " The expiration date of the free replication instance that is part of the Free DMS program. ",
                                "format": "date-time",
                                "type": "string"
                            },
                            "InstanceCreateTime": {
                                "description": "The time the replication instance was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "KmsKeyId": {
                                "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                "type": "string"
                            },
                            "MultiAZ": {
                                "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. ",
                                "type": "boolean"
                            },
                            "PendingModifiedValues": {
                                "description": "The pending modification values.",
                                "properties": {
                                    "AllocatedStorage": {
                                        "description": "The amount of storage (in gigabytes) that is allocated for the replication instance.",
                                        "type": "integer"
                                    },
                                    "EngineVersion": {
                                        "description": "The engine version number of the replication instance.",
                                        "type": "string"
                                    },
                                    "MultiAZ": {
                                        "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. ",
                                        "type": "boolean"
                                    },
                                    "ReplicationInstanceClass": {
                                        "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "PreferredMaintenanceWindow": {
                                "description": "The maintenance window times for the replication instance.",
                                "type": "string"
                            },
                            "PubliclyAccessible": {
                                "description": " Specifies the accessibility options for the replication instance. A value of <code>true</code> represents an instance with a public IP address. A value of <code>false</code> represents an instance with a private IP address. The default value is <code>true</code>. ",
                                "type": "boolean"
                            },
                            "ReplicationInstanceArn": {
                                "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                "type": "string"
                            },
                            "ReplicationInstanceClass": {
                                "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                                "type": "string"
                            },
                            "ReplicationInstanceIdentifier": {
                                "description": "<p>The replication instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>myrepinstance</code> </p>",
                                "type": "string"
                            },
                            "ReplicationInstancePrivateIpAddress": {
                                "description": "The private IP address of the replication instance.",
                                "type": "string"
                            },
                            "ReplicationInstancePrivateIpAddresses": {
                                "description": "The private IP address of the replication instance.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "ReplicationInstancePublicIpAddress": {
                                "description": "The public IP address of the replication instance.",
                                "type": "string"
                            },
                            "ReplicationInstancePublicIpAddresses": {
                                "description": "The public IP address of the replication instance.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "ReplicationInstanceStatus": {
                                "description": "The status of the replication instance.",
                                "type": "string"
                            },
                            "ReplicationSubnetGroup": {
                                "description": "The subnet group for the replication instance.",
                                "properties": {
                                    "ReplicationSubnetGroupDescription": {
                                        "description": "The description of the replication subnet group.",
                                        "type": "string"
                                    },
                                    "ReplicationSubnetGroupIdentifier": {
                                        "description": "The identifier of the replication instance subnet group.",
                                        "type": "string"
                                    },
                                    "SubnetGroupStatus": {
                                        "description": "The status of the subnet group.",
                                        "type": "string"
                                    },
                                    "Subnets": {
                                        "description": "The subnets that are in the subnet group.",
                                        "items": {
                                            "description": "<p/>",
                                            "properties": {
                                                "SubnetAvailabilityZone": {
                                                    "description": "The Availability Zone of the subnet.",
                                                    "properties": {
                                                        "Name": {
                                                            "description": "The name of the availability zone.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "SubnetIdentifier": {
                                                    "description": "The subnet identifier.",
                                                    "type": "string"
                                                },
                                                "SubnetStatus": {
                                                    "description": "The status of the subnet.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "VpcId": {
                                        "description": "The ID of the VPC.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "SecondaryAvailabilityZone": {
                                "description": "The availability zone of the standby replication instance in a Multi-AZ deployment.",
                                "type": "string"
                            },
                            "VpcSecurityGroups": {
                                "description": "The VPC security group for the instance.",
                                "items": {
                                    "description": "<p/>",
                                    "properties": {
                                        "Status": {
                                            "description": "The status of the VPC security group.",
                                            "type": "string"
                                        },
                                        "VpcSecurityGroupId": {
                                            "description": "The VPC security group Id.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CreateReplicationSubnetGroupMessage": {
                "description": "<p/>",
                "example": {
                    "ReplicationSubnetGroupDescription": "US West subnet group",
                    "ReplicationSubnetGroupIdentifier": "us-west-2ab-vpc-215ds366",
                    "SubnetIds": [
                        "subnet-e145356n",
                        "subnet-58f79200"
                    ],
                    "Tags": [
                        {
                            "Key": "Acount",
                            "Value": "145235"
                        }
                    ]
                },
                "properties": {
                    "ReplicationSubnetGroupDescription": {
                        "description": "The description for the subnet group.",
                        "type": "string"
                    },
                    "ReplicationSubnetGroupIdentifier": {
                        "description": "<p>The name for the replication subnet group. This value is stored as a lowercase string.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters, periods, spaces, underscores, or hyphens. Must not be \"default\".</p> <p>Example: <code>mySubnetgroup</code> </p>",
                        "type": "string"
                    },
                    "SubnetIds": {
                        "description": "The EC2 subnet IDs for the subnet group.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "Tags": {
                        "description": "The tag to be assigned to the subnet group.",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "Key": {
                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "ReplicationSubnetGroupIdentifier",
                    "ReplicationSubnetGroupDescription",
                    "SubnetIds"
                ],
                "type": "object"
            },
            "CreateReplicationSubnetGroupResponse": {
                "description": "<p/>",
                "example": {
                    "ReplicationSubnetGroup": {}
                },
                "properties": {
                    "ReplicationSubnetGroup": {
                        "description": "The replication subnet group that was created.",
                        "properties": {
                            "ReplicationSubnetGroupDescription": {
                                "description": "The description of the replication subnet group.",
                                "type": "string"
                            },
                            "ReplicationSubnetGroupIdentifier": {
                                "description": "The identifier of the replication instance subnet group.",
                                "type": "string"
                            },
                            "SubnetGroupStatus": {
                                "description": "The status of the subnet group.",
                                "type": "string"
                            },
                            "Subnets": {
                                "description": "The subnets that are in the subnet group.",
                                "items": {
                                    "description": "<p/>",
                                    "properties": {
                                        "SubnetAvailabilityZone": {
                                            "description": "The Availability Zone of the subnet.",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the availability zone.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "SubnetIdentifier": {
                                            "description": "The subnet identifier.",
                                            "type": "string"
                                        },
                                        "SubnetStatus": {
                                            "description": "The status of the subnet.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "VpcId": {
                                "description": "The ID of the VPC.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CreateReplicationTaskMessage": {
                "description": "<p/>",
                "example": {
                    "CdcStartTime": "2016-12-14T18:25:43Z",
                    "MigrationType": "full-load",
                    "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
                    "ReplicationTaskIdentifier": "task1",
                    "ReplicationTaskSettings": "",
                    "SourceEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ZW5UAN6P4E77EC7YWHK4RZZ3BE",
                    "TableMappings": "file://mappingfile.json",
                    "Tags": [
                        {
                            "Key": "Acount",
                            "Value": "24352226"
                        }
                    ],
                    "TargetEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E"
                },
                "properties": {
                    "CdcStartPosition": {
                        "description": "<p>Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p> The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position \"checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93\"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p>",
                        "type": "string"
                    },
                    "CdcStartTime": {
                        "description": "<p>Indicates the start time for a change data capture (CDC) operation. Use either CdcStartTime or CdcStartPosition to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p>Timestamp Example: --cdc-start-time “2018-03-08T12:12:12”</p>",
                        "format": "date-time",
                        "type": "string"
                    },
                    "CdcStopPosition": {
                        "description": "<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:3018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 3018-02-09T12:12:12 “</p>",
                        "type": "string"
                    },
                    "MigrationType": {
                        "description": "The migration type.",
                        "enum": [
                            "full-load",
                            "cdc",
                            "full-load-and-cdc"
                        ],
                        "type": "string"
                    },
                    "ReplicationInstanceArn": {
                        "description": "The Amazon Resource Name (ARN) of the replication instance.",
                        "type": "string"
                    },
                    "ReplicationTaskIdentifier": {
                        "description": "<p>The replication task identifier.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>",
                        "type": "string"
                    },
                    "ReplicationTaskSettings": {
                        "description": "Settings for the task, such as target metadata settings. For a complete list of task settings, see <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.CustomizingTasks.TaskSettings.html\">Task Settings for AWS Database Migration Service Tasks</a> in the <i>AWS Database Migration User Guide.</i> ",
                        "type": "string"
                    },
                    "SourceEndpointArn": {
                        "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                        "type": "string"
                    },
                    "TableMappings": {
                        "description": "<p>When using the AWS CLI or boto3, provide the path of the JSON file that contains the table mappings. Precede the path with \"file://\". When working with the DMS API, provide the JSON as the parameter value.</p> <p>For example, --table-mappings file://mappingfile.json</p>",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "Tags to be added to the replication instance.",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "Key": {
                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "TargetEndpointArn": {
                        "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                        "type": "string"
                    }
                },
                "required": [
                    "ReplicationTaskIdentifier",
                    "SourceEndpointArn",
                    "TargetEndpointArn",
                    "ReplicationInstanceArn",
                    "MigrationType",
                    "TableMappings"
                ],
                "type": "object"
            },
            "CreateReplicationTaskResponse": {
                "description": "<p/>",
                "example": {
                    "ReplicationTask": {
                        "MigrationType": "full-load",
                        "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
                        "ReplicationTaskArn": "arn:aws:dms:us-east-1:123456789012:task:OEAMB3NXSTZ6LFYZFEPPBBXPYM",
                        "ReplicationTaskCreationDate": "2016-12-14T18:25:43Z",
                        "ReplicationTaskIdentifier": "task1",
                        "ReplicationTaskSettings": "{\"TargetMetadata\":{\"TargetSchema\":\"\",\"SupportLobs\":true,\"FullLobMode\":true,\"LobChunkSize\":64,\"LimitedSizeLobMode\":false,\"LobMaxSize\":0},\"FullLoadSettings\":{\"FullLoadEnabled\":true,\"ApplyChangesEnabled\":false,\"TargetTablePrepMode\":\"DROP_AND_CREATE\",\"CreatePkAfterFullLoad\":false,\"StopTaskCachedChangesApplied\":false,\"StopTaskCachedChangesNotApplied\":false,\"ResumeEnabled\":false,\"ResumeMinTableSize\":100000,\"ResumeOnlyClusteredPKTables\":true,\"MaxFullLoadSubTasks\":8,\"TransactionConsistencyTimeout\":600,\"CommitRate\":10000},\"Logging\":{\"EnableLogging\":false}}",
                        "SourceEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ZW5UAN6P4E77EC7YWHK4RZZ3BE",
                        "Status": "creating",
                        "TableMappings": "file://mappingfile.json",
                        "TargetEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E"
                    }
                },
                "properties": {
                    "ReplicationTask": {
                        "description": "The replication task that was created.",
                        "properties": {
                            "CdcStartPosition": {
                                "description": "<p>Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p> The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position \"checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93\"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p>",
                                "type": "string"
                            },
                            "CdcStopPosition": {
                                "description": "<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:3018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 3018-02-09T12:12:12 “</p>",
                                "type": "string"
                            },
                            "LastFailureMessage": {
                                "description": "The last error (failure) message generated for the replication instance.",
                                "type": "string"
                            },
                            "MigrationType": {
                                "description": "The type of migration.",
                                "enum": [
                                    "full-load",
                                    "cdc",
                                    "full-load-and-cdc"
                                ],
                                "type": "string"
                            },
                            "RecoveryCheckpoint": {
                                "description": "Indicates the last checkpoint that occurred during a change data capture (CDC) operation. You can provide this value to the <code>CdcStartPosition</code> parameter to start a CDC operation that begins at that checkpoint.",
                                "type": "string"
                            },
                            "ReplicationInstanceArn": {
                                "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                "type": "string"
                            },
                            "ReplicationTaskArn": {
                                "description": "The Amazon Resource Name (ARN) of the replication task.",
                                "type": "string"
                            },
                            "ReplicationTaskCreationDate": {
                                "description": "The date the replication task was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "ReplicationTaskIdentifier": {
                                "description": "<p>The user-assigned replication task identifier or name.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>",
                                "type": "string"
                            },
                            "ReplicationTaskSettings": {
                                "description": "The settings for the replication task.",
                                "type": "string"
                            },
                            "ReplicationTaskStartDate": {
                                "description": "The date the replication task is scheduled to start.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "ReplicationTaskStats": {
                                "description": "The statistics for the task, including elapsed time, tables loaded, and table errors.",
                                "properties": {
                                    "ElapsedTimeMillis": {
                                        "description": "The elapsed time of the task, in milliseconds.",
                                        "type": "integer"
                                    },
                                    "FullLoadProgressPercent": {
                                        "description": "The percent complete for the full load migration task.",
                                        "type": "integer"
                                    },
                                    "TablesErrored": {
                                        "description": "The number of errors that have occurred during this task.",
                                        "type": "integer"
                                    },
                                    "TablesLoaded": {
                                        "description": "The number of tables loaded for this task.",
                                        "type": "integer"
                                    },
                                    "TablesLoading": {
                                        "description": "The number of tables currently loading for this task.",
                                        "type": "integer"
                                    },
                                    "TablesQueued": {
                                        "description": "The number of tables queued for this task.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "SourceEndpointArn": {
                                "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "The status of the replication task.",
                                "type": "string"
                            },
                            "StopReason": {
                                "description": "The reason the replication task was stopped.",
                                "type": "string"
                            },
                            "TableMappings": {
                                "description": "Table mappings specified in the task.",
                                "type": "string"
                            },
                            "TargetEndpointArn": {
                                "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DeleteCertificateMessage": {
                "example": {
                    "CertificateArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUSM457DE6XFJCJQ"
                },
                "properties": {
                    "CertificateArn": {
                        "description": "The Amazon Resource Name (ARN) of the deleted certificate.",
                        "type": "string"
                    }
                },
                "required": [
                    "CertificateArn"
                ],
                "type": "object"
            },
            "DeleteCertificateResponse": {
                "example": {
                    "Certificate": {}
                },
                "properties": {
                    "Certificate": {
                        "description": "The Secure Sockets Layer (SSL) certificate.",
                        "properties": {
                            "CertificateArn": {
                                "description": "The Amazon Resource Name (ARN) for the certificate.",
                                "type": "string"
                            },
                            "CertificateCreationDate": {
                                "description": "The date that the certificate was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "CertificateIdentifier": {
                                "description": "The customer-assigned name of the certificate. Valid characters are A-z and 0-9.",
                                "type": "string"
                            },
                            "CertificateOwner": {
                                "description": "The owner of the certificate.",
                                "type": "string"
                            },
                            "CertificatePem": {
                                "description": "The contents of the .pem X.509 certificate file for the certificate.",
                                "type": "string"
                            },
                            "CertificateWallet": {
                                "description": "The location of the imported Oracle Wallet certificate for use with SSL.",
                                "type": "string"
                            },
                            "KeyLength": {
                                "description": "The key length of the cryptographic algorithm being used.",
                                "type": "integer"
                            },
                            "SigningAlgorithm": {
                                "description": "The signing algorithm for the certificate.",
                                "type": "string"
                            },
                            "ValidFromDate": {
                                "description": "The beginning date that the certificate is valid.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "ValidToDate": {
                                "description": "The final date that the certificate is valid.",
                                "format": "date-time",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DeleteEndpointMessage": {
                "description": "<p/>",
                "example": {
                    "EndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:RAAR3R22XSH46S3PWLC3NJAWKM"
                },
                "properties": {
                    "EndpointArn": {
                        "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                        "type": "string"
                    }
                },
                "required": [
                    "EndpointArn"
                ],
                "type": "object"
            },
            "DeleteEndpointResponse": {
                "description": "<p/>",
                "example": {
                    "Endpoint": {
                        "EndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:RAAR3R22XSH46S3PWLC3NJAWKM",
                        "EndpointIdentifier": "test-endpoint-1",
                        "EndpointType": "source",
                        "EngineName": "mysql",
                        "KmsKeyId": "arn:aws:kms:us-east-1:123456789012:key/4c1731d6-5435-ed4d-be13-d53411a7cfbd",
                        "Port": 3306,
                        "ServerName": "mydb.cx1llnox7iyx.us-west-2.rds.amazonaws.com",
                        "Status": "active",
                        "Username": "username"
                    }
                },
                "properties": {
                    "Endpoint": {
                        "description": "The endpoint that was deleted.",
                        "properties": {
                            "CertificateArn": {
                                "description": "The Amazon Resource Name (ARN) used for SSL connection to the endpoint.",
                                "type": "string"
                            },
                            "DatabaseName": {
                                "description": "The name of the database at the endpoint.",
                                "type": "string"
                            },
                            "DmsTransferSettings": {
                                "description": "<p>The settings in JSON format for the DMS transfer type of source endpoint. </p> <p>Possible attributes include the following:</p> <ul> <li> <p> <code>serviceAccessRoleArn</code> - The IAM role that has permission to access the Amazon S3 bucket.</p> </li> <li> <p> <code>bucketName</code> - The name of the S3 bucket to use.</p> </li> <li> <p> <code>compressionType</code> - An optional parameter to use GZIP to compress the target files. To use GZIP, set this value to <code>NONE</code> (the default). To keep the files uncompressed, don't use this value. </p> </li> </ul> <p>Shorthand syntax for these attributes is as follows: <code>ServiceAccessRoleArn=string,BucketName=string,CompressionType=string</code> </p> <p>JSON syntax for these attributes is as follows: <code>{ \"ServiceAccessRoleArn\": \"string\", \"BucketName\": \"string\", \"CompressionType\": \"none\"|\"gzip\" } </code> </p>",
                                "properties": {
                                    "BucketName": {
                                        "description": " The name of the S3 bucket to use. ",
                                        "type": "string"
                                    },
                                    "ServiceAccessRoleArn": {
                                        "description": " The IAM role that has permission to access the Amazon S3 bucket. ",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "DynamoDbSettings": {
                                "description": "The settings for the target DynamoDB database. For more information, see the <code>DynamoDBSettings</code> structure.",
                                "properties": {
                                    "ServiceAccessRoleArn": {
                                        "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ServiceAccessRoleArn"
                                ],
                                "type": "object"
                            },
                            "ElasticsearchSettings": {
                                "description": "The settings for the Elasticsearch source endpoint. For more information, see the <code>ElasticsearchSettings</code> structure.",
                                "properties": {
                                    "EndpointUri": {
                                        "description": "The endpoint for the ElasticSearch cluster.",
                                        "type": "string"
                                    },
                                    "ErrorRetryDuration": {
                                        "description": "The maximum number of seconds that DMS retries failed API requests to the Elasticsearch cluster.",
                                        "type": "integer"
                                    },
                                    "FullLoadErrorPercentage": {
                                        "description": "The maximum percentage of records that can fail to be written before a full load operation stops. ",
                                        "type": "integer"
                                    },
                                    "ServiceAccessRoleArn": {
                                        "description": "The Amazon Resource Name (ARN) used by service to access the IAM role.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ServiceAccessRoleArn",
                                    "EndpointUri"
                                ],
                                "type": "object"
                            },
                            "EndpointArn": {
                                "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                "type": "string"
                            },
                            "EndpointIdentifier": {
                                "description": "The database endpoint identifier. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.",
                                "type": "string"
                            },
                            "EndpointType": {
                                "description": "The type of endpoint.",
                                "enum": [
                                    "source",
                                    "target"
                                ],
                                "type": "string"
                            },
                            "EngineDisplayName": {
                                "description": "The expanded name for the engine name. For example, if the <code>EngineName</code> parameter is \"aurora,\" this value would be \"Amazon Aurora MySQL.\"",
                                "type": "string"
                            },
                            "EngineName": {
                                "description": "The database engine name. Valid values, depending on the EndPointType, include mysql, oracle, postgres, mariadb, aurora, aurora-postgresql, redshift, s3, db2, azuredb, sybase, sybase, dynamodb, mongodb, and sqlserver.",
                                "type": "string"
                            },
                            "ExternalId": {
                                "description": " Value returned by a call to CreateEndpoint that can be used for cross-account validation. Use it on a subsequent call to CreateEndpoint to create the endpoint with a cross-account. ",
                                "type": "string"
                            },
                            "ExternalTableDefinition": {
                                "description": "The external table definition.",
                                "type": "string"
                            },
                            "ExtraConnectionAttributes": {
                                "description": "Additional connection attributes used to connect to the endpoint.",
                                "type": "string"
                            },
                            "KinesisSettings": {
                                "description": "The settings for the Amazon Kinesis source endpoint. For more information, see the <code>KinesisSettings</code> structure.",
                                "properties": {
                                    "MessageFormat": {
                                        "description": "The output format for the records created on the endpoint. The message format is <code>JSON</code>.",
                                        "enum": [
                                            "json"
                                        ],
                                        "type": "string"
                                    },
                                    "ServiceAccessRoleArn": {
                                        "description": "The Amazon Resource Name (ARN) for the IAM role that DMS uses to write to the Amazon Kinesis data stream.",
                                        "type": "string"
                                    },
                                    "StreamArn": {
                                        "description": "The Amazon Resource Name (ARN) for the Amazon Kinesis Data Streams endpoint.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "KmsKeyId": {
                                "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                "type": "string"
                            },
                            "MongoDbSettings": {
                                "description": "The settings for the MongoDB source endpoint. For more information, see the <code>MongoDbSettings</code> structure.",
                                "properties": {
                                    "AuthMechanism": {
                                        "description": "<p> The authentication mechanism you use to access the MongoDB source endpoint.</p> <p>Valid values: DEFAULT, MONGODB_CR, SCRAM_SHA_1 </p> <p>DEFAULT – For MongoDB version 2.x, use MONGODB_CR. For MongoDB version 3.x, use SCRAM_SHA_1. This attribute is not used when authType=No.</p>",
                                        "enum": [
                                            "default",
                                            "mongodb_cr",
                                            "scram_sha_1"
                                        ],
                                        "type": "string"
                                    },
                                    "AuthSource": {
                                        "description": "<p> The MongoDB database name. This attribute is not used when <code>authType=NO</code>. </p> <p>The default is admin.</p>",
                                        "type": "string"
                                    },
                                    "AuthType": {
                                        "description": "<p> The authentication type you use to access the MongoDB source endpoint.</p> <p>Valid values: NO, PASSWORD </p> <p>When NO is selected, user name and password parameters are not used and can be empty. </p>",
                                        "enum": [
                                            "no",
                                            "password"
                                        ],
                                        "type": "string"
                                    },
                                    "DatabaseName": {
                                        "description": " The database name on the MongoDB source endpoint. ",
                                        "type": "string"
                                    },
                                    "DocsToInvestigate": {
                                        "description": "<p> Indicates the number of documents to preview to determine the document organization. Use this attribute when <code>NestingLevel</code> is set to ONE. </p> <p>Must be a positive value greater than 0. Default value is 1000.</p>",
                                        "type": "string"
                                    },
                                    "ExtractDocId": {
                                        "description": "<p> Specifies the document ID. Use this attribute when <code>NestingLevel</code> is set to NONE. </p> <p>Default value is false. </p>",
                                        "type": "string"
                                    },
                                    "KmsKeyId": {
                                        "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                        "type": "string"
                                    },
                                    "NestingLevel": {
                                        "description": "<p> Specifies either document or table mode. </p> <p>Valid values: NONE, ONE</p> <p>Default value is NONE. Specify NONE to use document mode. Specify ONE to use table mode.</p>",
                                        "enum": [
                                            "none",
                                            "one"
                                        ],
                                        "type": "string"
                                    },
                                    "Password": {
                                        "description": " The password for the user account you use to access the MongoDB source endpoint. ",
                                        "format": "password",
                                        "type": "string"
                                    },
                                    "Port": {
                                        "description": " The port value for the MongoDB source endpoint. ",
                                        "type": "integer"
                                    },
                                    "ServerName": {
                                        "description": " The name of the server on the MongoDB source endpoint. ",
                                        "type": "string"
                                    },
                                    "Username": {
                                        "description": "The user name you use to access the MongoDB source endpoint. ",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "Port": {
                                "description": "The port value used to access the endpoint.",
                                "type": "integer"
                            },
                            "S3Settings": {
                                "description": "The settings for the S3 target endpoint. For more information, see the <code>S3Settings</code> structure.",
                                "properties": {
                                    "BucketFolder": {
                                        "description": " An optional parameter to set a folder name in the S3 bucket. If provided, tables are created in the path &lt;bucketFolder&gt;/&lt;schema_name&gt;/&lt;table_name&gt;/. If this parameter is not specified, then the path used is &lt;schema_name&gt;/&lt;table_name&gt;/. ",
                                        "type": "string"
                                    },
                                    "BucketName": {
                                        "description": " The name of the S3 bucket. ",
                                        "type": "string"
                                    },
                                    "CompressionType": {
                                        "description": " An optional parameter to use GZIP to compress the target files. Set to GZIP to compress the target files. Set to NONE (the default) or do not use to leave the files uncompressed. ",
                                        "enum": [
                                            "none",
                                            "gzip"
                                        ],
                                        "type": "string"
                                    },
                                    "CsvDelimiter": {
                                        "description": " The delimiter used to separate columns in the source files. The default is a comma. ",
                                        "type": "string"
                                    },
                                    "CsvRowDelimiter": {
                                        "description": " The delimiter used to separate rows in the source files. The default is a carriage return (\\n). ",
                                        "type": "string"
                                    },
                                    "ExternalTableDefinition": {
                                        "description": " The external table definition. ",
                                        "type": "string"
                                    },
                                    "ServiceAccessRoleArn": {
                                        "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "ServerName": {
                                "description": "The name of the server at the endpoint.",
                                "type": "string"
                            },
                            "ServiceAccessRoleArn": {
                                "description": "The Amazon Resource Name (ARN) used by the service access IAM role.",
                                "type": "string"
                            },
                            "SslMode": {
                                "description": "<p>The SSL mode used to connect to the endpoint.</p> <p>SSL mode can be one of four values: none, require, verify-ca, verify-full. </p> <p>The default value is none.</p>",
                                "enum": [
                                    "none",
                                    "require",
                                    "verify-ca",
                                    "verify-full"
                                ],
                                "type": "string"
                            },
                            "Status": {
                                "description": "The status of the endpoint.",
                                "type": "string"
                            },
                            "Username": {
                                "description": "The user name used to connect to the endpoint.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DeleteEventSubscriptionMessage": {
                "description": "<p/>",
                "properties": {
                    "SubscriptionName": {
                        "description": "The name of the DMS event notification subscription to be deleted.",
                        "type": "string"
                    }
                },
                "required": [
                    "SubscriptionName"
                ],
                "type": "object"
            },
            "DeleteEventSubscriptionResponse": {
                "description": "<p/>",
                "properties": {
                    "EventSubscription": {
                        "description": "The event subscription that was deleted.",
                        "properties": {
                            "CustSubscriptionId": {
                                "description": "The AWS DMS event notification subscription Id.",
                                "type": "string"
                            },
                            "CustomerAwsId": {
                                "description": "The AWS customer account associated with the AWS DMS event notification subscription.",
                                "type": "string"
                            },
                            "Enabled": {
                                "description": "Boolean value that indicates if the event subscription is enabled.",
                                "type": "boolean"
                            },
                            "EventCategoriesList": {
                                "description": "A lists of event categories.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "SnsTopicArn": {
                                "description": "The topic ARN of the AWS DMS event notification subscription.",
                                "type": "string"
                            },
                            "SourceIdsList": {
                                "description": "A list of source Ids for the event subscription.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "SourceType": {
                                "description": "<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | replication-server | security-group | migration-task</p>",
                                "type": "string"
                            },
                            "Status": {
                                "description": "<p>The status of the AWS DMS event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that AWS DMS no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                                "type": "string"
                            },
                            "SubscriptionCreationTime": {
                                "description": "The time the RDS event notification subscription was created.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DeleteReplicationInstanceMessage": {
                "description": "<p/>",
                "example": {
                    "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ"
                },
                "properties": {
                    "ReplicationInstanceArn": {
                        "description": "The Amazon Resource Name (ARN) of the replication instance to be deleted.",
                        "type": "string"
                    }
                },
                "required": [
                    "ReplicationInstanceArn"
                ],
                "type": "object"
            },
            "DeleteReplicationInstanceResponse": {
                "description": "<p/>",
                "example": {
                    "ReplicationInstance": {
                        "AllocatedStorage": 5,
                        "AutoMinorVersionUpgrade": true,
                        "EngineVersion": "1.5.0",
                        "KmsKeyId": "arn:aws:kms:us-east-1:123456789012:key/4c1731d6-5435-ed4d-be13-d53411a7cfbd",
                        "PendingModifiedValues": {},
                        "PreferredMaintenanceWindow": "sun:06:00-sun:14:00",
                        "PubliclyAccessible": true,
                        "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
                        "ReplicationInstanceClass": "dms.t2.micro",
                        "ReplicationInstanceIdentifier": "test-rep-1",
                        "ReplicationInstanceStatus": "creating",
                        "ReplicationSubnetGroup": {
                            "ReplicationSubnetGroupDescription": "default",
                            "ReplicationSubnetGroupIdentifier": "default",
                            "SubnetGroupStatus": "Complete",
                            "Subnets": [
                                {
                                    "SubnetAvailabilityZone": {
                                        "Name": "us-east-1d"
                                    },
                                    "SubnetIdentifier": "subnet-f6dd91af",
                                    "SubnetStatus": "Active"
                                },
                                {
                                    "SubnetAvailabilityZone": {
                                        "Name": "us-east-1b"
                                    },
                                    "SubnetIdentifier": "subnet-3605751d",
                                    "SubnetStatus": "Active"
                                },
                                {
                                    "SubnetAvailabilityZone": {
                                        "Name": "us-east-1c"
                                    },
                                    "SubnetIdentifier": "subnet-c2daefb5",
                                    "SubnetStatus": "Active"
                                },
                                {
                                    "SubnetAvailabilityZone": {
                                        "Name": "us-east-1e"
                                    },
                                    "SubnetIdentifier": "subnet-85e90cb8",
                                    "SubnetStatus": "Active"
                                }
                            ],
                            "VpcId": "vpc-6741a603"
                        }
                    }
                },
                "properties": {
                    "ReplicationInstance": {
                        "description": "The replication instance that was deleted.",
                        "properties": {
                            "AllocatedStorage": {
                                "description": "The amount of storage (in gigabytes) that is allocated for the replication instance.",
                                "type": "integer"
                            },
                            "AutoMinorVersionUpgrade": {
                                "description": "Boolean value indicating if minor version upgrades will be automatically applied to the instance.",
                                "type": "boolean"
                            },
                            "AvailabilityZone": {
                                "description": "The Availability Zone for the instance.",
                                "type": "string"
                            },
                            "DnsNameServers": {
                                "description": "The DNS name servers for the replication instance.",
                                "type": "string"
                            },
                            "EngineVersion": {
                                "description": "The engine version number of the replication instance.",
                                "type": "string"
                            },
                            "FreeUntil": {
                                "description": " The expiration date of the free replication instance that is part of the Free DMS program. ",
                                "format": "date-time",
                                "type": "string"
                            },
                            "InstanceCreateTime": {
                                "description": "The time the replication instance was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "KmsKeyId": {
                                "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                "type": "string"
                            },
                            "MultiAZ": {
                                "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. ",
                                "type": "boolean"
                            },
                            "PendingModifiedValues": {
                                "description": "The pending modification values.",
                                "properties": {
                                    "AllocatedStorage": {
                                        "description": "The amount of storage (in gigabytes) that is allocated for the replication instance.",
                                        "type": "integer"
                                    },
                                    "EngineVersion": {
                                        "description": "The engine version number of the replication instance.",
                                        "type": "string"
                                    },
                                    "MultiAZ": {
                                        "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. ",
                                        "type": "boolean"
                                    },
                                    "ReplicationInstanceClass": {
                                        "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "PreferredMaintenanceWindow": {
                                "description": "The maintenance window times for the replication instance.",
                                "type": "string"
                            },
                            "PubliclyAccessible": {
                                "description": " Specifies the accessibility options for the replication instance. A value of <code>true</code> represents an instance with a public IP address. A value of <code>false</code> represents an instance with a private IP address. The default value is <code>true</code>. ",
                                "type": "boolean"
                            },
                            "ReplicationInstanceArn": {
                                "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                "type": "string"
                            },
                            "ReplicationInstanceClass": {
                                "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                                "type": "string"
                            },
                            "ReplicationInstanceIdentifier": {
                                "description": "<p>The replication instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>myrepinstance</code> </p>",
                                "type": "string"
                            },
                            "ReplicationInstancePrivateIpAddress": {
                                "description": "The private IP address of the replication instance.",
                                "type": "string"
                            },
                            "ReplicationInstancePrivateIpAddresses": {
                                "description": "The private IP address of the replication instance.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "ReplicationInstancePublicIpAddress": {
                                "description": "The public IP address of the replication instance.",
                                "type": "string"
                            },
                            "ReplicationInstancePublicIpAddresses": {
                                "description": "The public IP address of the replication instance.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "ReplicationInstanceStatus": {
                                "description": "The status of the replication instance.",
                                "type": "string"
                            },
                            "ReplicationSubnetGroup": {
                                "description": "The subnet group for the replication instance.",
                                "properties": {
                                    "ReplicationSubnetGroupDescription": {
                                        "description": "The description of the replication subnet group.",
                                        "type": "string"
                                    },
                                    "ReplicationSubnetGroupIdentifier": {
                                        "description": "The identifier of the replication instance subnet group.",
                                        "type": "string"
                                    },
                                    "SubnetGroupStatus": {
                                        "description": "The status of the subnet group.",
                                        "type": "string"
                                    },
                                    "Subnets": {
                                        "description": "The subnets that are in the subnet group.",
                                        "items": {
                                            "description": "<p/>",
                                            "properties": {
                                                "SubnetAvailabilityZone": {
                                                    "description": "The Availability Zone of the subnet.",
                                                    "properties": {
                                                        "Name": {
                                                            "description": "The name of the availability zone.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "SubnetIdentifier": {
                                                    "description": "The subnet identifier.",
                                                    "type": "string"
                                                },
                                                "SubnetStatus": {
                                                    "description": "The status of the subnet.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "VpcId": {
                                        "description": "The ID of the VPC.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "SecondaryAvailabilityZone": {
                                "description": "The availability zone of the standby replication instance in a Multi-AZ deployment.",
                                "type": "string"
                            },
                            "VpcSecurityGroups": {
                                "description": "The VPC security group for the instance.",
                                "items": {
                                    "description": "<p/>",
                                    "properties": {
                                        "Status": {
                                            "description": "The status of the VPC security group.",
                                            "type": "string"
                                        },
                                        "VpcSecurityGroupId": {
                                            "description": "The VPC security group Id.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DeleteReplicationSubnetGroupMessage": {
                "description": "<p/>",
                "example": {
                    "ReplicationSubnetGroupIdentifier": "us-west-2ab-vpc-215ds366"
                },
                "properties": {
                    "ReplicationSubnetGroupIdentifier": {
                        "description": "The subnet group name of the replication instance.",
                        "type": "string"
                    }
                },
                "required": [
                    "ReplicationSubnetGroupIdentifier"
                ],
                "type": "object"
            },
            "DeleteReplicationSubnetGroupResponse": {
                "description": "<p/>",
                "example": {},
                "properties": {},
                "type": "object"
            },
            "DeleteReplicationTaskMessage": {
                "description": "<p/>",
                "example": {
                    "ReplicationTaskArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ"
                },
                "properties": {
                    "ReplicationTaskArn": {
                        "description": "The Amazon Resource Name (ARN) of the replication task to be deleted.",
                        "type": "string"
                    }
                },
                "required": [
                    "ReplicationTaskArn"
                ],
                "type": "object"
            },
            "DeleteReplicationTaskResponse": {
                "description": "<p/>",
                "example": {
                    "ReplicationTask": {
                        "MigrationType": "full-load",
                        "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
                        "ReplicationTaskArn": "arn:aws:dms:us-east-1:123456789012:task:OEAMB3NXSTZ6LFYZFEPPBBXPYM",
                        "ReplicationTaskCreationDate": "2016-12-14T18:25:43Z",
                        "ReplicationTaskIdentifier": "task1",
                        "ReplicationTaskSettings": "{\"TargetMetadata\":{\"TargetSchema\":\"\",\"SupportLobs\":true,\"FullLobMode\":true,\"LobChunkSize\":64,\"LimitedSizeLobMode\":false,\"LobMaxSize\":0},\"FullLoadSettings\":{\"FullLoadEnabled\":true,\"ApplyChangesEnabled\":false,\"TargetTablePrepMode\":\"DROP_AND_CREATE\",\"CreatePkAfterFullLoad\":false,\"StopTaskCachedChangesApplied\":false,\"StopTaskCachedChangesNotApplied\":false,\"ResumeEnabled\":false,\"ResumeMinTableSize\":100000,\"ResumeOnlyClusteredPKTables\":true,\"MaxFullLoadSubTasks\":8,\"TransactionConsistencyTimeout\":600,\"CommitRate\":10000},\"Logging\":{\"EnableLogging\":false}}",
                        "SourceEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ZW5UAN6P4E77EC7YWHK4RZZ3BE",
                        "Status": "creating",
                        "TableMappings": "file://mappingfile.json",
                        "TargetEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E"
                    }
                },
                "properties": {
                    "ReplicationTask": {
                        "description": "The deleted replication task.",
                        "properties": {
                            "CdcStartPosition": {
                                "description": "<p>Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p> The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position \"checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93\"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p>",
                                "type": "string"
                            },
                            "CdcStopPosition": {
                                "description": "<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:3018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 3018-02-09T12:12:12 “</p>",
                                "type": "string"
                            },
                            "LastFailureMessage": {
                                "description": "The last error (failure) message generated for the replication instance.",
                                "type": "string"
                            },
                            "MigrationType": {
                                "description": "The type of migration.",
                                "enum": [
                                    "full-load",
                                    "cdc",
                                    "full-load-and-cdc"
                                ],
                                "type": "string"
                            },
                            "RecoveryCheckpoint": {
                                "description": "Indicates the last checkpoint that occurred during a change data capture (CDC) operation. You can provide this value to the <code>CdcStartPosition</code> parameter to start a CDC operation that begins at that checkpoint.",
                                "type": "string"
                            },
                            "ReplicationInstanceArn": {
                                "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                "type": "string"
                            },
                            "ReplicationTaskArn": {
                                "description": "The Amazon Resource Name (ARN) of the replication task.",
                                "type": "string"
                            },
                            "ReplicationTaskCreationDate": {
                                "description": "The date the replication task was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "ReplicationTaskIdentifier": {
                                "description": "<p>The user-assigned replication task identifier or name.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>",
                                "type": "string"
                            },
                            "ReplicationTaskSettings": {
                                "description": "The settings for the replication task.",
                                "type": "string"
                            },
                            "ReplicationTaskStartDate": {
                                "description": "The date the replication task is scheduled to start.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "ReplicationTaskStats": {
                                "description": "The statistics for the task, including elapsed time, tables loaded, and table errors.",
                                "properties": {
                                    "ElapsedTimeMillis": {
                                        "description": "The elapsed time of the task, in milliseconds.",
                                        "type": "integer"
                                    },
                                    "FullLoadProgressPercent": {
                                        "description": "The percent complete for the full load migration task.",
                                        "type": "integer"
                                    },
                                    "TablesErrored": {
                                        "description": "The number of errors that have occurred during this task.",
                                        "type": "integer"
                                    },
                                    "TablesLoaded": {
                                        "description": "The number of tables loaded for this task.",
                                        "type": "integer"
                                    },
                                    "TablesLoading": {
                                        "description": "The number of tables currently loading for this task.",
                                        "type": "integer"
                                    },
                                    "TablesQueued": {
                                        "description": "The number of tables queued for this task.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "SourceEndpointArn": {
                                "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "The status of the replication task.",
                                "type": "string"
                            },
                            "StopReason": {
                                "description": "The reason the replication task was stopped.",
                                "type": "string"
                            },
                            "TableMappings": {
                                "description": "Table mappings specified in the task.",
                                "type": "string"
                            },
                            "TargetEndpointArn": {
                                "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DescribeAccountAttributesMessage": {
                "description": "<p/>",
                "example": {},
                "properties": {},
                "type": "object"
            },
            "DescribeAccountAttributesResponse": {
                "description": "<p/>",
                "example": {
                    "AccountQuotas": [
                        {
                            "AccountQuotaName": "ReplicationInstances",
                            "Max": 20,
                            "Used": 0
                        },
                        {
                            "AccountQuotaName": "AllocatedStorage",
                            "Max": 20,
                            "Used": 0
                        },
                        {
                            "AccountQuotaName": "Endpoints",
                            "Max": 20,
                            "Used": 0
                        }
                    ]
                },
                "properties": {
                    "AccountQuotas": {
                        "description": "Account quota information.",
                        "items": {
                            "description": "Describes a quota for an AWS account, for example, the number of replication instances allowed.",
                            "properties": {
                                "AccountQuotaName": {
                                    "description": "The name of the AWS DMS quota for this AWS account.",
                                    "type": "string"
                                },
                                "Max": {
                                    "description": "The maximum allowed value for the quota.",
                                    "type": "integer"
                                },
                                "Used": {
                                    "description": "The amount currently used toward the quota maximum.",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DescribeCertificatesMessage": {
                "example": {
                    "Filters": [
                        {
                            "Name": "string",
                            "Values": [
                                "string",
                                "string"
                            ]
                        }
                    ],
                    "Marker": "",
                    "MaxRecords": 123
                },
                "properties": {
                    "Filters": {
                        "description": "Filters applied to the certificate described in the form of key-value pairs.",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "Name": {
                                    "description": "The name of the filter.",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The filter value.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "MaxRecords": {
                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 10</p>",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DescribeCertificatesResponse": {
                "example": {
                    "Certificates": [],
                    "Marker": ""
                },
                "properties": {
                    "Certificates": {
                        "description": "The Secure Sockets Layer (SSL) certificates associated with the replication instance.",
                        "items": {
                            "description": "The SSL certificate that can be used to encrypt connections between the endpoints and the replication instance.",
                            "properties": {
                                "CertificateArn": {
                                    "description": "The Amazon Resource Name (ARN) for the certificate.",
                                    "type": "string"
                                },
                                "CertificateCreationDate": {
                                    "description": "The date that the certificate was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "CertificateIdentifier": {
                                    "description": "The customer-assigned name of the certificate. Valid characters are A-z and 0-9.",
                                    "type": "string"
                                },
                                "CertificateOwner": {
                                    "description": "The owner of the certificate.",
                                    "type": "string"
                                },
                                "CertificatePem": {
                                    "description": "The contents of the .pem X.509 certificate file for the certificate.",
                                    "type": "string"
                                },
                                "CertificateWallet": {
                                    "description": "The location of the imported Oracle Wallet certificate for use with SSL.",
                                    "type": "string"
                                },
                                "KeyLength": {
                                    "description": "The key length of the cryptographic algorithm being used.",
                                    "type": "integer"
                                },
                                "SigningAlgorithm": {
                                    "description": "The signing algorithm for the certificate.",
                                    "type": "string"
                                },
                                "ValidFromDate": {
                                    "description": "The beginning date that the certificate is valid.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "ValidToDate": {
                                    "description": "The final date that the certificate is valid.",
                                    "format": "date-time",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": "The pagination token.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeConnectionsMessage": {
                "description": "<p/>",
                "example": {
                    "Filters": [
                        {
                            "Name": "string",
                            "Values": [
                                "string",
                                "string"
                            ]
                        }
                    ],
                    "Marker": "",
                    "MaxRecords": 123
                },
                "properties": {
                    "Filters": {
                        "description": "<p>The filters applied to the connection.</p> <p>Valid filter names: endpoint-arn | replication-instance-arn</p>",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "Name": {
                                    "description": "The name of the filter.",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The filter value.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "MaxRecords": {
                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DescribeConnectionsResponse": {
                "description": "<p/>",
                "example": {
                    "Connections": [
                        {
                            "EndpointArn": "arn:aws:dms:us-east-arn:aws:dms:us-east-1:123456789012:endpoint:ZW5UAN6P4E77EC7YWHK4RZZ3BE",
                            "EndpointIdentifier": "testsrc1",
                            "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
                            "ReplicationInstanceIdentifier": "test",
                            "Status": "successful"
                        }
                    ],
                    "Marker": ""
                },
                "properties": {
                    "Connections": {
                        "description": "A description of the connections.",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "EndpointArn": {
                                    "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                    "type": "string"
                                },
                                "EndpointIdentifier": {
                                    "description": "The identifier of the endpoint. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.",
                                    "type": "string"
                                },
                                "LastFailureMessage": {
                                    "description": "The error message when the connection last failed.",
                                    "type": "string"
                                },
                                "ReplicationInstanceArn": {
                                    "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                    "type": "string"
                                },
                                "ReplicationInstanceIdentifier": {
                                    "description": "The replication instance identifier. This parameter is stored as a lowercase string.",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The connection status.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeEndpointTypesMessage": {
                "description": "<p/>",
                "example": {
                    "Filters": [
                        {
                            "Name": "string",
                            "Values": [
                                "string",
                                "string"
                            ]
                        }
                    ],
                    "Marker": "",
                    "MaxRecords": 123
                },
                "properties": {
                    "Filters": {
                        "description": "<p>Filters applied to the describe action.</p> <p>Valid filter names: engine-name | endpoint-type</p>",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "Name": {
                                    "description": "The name of the filter.",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The filter value.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "MaxRecords": {
                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DescribeEndpointTypesResponse": {
                "description": "<p/>",
                "example": {
                    "Marker": "",
                    "SupportedEndpointTypes": []
                },
                "properties": {
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "SupportedEndpointTypes": {
                        "description": "The type of endpoints that are supported.",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "EndpointType": {
                                    "description": "The type of endpoint.",
                                    "enum": [
                                        "source",
                                        "target"
                                    ],
                                    "type": "string"
                                },
                                "EngineDisplayName": {
                                    "description": "The expanded name for the engine name. For example, if the <code>EngineName</code> parameter is \"aurora,\" this value would be \"Amazon Aurora MySQL.\"",
                                    "type": "string"
                                },
                                "EngineName": {
                                    "description": "The database engine name. Valid values, depending on the EndPointType, include mysql, oracle, postgres, mariadb, aurora, aurora-postgresql, redshift, s3, db2, azuredb, sybase, sybase, dynamodb, mongodb, and sqlserver.",
                                    "type": "string"
                                },
                                "SupportsCDC": {
                                    "description": "Indicates if Change Data Capture (CDC) is supported.",
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DescribeEndpointsMessage": {
                "description": "<p/>",
                "example": {
                    "Filters": [
                        {
                            "Name": "string",
                            "Values": [
                                "string",
                                "string"
                            ]
                        }
                    ],
                    "Marker": "",
                    "MaxRecords": 123
                },
                "properties": {
                    "Filters": {
                        "description": "<p>Filters applied to the describe action.</p> <p>Valid filter names: endpoint-arn | endpoint-type | endpoint-id | engine-name</p>",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "Name": {
                                    "description": "The name of the filter.",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The filter value.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "MaxRecords": {
                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DescribeEndpointsResponse": {
                "description": "<p/>",
                "example": {
                    "Endpoints": [],
                    "Marker": ""
                },
                "properties": {
                    "Endpoints": {
                        "description": "Endpoint description.",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "CertificateArn": {
                                    "description": "The Amazon Resource Name (ARN) used for SSL connection to the endpoint.",
                                    "type": "string"
                                },
                                "DatabaseName": {
                                    "description": "The name of the database at the endpoint.",
                                    "type": "string"
                                },
                                "DmsTransferSettings": {
                                    "description": "<p>The settings in JSON format for the DMS transfer type of source endpoint. </p> <p>Possible attributes include the following:</p> <ul> <li> <p> <code>serviceAccessRoleArn</code> - The IAM role that has permission to access the Amazon S3 bucket.</p> </li> <li> <p> <code>bucketName</code> - The name of the S3 bucket to use.</p> </li> <li> <p> <code>compressionType</code> - An optional parameter to use GZIP to compress the target files. To use GZIP, set this value to <code>NONE</code> (the default). To keep the files uncompressed, don't use this value. </p> </li> </ul> <p>Shorthand syntax for these attributes is as follows: <code>ServiceAccessRoleArn=string,BucketName=string,CompressionType=string</code> </p> <p>JSON syntax for these attributes is as follows: <code>{ \"ServiceAccessRoleArn\": \"string\", \"BucketName\": \"string\", \"CompressionType\": \"none\"|\"gzip\" } </code> </p>",
                                    "properties": {
                                        "BucketName": {
                                            "description": " The name of the S3 bucket to use. ",
                                            "type": "string"
                                        },
                                        "ServiceAccessRoleArn": {
                                            "description": " The IAM role that has permission to access the Amazon S3 bucket. ",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "DynamoDbSettings": {
                                    "description": "The settings for the target DynamoDB database. For more information, see the <code>DynamoDBSettings</code> structure.",
                                    "properties": {
                                        "ServiceAccessRoleArn": {
                                            "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "ServiceAccessRoleArn"
                                    ],
                                    "type": "object"
                                },
                                "ElasticsearchSettings": {
                                    "description": "The settings for the Elasticsearch source endpoint. For more information, see the <code>ElasticsearchSettings</code> structure.",
                                    "properties": {
                                        "EndpointUri": {
                                            "description": "The endpoint for the ElasticSearch cluster.",
                                            "type": "string"
                                        },
                                        "ErrorRetryDuration": {
                                            "description": "The maximum number of seconds that DMS retries failed API requests to the Elasticsearch cluster.",
                                            "type": "integer"
                                        },
                                        "FullLoadErrorPercentage": {
                                            "description": "The maximum percentage of records that can fail to be written before a full load operation stops. ",
                                            "type": "integer"
                                        },
                                        "ServiceAccessRoleArn": {
                                            "description": "The Amazon Resource Name (ARN) used by service to access the IAM role.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "ServiceAccessRoleArn",
                                        "EndpointUri"
                                    ],
                                    "type": "object"
                                },
                                "EndpointArn": {
                                    "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                    "type": "string"
                                },
                                "EndpointIdentifier": {
                                    "description": "The database endpoint identifier. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.",
                                    "type": "string"
                                },
                                "EndpointType": {
                                    "description": "The type of endpoint.",
                                    "enum": [
                                        "source",
                                        "target"
                                    ],
                                    "type": "string"
                                },
                                "EngineDisplayName": {
                                    "description": "The expanded name for the engine name. For example, if the <code>EngineName</code> parameter is \"aurora,\" this value would be \"Amazon Aurora MySQL.\"",
                                    "type": "string"
                                },
                                "EngineName": {
                                    "description": "The database engine name. Valid values, depending on the EndPointType, include mysql, oracle, postgres, mariadb, aurora, aurora-postgresql, redshift, s3, db2, azuredb, sybase, sybase, dynamodb, mongodb, and sqlserver.",
                                    "type": "string"
                                },
                                "ExternalId": {
                                    "description": " Value returned by a call to CreateEndpoint that can be used for cross-account validation. Use it on a subsequent call to CreateEndpoint to create the endpoint with a cross-account. ",
                                    "type": "string"
                                },
                                "ExternalTableDefinition": {
                                    "description": "The external table definition.",
                                    "type": "string"
                                },
                                "ExtraConnectionAttributes": {
                                    "description": "Additional connection attributes used to connect to the endpoint.",
                                    "type": "string"
                                },
                                "KinesisSettings": {
                                    "description": "The settings for the Amazon Kinesis source endpoint. For more information, see the <code>KinesisSettings</code> structure.",
                                    "properties": {
                                        "MessageFormat": {
                                            "description": "The output format for the records created on the endpoint. The message format is <code>JSON</code>.",
                                            "enum": [
                                                "json"
                                            ],
                                            "type": "string"
                                        },
                                        "ServiceAccessRoleArn": {
                                            "description": "The Amazon Resource Name (ARN) for the IAM role that DMS uses to write to the Amazon Kinesis data stream.",
                                            "type": "string"
                                        },
                                        "StreamArn": {
                                            "description": "The Amazon Resource Name (ARN) for the Amazon Kinesis Data Streams endpoint.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "KmsKeyId": {
                                    "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                    "type": "string"
                                },
                                "MongoDbSettings": {
                                    "description": "The settings for the MongoDB source endpoint. For more information, see the <code>MongoDbSettings</code> structure.",
                                    "properties": {
                                        "AuthMechanism": {
                                            "description": "<p> The authentication mechanism you use to access the MongoDB source endpoint.</p> <p>Valid values: DEFAULT, MONGODB_CR, SCRAM_SHA_1 </p> <p>DEFAULT – For MongoDB version 2.x, use MONGODB_CR. For MongoDB version 3.x, use SCRAM_SHA_1. This attribute is not used when authType=No.</p>",
                                            "enum": [
                                                "default",
                                                "mongodb_cr",
                                                "scram_sha_1"
                                            ],
                                            "type": "string"
                                        },
                                        "AuthSource": {
                                            "description": "<p> The MongoDB database name. This attribute is not used when <code>authType=NO</code>. </p> <p>The default is admin.</p>",
                                            "type": "string"
                                        },
                                        "AuthType": {
                                            "description": "<p> The authentication type you use to access the MongoDB source endpoint.</p> <p>Valid values: NO, PASSWORD </p> <p>When NO is selected, user name and password parameters are not used and can be empty. </p>",
                                            "enum": [
                                                "no",
                                                "password"
                                            ],
                                            "type": "string"
                                        },
                                        "DatabaseName": {
                                            "description": " The database name on the MongoDB source endpoint. ",
                                            "type": "string"
                                        },
                                        "DocsToInvestigate": {
                                            "description": "<p> Indicates the number of documents to preview to determine the document organization. Use this attribute when <code>NestingLevel</code> is set to ONE. </p> <p>Must be a positive value greater than 0. Default value is 1000.</p>",
                                            "type": "string"
                                        },
                                        "ExtractDocId": {
                                            "description": "<p> Specifies the document ID. Use this attribute when <code>NestingLevel</code> is set to NONE. </p> <p>Default value is false. </p>",
                                            "type": "string"
                                        },
                                        "KmsKeyId": {
                                            "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                            "type": "string"
                                        },
                                        "NestingLevel": {
                                            "description": "<p> Specifies either document or table mode. </p> <p>Valid values: NONE, ONE</p> <p>Default value is NONE. Specify NONE to use document mode. Specify ONE to use table mode.</p>",
                                            "enum": [
                                                "none",
                                                "one"
                                            ],
                                            "type": "string"
                                        },
                                        "Password": {
                                            "description": " The password for the user account you use to access the MongoDB source endpoint. ",
                                            "format": "password",
                                            "type": "string"
                                        },
                                        "Port": {
                                            "description": " The port value for the MongoDB source endpoint. ",
                                            "type": "integer"
                                        },
                                        "ServerName": {
                                            "description": " The name of the server on the MongoDB source endpoint. ",
                                            "type": "string"
                                        },
                                        "Username": {
                                            "description": "The user name you use to access the MongoDB source endpoint. ",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Port": {
                                    "description": "The port value used to access the endpoint.",
                                    "type": "integer"
                                },
                                "S3Settings": {
                                    "description": "The settings for the S3 target endpoint. For more information, see the <code>S3Settings</code> structure.",
                                    "properties": {
                                        "BucketFolder": {
                                            "description": " An optional parameter to set a folder name in the S3 bucket. If provided, tables are created in the path &lt;bucketFolder&gt;/&lt;schema_name&gt;/&lt;table_name&gt;/. If this parameter is not specified, then the path used is &lt;schema_name&gt;/&lt;table_name&gt;/. ",
                                            "type": "string"
                                        },
                                        "BucketName": {
                                            "description": " The name of the S3 bucket. ",
                                            "type": "string"
                                        },
                                        "CompressionType": {
                                            "description": " An optional parameter to use GZIP to compress the target files. Set to GZIP to compress the target files. Set to NONE (the default) or do not use to leave the files uncompressed. ",
                                            "enum": [
                                                "none",
                                                "gzip"
                                            ],
                                            "type": "string"
                                        },
                                        "CsvDelimiter": {
                                            "description": " The delimiter used to separate columns in the source files. The default is a comma. ",
                                            "type": "string"
                                        },
                                        "CsvRowDelimiter": {
                                            "description": " The delimiter used to separate rows in the source files. The default is a carriage return (\\n). ",
                                            "type": "string"
                                        },
                                        "ExternalTableDefinition": {
                                            "description": " The external table definition. ",
                                            "type": "string"
                                        },
                                        "ServiceAccessRoleArn": {
                                            "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "ServerName": {
                                    "description": "The name of the server at the endpoint.",
                                    "type": "string"
                                },
                                "ServiceAccessRoleArn": {
                                    "description": "The Amazon Resource Name (ARN) used by the service access IAM role.",
                                    "type": "string"
                                },
                                "SslMode": {
                                    "description": "<p>The SSL mode used to connect to the endpoint.</p> <p>SSL mode can be one of four values: none, require, verify-ca, verify-full. </p> <p>The default value is none.</p>",
                                    "enum": [
                                        "none",
                                        "require",
                                        "verify-ca",
                                        "verify-full"
                                    ],
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The status of the endpoint.",
                                    "type": "string"
                                },
                                "Username": {
                                    "description": "The user name used to connect to the endpoint.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeEventCategoriesMessage": {
                "description": "<p/>",
                "properties": {
                    "Filters": {
                        "description": "Filters applied to the action.",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "Name": {
                                    "description": "The name of the filter.",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The filter value.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "SourceType": {
                        "description": "<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | migration-task</p>",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeEventCategoriesResponse": {
                "description": "<p/>",
                "properties": {
                    "EventCategoryGroupList": {
                        "description": "A list of event categories.",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "EventCategories": {
                                    "description": " A list of event categories for a <code>SourceType</code> that you want to subscribe to. ",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "SourceType": {
                                    "description": "<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | replication-server | security-group | migration-task</p>",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DescribeEventSubscriptionsMessage": {
                "description": "<p/>",
                "properties": {
                    "Filters": {
                        "description": "Filters applied to the action.",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "Name": {
                                    "description": "The name of the filter.",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The filter value.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "MaxRecords": {
                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                        "type": "integer"
                    },
                    "SubscriptionName": {
                        "description": "The name of the AWS DMS event subscription to be described.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeEventSubscriptionsResponse": {
                "description": "<p/>",
                "properties": {
                    "EventSubscriptionsList": {
                        "description": "A list of event subscriptions.",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "CustSubscriptionId": {
                                    "description": "The AWS DMS event notification subscription Id.",
                                    "type": "string"
                                },
                                "CustomerAwsId": {
                                    "description": "The AWS customer account associated with the AWS DMS event notification subscription.",
                                    "type": "string"
                                },
                                "Enabled": {
                                    "description": "Boolean value that indicates if the event subscription is enabled.",
                                    "type": "boolean"
                                },
                                "EventCategoriesList": {
                                    "description": "A lists of event categories.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "SnsTopicArn": {
                                    "description": "The topic ARN of the AWS DMS event notification subscription.",
                                    "type": "string"
                                },
                                "SourceIdsList": {
                                    "description": "A list of source Ids for the event subscription.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "SourceType": {
                                    "description": "<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | replication-server | security-group | migration-task</p>",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "<p>The status of the AWS DMS event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that AWS DMS no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                                    "type": "string"
                                },
                                "SubscriptionCreationTime": {
                                    "description": "The time the RDS event notification subscription was created.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeEventsMessage": {
                "description": "<p/>",
                "properties": {
                    "Duration": {
                        "description": "The duration of the events to be listed.",
                        "type": "integer"
                    },
                    "EndTime": {
                        "description": "The end time for the events to be listed.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "EventCategories": {
                        "description": "A list of event categories for a source type that you want to subscribe to.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "Filters": {
                        "description": "Filters applied to the action.",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "Name": {
                                    "description": "The name of the filter.",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The filter value.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "MaxRecords": {
                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                        "type": "integer"
                    },
                    "SourceIdentifier": {
                        "description": " The identifier of the event source. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens. It cannot end with a hyphen or contain two consecutive hyphens. ",
                        "type": "string"
                    },
                    "SourceType": {
                        "description": "<p>The type of AWS DMS resource that generates events.</p> <p>Valid values: replication-instance | migration-task</p>",
                        "enum": [
                            "replication-instance"
                        ],
                        "type": "string"
                    },
                    "StartTime": {
                        "description": "The start time for the events to be listed.",
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeEventsResponse": {
                "description": "<p/>",
                "properties": {
                    "Events": {
                        "description": "The events described.",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "Date": {
                                    "description": "The date of the event.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "EventCategories": {
                                    "description": "The event categories available for the specified source type.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "Message": {
                                    "description": "The event message.",
                                    "type": "string"
                                },
                                "SourceIdentifier": {
                                    "description": "<p> The identifier of the event source. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it cannot end with a hyphen or contain two consecutive hyphens. </p> <p>Constraints:replication instance, endpoint, migration task</p>",
                                    "type": "string"
                                },
                                "SourceType": {
                                    "description": "<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | endpoint | migration-task</p>",
                                    "enum": [
                                        "replication-instance"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeOrderableReplicationInstancesMessage": {
                "description": "<p/>",
                "example": {
                    "Marker": "",
                    "MaxRecords": 123
                },
                "properties": {
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "MaxRecords": {
                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DescribeOrderableReplicationInstancesResponse": {
                "description": "<p/>",
                "example": {
                    "Marker": "",
                    "OrderableReplicationInstances": []
                },
                "properties": {
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "OrderableReplicationInstances": {
                        "description": "The order-able replication instances available.",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "DefaultAllocatedStorage": {
                                    "description": "The default amount of storage (in gigabytes) that is allocated for the replication instance.",
                                    "type": "integer"
                                },
                                "EngineVersion": {
                                    "description": "The version of the replication engine.",
                                    "type": "string"
                                },
                                "IncludedAllocatedStorage": {
                                    "description": "The amount of storage (in gigabytes) that is allocated for the replication instance.",
                                    "type": "integer"
                                },
                                "MaxAllocatedStorage": {
                                    "description": "The minimum amount of storage (in gigabytes) that can be allocated for the replication instance.",
                                    "type": "integer"
                                },
                                "MinAllocatedStorage": {
                                    "description": "The minimum amount of storage (in gigabytes) that can be allocated for the replication instance.",
                                    "type": "integer"
                                },
                                "ReplicationInstanceClass": {
                                    "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                                    "type": "string"
                                },
                                "StorageType": {
                                    "description": "The type of storage used by the replication instance.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DescribeRefreshSchemasStatusMessage": {
                "description": "<p/>",
                "example": {
                    "EndpointArn": ""
                },
                "properties": {
                    "EndpointArn": {
                        "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                        "type": "string"
                    }
                },
                "required": [
                    "EndpointArn"
                ],
                "type": "object"
            },
            "DescribeRefreshSchemasStatusResponse": {
                "description": "<p/>",
                "example": {
                    "RefreshSchemasStatus": {}
                },
                "properties": {
                    "RefreshSchemasStatus": {
                        "description": "The status of the schema.",
                        "properties": {
                            "EndpointArn": {
                                "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                "type": "string"
                            },
                            "LastFailureMessage": {
                                "description": "The last failure message for the schema.",
                                "type": "string"
                            },
                            "LastRefreshDate": {
                                "description": "The date the schema was last refreshed.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "ReplicationInstanceArn": {
                                "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "The status of the schema.",
                                "enum": [
                                    "successful",
                                    "failed",
                                    "refreshing"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DescribeReplicationInstanceTaskLogsMessage": {
                "properties": {
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.",
                        "type": "string"
                    },
                    "MaxRecords": {
                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                        "type": "integer"
                    },
                    "ReplicationInstanceArn": {
                        "description": "The Amazon Resource Name (ARN) of the replication instance.",
                        "type": "string"
                    }
                },
                "required": [
                    "ReplicationInstanceArn"
                ],
                "type": "object"
            },
            "DescribeReplicationInstanceTaskLogsResponse": {
                "properties": {
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.",
                        "type": "string"
                    },
                    "ReplicationInstanceArn": {
                        "description": "The Amazon Resource Name (ARN) of the replication instance.",
                        "type": "string"
                    },
                    "ReplicationInstanceTaskLogs": {
                        "description": "An array of replication task log metadata. Each member of the array contains the replication task name, ARN, and task log size (in bytes). ",
                        "items": {
                            "description": "Contains metadata for a replication instance task log.",
                            "properties": {
                                "ReplicationInstanceTaskLogSize": {
                                    "description": "The size, in bytes, of the replication task log.",
                                    "type": "integer"
                                },
                                "ReplicationTaskArn": {
                                    "description": "The Amazon Resource Name (ARN) of the replication task.",
                                    "type": "string"
                                },
                                "ReplicationTaskName": {
                                    "description": "The name of the replication task.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DescribeReplicationInstancesMessage": {
                "description": "<p/>",
                "example": {
                    "Filters": [
                        {
                            "Name": "string",
                            "Values": [
                                "string",
                                "string"
                            ]
                        }
                    ],
                    "Marker": "",
                    "MaxRecords": 123
                },
                "properties": {
                    "Filters": {
                        "description": "<p>Filters applied to the describe action.</p> <p>Valid filter names: replication-instance-arn | replication-instance-id | replication-instance-class | engine-version</p>",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "Name": {
                                    "description": "The name of the filter.",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The filter value.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "MaxRecords": {
                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DescribeReplicationInstancesResponse": {
                "description": "<p/>",
                "example": {
                    "Marker": "",
                    "ReplicationInstances": []
                },
                "properties": {
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "ReplicationInstances": {
                        "description": "The replication instances described.",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "AllocatedStorage": {
                                    "description": "The amount of storage (in gigabytes) that is allocated for the replication instance.",
                                    "type": "integer"
                                },
                                "AutoMinorVersionUpgrade": {
                                    "description": "Boolean value indicating if minor version upgrades will be automatically applied to the instance.",
                                    "type": "boolean"
                                },
                                "AvailabilityZone": {
                                    "description": "The Availability Zone for the instance.",
                                    "type": "string"
                                },
                                "DnsNameServers": {
                                    "description": "The DNS name servers for the replication instance.",
                                    "type": "string"
                                },
                                "EngineVersion": {
                                    "description": "The engine version number of the replication instance.",
                                    "type": "string"
                                },
                                "FreeUntil": {
                                    "description": " The expiration date of the free replication instance that is part of the Free DMS program. ",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "InstanceCreateTime": {
                                    "description": "The time the replication instance was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "KmsKeyId": {
                                    "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                    "type": "string"
                                },
                                "MultiAZ": {
                                    "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. ",
                                    "type": "boolean"
                                },
                                "PendingModifiedValues": {
                                    "description": "The pending modification values.",
                                    "properties": {
                                        "AllocatedStorage": {
                                            "description": "The amount of storage (in gigabytes) that is allocated for the replication instance.",
                                            "type": "integer"
                                        },
                                        "EngineVersion": {
                                            "description": "The engine version number of the replication instance.",
                                            "type": "string"
                                        },
                                        "MultiAZ": {
                                            "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. ",
                                            "type": "boolean"
                                        },
                                        "ReplicationInstanceClass": {
                                            "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "PreferredMaintenanceWindow": {
                                    "description": "The maintenance window times for the replication instance.",
                                    "type": "string"
                                },
                                "PubliclyAccessible": {
                                    "description": " Specifies the accessibility options for the replication instance. A value of <code>true</code> represents an instance with a public IP address. A value of <code>false</code> represents an instance with a private IP address. The default value is <code>true</code>. ",
                                    "type": "boolean"
                                },
                                "ReplicationInstanceArn": {
                                    "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                    "type": "string"
                                },
                                "ReplicationInstanceClass": {
                                    "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                                    "type": "string"
                                },
                                "ReplicationInstanceIdentifier": {
                                    "description": "<p>The replication instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>myrepinstance</code> </p>",
                                    "type": "string"
                                },
                                "ReplicationInstancePrivateIpAddress": {
                                    "description": "The private IP address of the replication instance.",
                                    "type": "string"
                                },
                                "ReplicationInstancePrivateIpAddresses": {
                                    "description": "The private IP address of the replication instance.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "ReplicationInstancePublicIpAddress": {
                                    "description": "The public IP address of the replication instance.",
                                    "type": "string"
                                },
                                "ReplicationInstancePublicIpAddresses": {
                                    "description": "The public IP address of the replication instance.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "ReplicationInstanceStatus": {
                                    "description": "The status of the replication instance.",
                                    "type": "string"
                                },
                                "ReplicationSubnetGroup": {
                                    "description": "The subnet group for the replication instance.",
                                    "properties": {
                                        "ReplicationSubnetGroupDescription": {
                                            "description": "The description of the replication subnet group.",
                                            "type": "string"
                                        },
                                        "ReplicationSubnetGroupIdentifier": {
                                            "description": "The identifier of the replication instance subnet group.",
                                            "type": "string"
                                        },
                                        "SubnetGroupStatus": {
                                            "description": "The status of the subnet group.",
                                            "type": "string"
                                        },
                                        "Subnets": {
                                            "description": "The subnets that are in the subnet group.",
                                            "items": {
                                                "description": "<p/>",
                                                "properties": {
                                                    "SubnetAvailabilityZone": {
                                                        "description": "The Availability Zone of the subnet.",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the availability zone.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "SubnetIdentifier": {
                                                        "description": "The subnet identifier.",
                                                        "type": "string"
                                                    },
                                                    "SubnetStatus": {
                                                        "description": "The status of the subnet.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "VpcId": {
                                            "description": "The ID of the VPC.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "SecondaryAvailabilityZone": {
                                    "description": "The availability zone of the standby replication instance in a Multi-AZ deployment.",
                                    "type": "string"
                                },
                                "VpcSecurityGroups": {
                                    "description": "The VPC security group for the instance.",
                                    "items": {
                                        "description": "<p/>",
                                        "properties": {
                                            "Status": {
                                                "description": "The status of the VPC security group.",
                                                "type": "string"
                                            },
                                            "VpcSecurityGroupId": {
                                                "description": "The VPC security group Id.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DescribeReplicationSubnetGroupsMessage": {
                "description": "<p/>",
                "example": {
                    "Filters": [
                        {
                            "Name": "string",
                            "Values": [
                                "string",
                                "string"
                            ]
                        }
                    ],
                    "Marker": "",
                    "MaxRecords": 123
                },
                "properties": {
                    "Filters": {
                        "description": "Filters applied to the describe action.",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "Name": {
                                    "description": "The name of the filter.",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The filter value.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "MaxRecords": {
                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DescribeReplicationSubnetGroupsResponse": {
                "description": "<p/>",
                "example": {
                    "Marker": "",
                    "ReplicationSubnetGroups": []
                },
                "properties": {
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "ReplicationSubnetGroups": {
                        "description": "A description of the replication subnet groups.",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "ReplicationSubnetGroupDescription": {
                                    "description": "The description of the replication subnet group.",
                                    "type": "string"
                                },
                                "ReplicationSubnetGroupIdentifier": {
                                    "description": "The identifier of the replication instance subnet group.",
                                    "type": "string"
                                },
                                "SubnetGroupStatus": {
                                    "description": "The status of the subnet group.",
                                    "type": "string"
                                },
                                "Subnets": {
                                    "description": "The subnets that are in the subnet group.",
                                    "items": {
                                        "description": "<p/>",
                                        "properties": {
                                            "SubnetAvailabilityZone": {
                                                "description": "The Availability Zone of the subnet.",
                                                "properties": {
                                                    "Name": {
                                                        "description": "The name of the availability zone.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "SubnetIdentifier": {
                                                "description": "The subnet identifier.",
                                                "type": "string"
                                            },
                                            "SubnetStatus": {
                                                "description": "The status of the subnet.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "VpcId": {
                                    "description": "The ID of the VPC.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DescribeReplicationTaskAssessmentResultsMessage": {
                "description": "<p/>",
                "properties": {
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "MaxRecords": {
                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                        "type": "integer"
                    },
                    "ReplicationTaskArn": {
                        "description": "- The Amazon Resource Name (ARN) string that uniquely identifies the task. When this input parameter is specified the API will return only one result and ignore the values of the max-records and marker parameters. ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeReplicationTaskAssessmentResultsResponse": {
                "description": "<p/>",
                "properties": {
                    "BucketName": {
                        "description": "- The Amazon S3 bucket where the task assessment report is located. ",
                        "type": "string"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "ReplicationTaskAssessmentResults": {
                        "description": " The task assessment report. ",
                        "items": {
                            "description": " The task assessment report in JSON format. ",
                            "properties": {
                                "AssessmentResults": {
                                    "description": " The task assessment results in JSON format. ",
                                    "type": "string"
                                },
                                "AssessmentResultsFile": {
                                    "description": " The file containing the results of the task assessment. ",
                                    "type": "string"
                                },
                                "AssessmentStatus": {
                                    "description": " The status of the task assessment. ",
                                    "type": "string"
                                },
                                "ReplicationTaskArn": {
                                    "description": "The Amazon Resource Name (ARN) of the replication task. ",
                                    "type": "string"
                                },
                                "ReplicationTaskIdentifier": {
                                    "description": " The replication task identifier of the task on which the task assessment was run. ",
                                    "type": "string"
                                },
                                "ReplicationTaskLastAssessmentDate": {
                                    "description": "The date the task assessment was completed. ",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "S3ObjectUrl": {
                                    "description": " The URL of the S3 object containing the task assessment results. ",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DescribeReplicationTasksMessage": {
                "description": "<p/>",
                "example": {
                    "Filters": [
                        {
                            "Name": "string",
                            "Values": [
                                "string",
                                "string"
                            ]
                        }
                    ],
                    "Marker": "",
                    "MaxRecords": 123
                },
                "properties": {
                    "Filters": {
                        "description": "<p>Filters applied to the describe action.</p> <p>Valid filter names: replication-task-arn | replication-task-id | migration-type | endpoint-arn | replication-instance-arn</p>",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "Name": {
                                    "description": "The name of the filter.",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The filter value.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "MaxRecords": {
                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DescribeReplicationTasksResponse": {
                "description": "<p/>",
                "example": {
                    "Marker": "",
                    "ReplicationTasks": []
                },
                "properties": {
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "ReplicationTasks": {
                        "description": "A description of the replication tasks.",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "CdcStartPosition": {
                                    "description": "<p>Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p> The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position \"checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93\"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p>",
                                    "type": "string"
                                },
                                "CdcStopPosition": {
                                    "description": "<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:3018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 3018-02-09T12:12:12 “</p>",
                                    "type": "string"
                                },
                                "LastFailureMessage": {
                                    "description": "The last error (failure) message generated for the replication instance.",
                                    "type": "string"
                                },
                                "MigrationType": {
                                    "description": "The type of migration.",
                                    "enum": [
                                        "full-load",
                                        "cdc",
                                        "full-load-and-cdc"
                                    ],
                                    "type": "string"
                                },
                                "RecoveryCheckpoint": {
                                    "description": "Indicates the last checkpoint that occurred during a change data capture (CDC) operation. You can provide this value to the <code>CdcStartPosition</code> parameter to start a CDC operation that begins at that checkpoint.",
                                    "type": "string"
                                },
                                "ReplicationInstanceArn": {
                                    "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                    "type": "string"
                                },
                                "ReplicationTaskArn": {
                                    "description": "The Amazon Resource Name (ARN) of the replication task.",
                                    "type": "string"
                                },
                                "ReplicationTaskCreationDate": {
                                    "description": "The date the replication task was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "ReplicationTaskIdentifier": {
                                    "description": "<p>The user-assigned replication task identifier or name.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>",
                                    "type": "string"
                                },
                                "ReplicationTaskSettings": {
                                    "description": "The settings for the replication task.",
                                    "type": "string"
                                },
                                "ReplicationTaskStartDate": {
                                    "description": "The date the replication task is scheduled to start.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "ReplicationTaskStats": {
                                    "description": "The statistics for the task, including elapsed time, tables loaded, and table errors.",
                                    "properties": {
                                        "ElapsedTimeMillis": {
                                            "description": "The elapsed time of the task, in milliseconds.",
                                            "type": "integer"
                                        },
                                        "FullLoadProgressPercent": {
                                            "description": "The percent complete for the full load migration task.",
                                            "type": "integer"
                                        },
                                        "TablesErrored": {
                                            "description": "The number of errors that have occurred during this task.",
                                            "type": "integer"
                                        },
                                        "TablesLoaded": {
                                            "description": "The number of tables loaded for this task.",
                                            "type": "integer"
                                        },
                                        "TablesLoading": {
                                            "description": "The number of tables currently loading for this task.",
                                            "type": "integer"
                                        },
                                        "TablesQueued": {
                                            "description": "The number of tables queued for this task.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "SourceEndpointArn": {
                                    "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The status of the replication task.",
                                    "type": "string"
                                },
                                "StopReason": {
                                    "description": "The reason the replication task was stopped.",
                                    "type": "string"
                                },
                                "TableMappings": {
                                    "description": "Table mappings specified in the task.",
                                    "type": "string"
                                },
                                "TargetEndpointArn": {
                                    "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DescribeSchemasMessage": {
                "description": "<p/>",
                "example": {
                    "EndpointArn": "",
                    "Marker": "",
                    "MaxRecords": 123
                },
                "properties": {
                    "EndpointArn": {
                        "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                        "type": "string"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "MaxRecords": {
                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                        "type": "integer"
                    }
                },
                "required": [
                    "EndpointArn"
                ],
                "type": "object"
            },
            "DescribeSchemasResponse": {
                "description": "<p/>",
                "example": {
                    "Marker": "",
                    "Schemas": []
                },
                "properties": {
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "Schemas": {
                        "description": "The described schema.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DescribeTableStatisticsMessage": {
                "description": "<p/>",
                "example": {
                    "Marker": "",
                    "MaxRecords": 123,
                    "ReplicationTaskArn": ""
                },
                "properties": {
                    "Filters": {
                        "description": "<p>Filters applied to the describe table statistics action.</p> <p>Valid filter names: schema-name | table-name | table-state</p> <p>A combination of filters creates an AND condition where each record matches all specified filters.</p>",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "Name": {
                                    "description": "The name of the filter.",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The filter value.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "MaxRecords": {
                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 500.</p>",
                        "type": "integer"
                    },
                    "ReplicationTaskArn": {
                        "description": "The Amazon Resource Name (ARN) of the replication task.",
                        "type": "string"
                    }
                },
                "required": [
                    "ReplicationTaskArn"
                ],
                "type": "object"
            },
            "DescribeTableStatisticsResponse": {
                "description": "<p/>",
                "example": {
                    "Marker": "",
                    "ReplicationTaskArn": "",
                    "TableStatistics": []
                },
                "properties": {
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "ReplicationTaskArn": {
                        "description": "The Amazon Resource Name (ARN) of the replication task.",
                        "type": "string"
                    },
                    "TableStatistics": {
                        "description": "The table statistics.",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "Ddls": {
                                    "description": "The Data Definition Language (DDL) used to build and modify the structure of your tables.",
                                    "type": "integer"
                                },
                                "Deletes": {
                                    "description": "The number of delete actions performed on a table.",
                                    "type": "integer"
                                },
                                "FullLoadCondtnlChkFailedRows": {
                                    "description": "The number of rows that failed conditional checks during the Full Load operation (valid only for DynamoDB as a target migrations).",
                                    "type": "integer"
                                },
                                "FullLoadErrorRows": {
                                    "description": "The number of rows that failed to load during the Full Load operation (valid only for DynamoDB as a target migrations).",
                                    "type": "integer"
                                },
                                "FullLoadRows": {
                                    "description": "The number of rows added during the Full Load operation.",
                                    "type": "integer"
                                },
                                "Inserts": {
                                    "description": "The number of insert actions performed on a table.",
                                    "type": "integer"
                                },
                                "LastUpdateTime": {
                                    "description": "The last time the table was updated.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "SchemaName": {
                                    "description": "The schema name.",
                                    "type": "string"
                                },
                                "TableName": {
                                    "description": "The name of the table.",
                                    "type": "string"
                                },
                                "TableState": {
                                    "description": "<p>The state of the tables described.</p> <p>Valid states: Table does not exist | Before load | Full load | Table completed | Table cancelled | Table error | Table all | Table updates | Table is being reloaded</p>",
                                    "type": "string"
                                },
                                "Updates": {
                                    "description": "The number of update actions performed on a table.",
                                    "type": "integer"
                                },
                                "ValidationFailedRecords": {
                                    "description": "The number of records that failed validation.",
                                    "type": "integer"
                                },
                                "ValidationPendingRecords": {
                                    "description": "The number of records that have yet to be validated.",
                                    "type": "integer"
                                },
                                "ValidationState": {
                                    "description": "<p>The validation state of the table.</p> <p>The parameter can have the following values</p> <ul> <li> <p>Not enabled—Validation is not enabled for the table in the migration task.</p> </li> <li> <p>Pending records—Some records in the table are waiting for validation.</p> </li> <li> <p>Mismatched records—Some records in the table do not match between the source and target.</p> </li> <li> <p>Suspended records—Some records in the table could not be validated.</p> </li> <li> <p>No primary key—The table could not be validated because it had no primary key.</p> </li> <li> <p>Table error—The table was not validated because it was in an error state and some data was not migrated.</p> </li> <li> <p>Validated—All rows in the table were validated. If the table is updated, the status can change from Validated.</p> </li> <li> <p>Error—The table could not be validated because of an unexpected error.</p> </li> </ul>",
                                    "type": "string"
                                },
                                "ValidationStateDetails": {
                                    "description": "Additional details about the state of validation.",
                                    "type": "string"
                                },
                                "ValidationSuspendedRecords": {
                                    "description": "The number of records that could not be validated.",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DmsSslModeValue": {
                "enum": [
                    "none",
                    "require",
                    "verify-ca",
                    "verify-full"
                ],
                "type": "string"
            },
            "DmsTransferSettings": {
                "description": " The settings in JSON format for the DMS Transfer type source endpoint. ",
                "properties": {
                    "BucketName": {
                        "description": " The name of the S3 bucket to use. ",
                        "type": "string"
                    },
                    "ServiceAccessRoleArn": {
                        "description": " The IAM role that has permission to access the Amazon S3 bucket. ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DynamoDbSettings": {
                "description": "<p/>",
                "properties": {
                    "ServiceAccessRoleArn": {
                        "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                        "type": "string"
                    }
                },
                "required": [
                    "ServiceAccessRoleArn"
                ],
                "type": "object"
            },
            "ElasticsearchSettings": {
                "description": "<p/>",
                "properties": {
                    "EndpointUri": {
                        "description": "The endpoint for the ElasticSearch cluster.",
                        "type": "string"
                    },
                    "ErrorRetryDuration": {
                        "description": "The maximum number of seconds that DMS retries failed API requests to the Elasticsearch cluster.",
                        "type": "integer"
                    },
                    "FullLoadErrorPercentage": {
                        "description": "The maximum percentage of records that can fail to be written before a full load operation stops. ",
                        "type": "integer"
                    },
                    "ServiceAccessRoleArn": {
                        "description": "The Amazon Resource Name (ARN) used by service to access the IAM role.",
                        "type": "string"
                    }
                },
                "required": [
                    "ServiceAccessRoleArn",
                    "EndpointUri"
                ],
                "type": "object"
            },
            "Endpoint": {
                "description": "<p/>",
                "properties": {
                    "CertificateArn": {
                        "description": "The Amazon Resource Name (ARN) used for SSL connection to the endpoint.",
                        "type": "string"
                    },
                    "DatabaseName": {
                        "description": "The name of the database at the endpoint.",
                        "type": "string"
                    },
                    "DmsTransferSettings": {
                        "description": "<p>The settings in JSON format for the DMS transfer type of source endpoint. </p> <p>Possible attributes include the following:</p> <ul> <li> <p> <code>serviceAccessRoleArn</code> - The IAM role that has permission to access the Amazon S3 bucket.</p> </li> <li> <p> <code>bucketName</code> - The name of the S3 bucket to use.</p> </li> <li> <p> <code>compressionType</code> - An optional parameter to use GZIP to compress the target files. To use GZIP, set this value to <code>NONE</code> (the default). To keep the files uncompressed, don't use this value. </p> </li> </ul> <p>Shorthand syntax for these attributes is as follows: <code>ServiceAccessRoleArn=string,BucketName=string,CompressionType=string</code> </p> <p>JSON syntax for these attributes is as follows: <code>{ \"ServiceAccessRoleArn\": \"string\", \"BucketName\": \"string\", \"CompressionType\": \"none\"|\"gzip\" } </code> </p>",
                        "properties": {
                            "BucketName": {
                                "description": " The name of the S3 bucket to use. ",
                                "type": "string"
                            },
                            "ServiceAccessRoleArn": {
                                "description": " The IAM role that has permission to access the Amazon S3 bucket. ",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "DynamoDbSettings": {
                        "description": "The settings for the target DynamoDB database. For more information, see the <code>DynamoDBSettings</code> structure.",
                        "properties": {
                            "ServiceAccessRoleArn": {
                                "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                                "type": "string"
                            }
                        },
                        "required": [
                            "ServiceAccessRoleArn"
                        ],
                        "type": "object"
                    },
                    "ElasticsearchSettings": {
                        "description": "The settings for the Elasticsearch source endpoint. For more information, see the <code>ElasticsearchSettings</code> structure.",
                        "properties": {
                            "EndpointUri": {
                                "description": "The endpoint for the ElasticSearch cluster.",
                                "type": "string"
                            },
                            "ErrorRetryDuration": {
                                "description": "The maximum number of seconds that DMS retries failed API requests to the Elasticsearch cluster.",
                                "type": "integer"
                            },
                            "FullLoadErrorPercentage": {
                                "description": "The maximum percentage of records that can fail to be written before a full load operation stops. ",
                                "type": "integer"
                            },
                            "ServiceAccessRoleArn": {
                                "description": "The Amazon Resource Name (ARN) used by service to access the IAM role.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "ServiceAccessRoleArn",
                            "EndpointUri"
                        ],
                        "type": "object"
                    },
                    "EndpointArn": {
                        "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                        "type": "string"
                    },
                    "EndpointIdentifier": {
                        "description": "The database endpoint identifier. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.",
                        "type": "string"
                    },
                    "EndpointType": {
                        "description": "The type of endpoint.",
                        "enum": [
                            "source",
                            "target"
                        ],
                        "type": "string"
                    },
                    "EngineDisplayName": {
                        "description": "The expanded name for the engine name. For example, if the <code>EngineName</code> parameter is \"aurora,\" this value would be \"Amazon Aurora MySQL.\"",
                        "type": "string"
                    },
                    "EngineName": {
                        "description": "The database engine name. Valid values, depending on the EndPointType, include mysql, oracle, postgres, mariadb, aurora, aurora-postgresql, redshift, s3, db2, azuredb, sybase, sybase, dynamodb, mongodb, and sqlserver.",
                        "type": "string"
                    },
                    "ExternalId": {
                        "description": " Value returned by a call to CreateEndpoint that can be used for cross-account validation. Use it on a subsequent call to CreateEndpoint to create the endpoint with a cross-account. ",
                        "type": "string"
                    },
                    "ExternalTableDefinition": {
                        "description": "The external table definition.",
                        "type": "string"
                    },
                    "ExtraConnectionAttributes": {
                        "description": "Additional connection attributes used to connect to the endpoint.",
                        "type": "string"
                    },
                    "KinesisSettings": {
                        "description": "The settings for the Amazon Kinesis source endpoint. For more information, see the <code>KinesisSettings</code> structure.",
                        "properties": {
                            "MessageFormat": {
                                "description": "The output format for the records created on the endpoint. The message format is <code>JSON</code>.",
                                "enum": [
                                    "json"
                                ],
                                "type": "string"
                            },
                            "ServiceAccessRoleArn": {
                                "description": "The Amazon Resource Name (ARN) for the IAM role that DMS uses to write to the Amazon Kinesis data stream.",
                                "type": "string"
                            },
                            "StreamArn": {
                                "description": "The Amazon Resource Name (ARN) for the Amazon Kinesis Data Streams endpoint.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "KmsKeyId": {
                        "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                        "type": "string"
                    },
                    "MongoDbSettings": {
                        "description": "The settings for the MongoDB source endpoint. For more information, see the <code>MongoDbSettings</code> structure.",
                        "properties": {
                            "AuthMechanism": {
                                "description": "<p> The authentication mechanism you use to access the MongoDB source endpoint.</p> <p>Valid values: DEFAULT, MONGODB_CR, SCRAM_SHA_1 </p> <p>DEFAULT – For MongoDB version 2.x, use MONGODB_CR. For MongoDB version 3.x, use SCRAM_SHA_1. This attribute is not used when authType=No.</p>",
                                "enum": [
                                    "default",
                                    "mongodb_cr",
                                    "scram_sha_1"
                                ],
                                "type": "string"
                            },
                            "AuthSource": {
                                "description": "<p> The MongoDB database name. This attribute is not used when <code>authType=NO</code>. </p> <p>The default is admin.</p>",
                                "type": "string"
                            },
                            "AuthType": {
                                "description": "<p> The authentication type you use to access the MongoDB source endpoint.</p> <p>Valid values: NO, PASSWORD </p> <p>When NO is selected, user name and password parameters are not used and can be empty. </p>",
                                "enum": [
                                    "no",
                                    "password"
                                ],
                                "type": "string"
                            },
                            "DatabaseName": {
                                "description": " The database name on the MongoDB source endpoint. ",
                                "type": "string"
                            },
                            "DocsToInvestigate": {
                                "description": "<p> Indicates the number of documents to preview to determine the document organization. Use this attribute when <code>NestingLevel</code> is set to ONE. </p> <p>Must be a positive value greater than 0. Default value is 1000.</p>",
                                "type": "string"
                            },
                            "ExtractDocId": {
                                "description": "<p> Specifies the document ID. Use this attribute when <code>NestingLevel</code> is set to NONE. </p> <p>Default value is false. </p>",
                                "type": "string"
                            },
                            "KmsKeyId": {
                                "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                "type": "string"
                            },
                            "NestingLevel": {
                                "description": "<p> Specifies either document or table mode. </p> <p>Valid values: NONE, ONE</p> <p>Default value is NONE. Specify NONE to use document mode. Specify ONE to use table mode.</p>",
                                "enum": [
                                    "none",
                                    "one"
                                ],
                                "type": "string"
                            },
                            "Password": {
                                "description": " The password for the user account you use to access the MongoDB source endpoint. ",
                                "format": "password",
                                "type": "string"
                            },
                            "Port": {
                                "description": " The port value for the MongoDB source endpoint. ",
                                "type": "integer"
                            },
                            "ServerName": {
                                "description": " The name of the server on the MongoDB source endpoint. ",
                                "type": "string"
                            },
                            "Username": {
                                "description": "The user name you use to access the MongoDB source endpoint. ",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "Port": {
                        "description": "The port value used to access the endpoint.",
                        "type": "integer"
                    },
                    "S3Settings": {
                        "description": "The settings for the S3 target endpoint. For more information, see the <code>S3Settings</code> structure.",
                        "properties": {
                            "BucketFolder": {
                                "description": " An optional parameter to set a folder name in the S3 bucket. If provided, tables are created in the path &lt;bucketFolder&gt;/&lt;schema_name&gt;/&lt;table_name&gt;/. If this parameter is not specified, then the path used is &lt;schema_name&gt;/&lt;table_name&gt;/. ",
                                "type": "string"
                            },
                            "BucketName": {
                                "description": " The name of the S3 bucket. ",
                                "type": "string"
                            },
                            "CompressionType": {
                                "description": " An optional parameter to use GZIP to compress the target files. Set to GZIP to compress the target files. Set to NONE (the default) or do not use to leave the files uncompressed. ",
                                "enum": [
                                    "none",
                                    "gzip"
                                ],
                                "type": "string"
                            },
                            "CsvDelimiter": {
                                "description": " The delimiter used to separate columns in the source files. The default is a comma. ",
                                "type": "string"
                            },
                            "CsvRowDelimiter": {
                                "description": " The delimiter used to separate rows in the source files. The default is a carriage return (\\n). ",
                                "type": "string"
                            },
                            "ExternalTableDefinition": {
                                "description": " The external table definition. ",
                                "type": "string"
                            },
                            "ServiceAccessRoleArn": {
                                "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "ServerName": {
                        "description": "The name of the server at the endpoint.",
                        "type": "string"
                    },
                    "ServiceAccessRoleArn": {
                        "description": "The Amazon Resource Name (ARN) used by the service access IAM role.",
                        "type": "string"
                    },
                    "SslMode": {
                        "description": "<p>The SSL mode used to connect to the endpoint.</p> <p>SSL mode can be one of four values: none, require, verify-ca, verify-full. </p> <p>The default value is none.</p>",
                        "enum": [
                            "none",
                            "require",
                            "verify-ca",
                            "verify-full"
                        ],
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the endpoint.",
                        "type": "string"
                    },
                    "Username": {
                        "description": "The user name used to connect to the endpoint.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EndpointList": {
                "items": {
                    "description": "<p/>",
                    "properties": {
                        "CertificateArn": {
                            "description": "The Amazon Resource Name (ARN) used for SSL connection to the endpoint.",
                            "type": "string"
                        },
                        "DatabaseName": {
                            "description": "The name of the database at the endpoint.",
                            "type": "string"
                        },
                        "DmsTransferSettings": {
                            "description": "<p>The settings in JSON format for the DMS transfer type of source endpoint. </p> <p>Possible attributes include the following:</p> <ul> <li> <p> <code>serviceAccessRoleArn</code> - The IAM role that has permission to access the Amazon S3 bucket.</p> </li> <li> <p> <code>bucketName</code> - The name of the S3 bucket to use.</p> </li> <li> <p> <code>compressionType</code> - An optional parameter to use GZIP to compress the target files. To use GZIP, set this value to <code>NONE</code> (the default). To keep the files uncompressed, don't use this value. </p> </li> </ul> <p>Shorthand syntax for these attributes is as follows: <code>ServiceAccessRoleArn=string,BucketName=string,CompressionType=string</code> </p> <p>JSON syntax for these attributes is as follows: <code>{ \"ServiceAccessRoleArn\": \"string\", \"BucketName\": \"string\", \"CompressionType\": \"none\"|\"gzip\" } </code> </p>",
                            "properties": {
                                "BucketName": {
                                    "description": " The name of the S3 bucket to use. ",
                                    "type": "string"
                                },
                                "ServiceAccessRoleArn": {
                                    "description": " The IAM role that has permission to access the Amazon S3 bucket. ",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "DynamoDbSettings": {
                            "description": "The settings for the target DynamoDB database. For more information, see the <code>DynamoDBSettings</code> structure.",
                            "properties": {
                                "ServiceAccessRoleArn": {
                                    "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "ServiceAccessRoleArn"
                            ],
                            "type": "object"
                        },
                        "ElasticsearchSettings": {
                            "description": "The settings for the Elasticsearch source endpoint. For more information, see the <code>ElasticsearchSettings</code> structure.",
                            "properties": {
                                "EndpointUri": {
                                    "description": "The endpoint for the ElasticSearch cluster.",
                                    "type": "string"
                                },
                                "ErrorRetryDuration": {
                                    "description": "The maximum number of seconds that DMS retries failed API requests to the Elasticsearch cluster.",
                                    "type": "integer"
                                },
                                "FullLoadErrorPercentage": {
                                    "description": "The maximum percentage of records that can fail to be written before a full load operation stops. ",
                                    "type": "integer"
                                },
                                "ServiceAccessRoleArn": {
                                    "description": "The Amazon Resource Name (ARN) used by service to access the IAM role.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "ServiceAccessRoleArn",
                                "EndpointUri"
                            ],
                            "type": "object"
                        },
                        "EndpointArn": {
                            "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                            "type": "string"
                        },
                        "EndpointIdentifier": {
                            "description": "The database endpoint identifier. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.",
                            "type": "string"
                        },
                        "EndpointType": {
                            "description": "The type of endpoint.",
                            "enum": [
                                "source",
                                "target"
                            ],
                            "type": "string"
                        },
                        "EngineDisplayName": {
                            "description": "The expanded name for the engine name. For example, if the <code>EngineName</code> parameter is \"aurora,\" this value would be \"Amazon Aurora MySQL.\"",
                            "type": "string"
                        },
                        "EngineName": {
                            "description": "The database engine name. Valid values, depending on the EndPointType, include mysql, oracle, postgres, mariadb, aurora, aurora-postgresql, redshift, s3, db2, azuredb, sybase, sybase, dynamodb, mongodb, and sqlserver.",
                            "type": "string"
                        },
                        "ExternalId": {
                            "description": " Value returned by a call to CreateEndpoint that can be used for cross-account validation. Use it on a subsequent call to CreateEndpoint to create the endpoint with a cross-account. ",
                            "type": "string"
                        },
                        "ExternalTableDefinition": {
                            "description": "The external table definition.",
                            "type": "string"
                        },
                        "ExtraConnectionAttributes": {
                            "description": "Additional connection attributes used to connect to the endpoint.",
                            "type": "string"
                        },
                        "KinesisSettings": {
                            "description": "The settings for the Amazon Kinesis source endpoint. For more information, see the <code>KinesisSettings</code> structure.",
                            "properties": {
                                "MessageFormat": {
                                    "description": "The output format for the records created on the endpoint. The message format is <code>JSON</code>.",
                                    "enum": [
                                        "json"
                                    ],
                                    "type": "string"
                                },
                                "ServiceAccessRoleArn": {
                                    "description": "The Amazon Resource Name (ARN) for the IAM role that DMS uses to write to the Amazon Kinesis data stream.",
                                    "type": "string"
                                },
                                "StreamArn": {
                                    "description": "The Amazon Resource Name (ARN) for the Amazon Kinesis Data Streams endpoint.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "KmsKeyId": {
                            "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                            "type": "string"
                        },
                        "MongoDbSettings": {
                            "description": "The settings for the MongoDB source endpoint. For more information, see the <code>MongoDbSettings</code> structure.",
                            "properties": {
                                "AuthMechanism": {
                                    "description": "<p> The authentication mechanism you use to access the MongoDB source endpoint.</p> <p>Valid values: DEFAULT, MONGODB_CR, SCRAM_SHA_1 </p> <p>DEFAULT – For MongoDB version 2.x, use MONGODB_CR. For MongoDB version 3.x, use SCRAM_SHA_1. This attribute is not used when authType=No.</p>",
                                    "enum": [
                                        "default",
                                        "mongodb_cr",
                                        "scram_sha_1"
                                    ],
                                    "type": "string"
                                },
                                "AuthSource": {
                                    "description": "<p> The MongoDB database name. This attribute is not used when <code>authType=NO</code>. </p> <p>The default is admin.</p>",
                                    "type": "string"
                                },
                                "AuthType": {
                                    "description": "<p> The authentication type you use to access the MongoDB source endpoint.</p> <p>Valid values: NO, PASSWORD </p> <p>When NO is selected, user name and password parameters are not used and can be empty. </p>",
                                    "enum": [
                                        "no",
                                        "password"
                                    ],
                                    "type": "string"
                                },
                                "DatabaseName": {
                                    "description": " The database name on the MongoDB source endpoint. ",
                                    "type": "string"
                                },
                                "DocsToInvestigate": {
                                    "description": "<p> Indicates the number of documents to preview to determine the document organization. Use this attribute when <code>NestingLevel</code> is set to ONE. </p> <p>Must be a positive value greater than 0. Default value is 1000.</p>",
                                    "type": "string"
                                },
                                "ExtractDocId": {
                                    "description": "<p> Specifies the document ID. Use this attribute when <code>NestingLevel</code> is set to NONE. </p> <p>Default value is false. </p>",
                                    "type": "string"
                                },
                                "KmsKeyId": {
                                    "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                    "type": "string"
                                },
                                "NestingLevel": {
                                    "description": "<p> Specifies either document or table mode. </p> <p>Valid values: NONE, ONE</p> <p>Default value is NONE. Specify NONE to use document mode. Specify ONE to use table mode.</p>",
                                    "enum": [
                                        "none",
                                        "one"
                                    ],
                                    "type": "string"
                                },
                                "Password": {
                                    "description": " The password for the user account you use to access the MongoDB source endpoint. ",
                                    "format": "password",
                                    "type": "string"
                                },
                                "Port": {
                                    "description": " The port value for the MongoDB source endpoint. ",
                                    "type": "integer"
                                },
                                "ServerName": {
                                    "description": " The name of the server on the MongoDB source endpoint. ",
                                    "type": "string"
                                },
                                "Username": {
                                    "description": "The user name you use to access the MongoDB source endpoint. ",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "Port": {
                            "description": "The port value used to access the endpoint.",
                            "type": "integer"
                        },
                        "S3Settings": {
                            "description": "The settings for the S3 target endpoint. For more information, see the <code>S3Settings</code> structure.",
                            "properties": {
                                "BucketFolder": {
                                    "description": " An optional parameter to set a folder name in the S3 bucket. If provided, tables are created in the path &lt;bucketFolder&gt;/&lt;schema_name&gt;/&lt;table_name&gt;/. If this parameter is not specified, then the path used is &lt;schema_name&gt;/&lt;table_name&gt;/. ",
                                    "type": "string"
                                },
                                "BucketName": {
                                    "description": " The name of the S3 bucket. ",
                                    "type": "string"
                                },
                                "CompressionType": {
                                    "description": " An optional parameter to use GZIP to compress the target files. Set to GZIP to compress the target files. Set to NONE (the default) or do not use to leave the files uncompressed. ",
                                    "enum": [
                                        "none",
                                        "gzip"
                                    ],
                                    "type": "string"
                                },
                                "CsvDelimiter": {
                                    "description": " The delimiter used to separate columns in the source files. The default is a comma. ",
                                    "type": "string"
                                },
                                "CsvRowDelimiter": {
                                    "description": " The delimiter used to separate rows in the source files. The default is a carriage return (\\n). ",
                                    "type": "string"
                                },
                                "ExternalTableDefinition": {
                                    "description": " The external table definition. ",
                                    "type": "string"
                                },
                                "ServiceAccessRoleArn": {
                                    "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "ServerName": {
                            "description": "The name of the server at the endpoint.",
                            "type": "string"
                        },
                        "ServiceAccessRoleArn": {
                            "description": "The Amazon Resource Name (ARN) used by the service access IAM role.",
                            "type": "string"
                        },
                        "SslMode": {
                            "description": "<p>The SSL mode used to connect to the endpoint.</p> <p>SSL mode can be one of four values: none, require, verify-ca, verify-full. </p> <p>The default value is none.</p>",
                            "enum": [
                                "none",
                                "require",
                                "verify-ca",
                                "verify-full"
                            ],
                            "type": "string"
                        },
                        "Status": {
                            "description": "The status of the endpoint.",
                            "type": "string"
                        },
                        "Username": {
                            "description": "The user name used to connect to the endpoint.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "Event": {
                "description": "<p/>",
                "properties": {
                    "Date": {
                        "description": "The date of the event.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "EventCategories": {
                        "description": "The event categories available for the specified source type.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "Message": {
                        "description": "The event message.",
                        "type": "string"
                    },
                    "SourceIdentifier": {
                        "description": "<p> The identifier of the event source. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it cannot end with a hyphen or contain two consecutive hyphens. </p> <p>Constraints:replication instance, endpoint, migration task</p>",
                        "type": "string"
                    },
                    "SourceType": {
                        "description": "<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | endpoint | migration-task</p>",
                        "enum": [
                            "replication-instance"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EventCategoriesList": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "EventCategoryGroup": {
                "description": "<p/>",
                "properties": {
                    "EventCategories": {
                        "description": " A list of event categories for a <code>SourceType</code> that you want to subscribe to. ",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "SourceType": {
                        "description": "<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | replication-server | security-group | migration-task</p>",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EventCategoryGroupList": {
                "items": {
                    "description": "<p/>",
                    "properties": {
                        "EventCategories": {
                            "description": " A list of event categories for a <code>SourceType</code> that you want to subscribe to. ",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "SourceType": {
                            "description": "<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | replication-server | security-group | migration-task</p>",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "EventList": {
                "items": {
                    "description": "<p/>",
                    "properties": {
                        "Date": {
                            "description": "The date of the event.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "EventCategories": {
                            "description": "The event categories available for the specified source type.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "Message": {
                            "description": "The event message.",
                            "type": "string"
                        },
                        "SourceIdentifier": {
                            "description": "<p> The identifier of the event source. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it cannot end with a hyphen or contain two consecutive hyphens. </p> <p>Constraints:replication instance, endpoint, migration task</p>",
                            "type": "string"
                        },
                        "SourceType": {
                            "description": "<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | endpoint | migration-task</p>",
                            "enum": [
                                "replication-instance"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "EventSubscription": {
                "description": "<p/>",
                "properties": {
                    "CustSubscriptionId": {
                        "description": "The AWS DMS event notification subscription Id.",
                        "type": "string"
                    },
                    "CustomerAwsId": {
                        "description": "The AWS customer account associated with the AWS DMS event notification subscription.",
                        "type": "string"
                    },
                    "Enabled": {
                        "description": "Boolean value that indicates if the event subscription is enabled.",
                        "type": "boolean"
                    },
                    "EventCategoriesList": {
                        "description": "A lists of event categories.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "SnsTopicArn": {
                        "description": "The topic ARN of the AWS DMS event notification subscription.",
                        "type": "string"
                    },
                    "SourceIdsList": {
                        "description": "A list of source Ids for the event subscription.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "SourceType": {
                        "description": "<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | replication-server | security-group | migration-task</p>",
                        "type": "string"
                    },
                    "Status": {
                        "description": "<p>The status of the AWS DMS event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that AWS DMS no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                        "type": "string"
                    },
                    "SubscriptionCreationTime": {
                        "description": "The time the RDS event notification subscription was created.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EventSubscriptionsList": {
                "items": {
                    "description": "<p/>",
                    "properties": {
                        "CustSubscriptionId": {
                            "description": "The AWS DMS event notification subscription Id.",
                            "type": "string"
                        },
                        "CustomerAwsId": {
                            "description": "The AWS customer account associated with the AWS DMS event notification subscription.",
                            "type": "string"
                        },
                        "Enabled": {
                            "description": "Boolean value that indicates if the event subscription is enabled.",
                            "type": "boolean"
                        },
                        "EventCategoriesList": {
                            "description": "A lists of event categories.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "SnsTopicArn": {
                            "description": "The topic ARN of the AWS DMS event notification subscription.",
                            "type": "string"
                        },
                        "SourceIdsList": {
                            "description": "A list of source Ids for the event subscription.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "SourceType": {
                            "description": "<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | replication-server | security-group | migration-task</p>",
                            "type": "string"
                        },
                        "Status": {
                            "description": "<p>The status of the AWS DMS event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that AWS DMS no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                            "type": "string"
                        },
                        "SubscriptionCreationTime": {
                            "description": "The time the RDS event notification subscription was created.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "Filter": {
                "description": "<p/>",
                "properties": {
                    "Name": {
                        "description": "The name of the filter.",
                        "type": "string"
                    },
                    "Values": {
                        "description": "The filter value.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Name",
                    "Values"
                ],
                "type": "object"
            },
            "FilterList": {
                "items": {
                    "description": "<p/>",
                    "properties": {
                        "Name": {
                            "description": "The name of the filter.",
                            "type": "string"
                        },
                        "Values": {
                            "description": "The filter value.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "Name",
                        "Values"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "FilterValueList": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "ImportCertificateMessage": {
                "example": {
                    "CertificateIdentifier": "",
                    "CertificatePem": ""
                },
                "properties": {
                    "CertificateIdentifier": {
                        "description": "The customer-assigned name of the certificate. Valid characters are A-z and 0-9.",
                        "type": "string"
                    },
                    "CertificatePem": {
                        "description": "The contents of the .pem X.509 certificate file for the certificate.",
                        "type": "string"
                    },
                    "CertificateWallet": {
                        "description": "The location of the imported Oracle Wallet certificate for use with SSL.",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "The tags associated with the certificate.",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "Key": {
                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "CertificateIdentifier"
                ],
                "type": "object"
            },
            "ImportCertificateResponse": {
                "example": {
                    "Certificate": {}
                },
                "properties": {
                    "Certificate": {
                        "description": "The certificate to be uploaded.",
                        "properties": {
                            "CertificateArn": {
                                "description": "The Amazon Resource Name (ARN) for the certificate.",
                                "type": "string"
                            },
                            "CertificateCreationDate": {
                                "description": "The date that the certificate was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "CertificateIdentifier": {
                                "description": "The customer-assigned name of the certificate. Valid characters are A-z and 0-9.",
                                "type": "string"
                            },
                            "CertificateOwner": {
                                "description": "The owner of the certificate.",
                                "type": "string"
                            },
                            "CertificatePem": {
                                "description": "The contents of the .pem X.509 certificate file for the certificate.",
                                "type": "string"
                            },
                            "CertificateWallet": {
                                "description": "The location of the imported Oracle Wallet certificate for use with SSL.",
                                "type": "string"
                            },
                            "KeyLength": {
                                "description": "The key length of the cryptographic algorithm being used.",
                                "type": "integer"
                            },
                            "SigningAlgorithm": {
                                "description": "The signing algorithm for the certificate.",
                                "type": "string"
                            },
                            "ValidFromDate": {
                                "description": "The beginning date that the certificate is valid.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "ValidToDate": {
                                "description": "The final date that the certificate is valid.",
                                "format": "date-time",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "InsufficientResourceCapacityFault": {},
            "Integer": {
                "type": "integer"
            },
            "IntegerOptional": {
                "type": "integer"
            },
            "InvalidCertificateFault": {},
            "InvalidResourceStateFault": {},
            "InvalidSubnet": {},
            "KMSKeyNotAccessibleFault": {},
            "KeyList": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "KinesisSettings": {
                "description": "<p/>",
                "properties": {
                    "MessageFormat": {
                        "description": "The output format for the records created on the endpoint. The message format is <code>JSON</code>.",
                        "enum": [
                            "json"
                        ],
                        "type": "string"
                    },
                    "ServiceAccessRoleArn": {
                        "description": "The Amazon Resource Name (ARN) for the IAM role that DMS uses to write to the Amazon Kinesis data stream.",
                        "type": "string"
                    },
                    "StreamArn": {
                        "description": "The Amazon Resource Name (ARN) for the Amazon Kinesis Data Streams endpoint.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListTagsForResourceMessage": {
                "description": "<p/>",
                "example": {
                    "ResourceArn": ""
                },
                "properties": {
                    "ResourceArn": {
                        "description": "The Amazon Resource Name (ARN) string that uniquely identifies the AWS DMS resource.",
                        "type": "string"
                    }
                },
                "required": [
                    "ResourceArn"
                ],
                "type": "object"
            },
            "ListTagsForResourceResponse": {
                "description": "<p/>",
                "example": {
                    "TagList": []
                },
                "properties": {
                    "TagList": {
                        "description": "A list of tags for the resource.",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "Key": {
                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Long": {
                "type": "integer"
            },
            "MessageFormatValue": {
                "enum": [
                    "json"
                ],
                "type": "string"
            },
            "MigrationTypeValue": {
                "enum": [
                    "full-load",
                    "cdc",
                    "full-load-and-cdc"
                ],
                "type": "string"
            },
            "ModifyEndpointMessage": {
                "description": "<p/>",
                "example": {
                    "CertificateArn": "",
                    "DatabaseName": "",
                    "EndpointArn": "",
                    "EndpointIdentifier": "",
                    "EndpointType": "source",
                    "EngineName": "",
                    "ExtraConnectionAttributes": "",
                    "Password": "",
                    "Port": 123,
                    "ServerName": "",
                    "SslMode": "require",
                    "Username": ""
                },
                "properties": {
                    "CertificateArn": {
                        "description": "The Amazon Resource Name (ARN) of the certificate used for SSL connection.",
                        "type": "string"
                    },
                    "DatabaseName": {
                        "description": "The name of the endpoint database.",
                        "type": "string"
                    },
                    "DmsTransferSettings": {
                        "description": "<p>The settings in JSON format for the DMS transfer type of source endpoint. </p> <p>Attributes include the following:</p> <ul> <li> <p>serviceAccessRoleArn - The IAM role that has permission to access the Amazon S3 bucket.</p> </li> <li> <p>BucketName - The name of the S3 bucket to use.</p> </li> <li> <p>compressionType - An optional parameter to use GZIP to compress the target files. Set to NONE (the default) or do not use to leave the files uncompressed.</p> </li> </ul> <p>Shorthand syntax: ServiceAccessRoleArn=string ,BucketName=string,CompressionType=string</p> <p>JSON syntax:</p> <p> { \"ServiceAccessRoleArn\": \"string\", \"BucketName\": \"string\", \"CompressionType\": \"none\"|\"gzip\" } </p>",
                        "properties": {
                            "BucketName": {
                                "description": " The name of the S3 bucket to use. ",
                                "type": "string"
                            },
                            "ServiceAccessRoleArn": {
                                "description": " The IAM role that has permission to access the Amazon S3 bucket. ",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "DynamoDbSettings": {
                        "description": "Settings in JSON format for the target Amazon DynamoDB endpoint. For more information about the available settings, see <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.DynamoDB.html\">Using Object Mapping to Migrate Data to DynamoDB</a> in the <i>AWS Database Migration Service User Guide.</i> ",
                        "properties": {
                            "ServiceAccessRoleArn": {
                                "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                                "type": "string"
                            }
                        },
                        "required": [
                            "ServiceAccessRoleArn"
                        ],
                        "type": "object"
                    },
                    "ElasticsearchSettings": {
                        "description": "Settings in JSON format for the target Elasticsearch endpoint. For more information about the available settings, see <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Elasticsearch.html#CHAP_Target.Elasticsearch.Configuration\">Extra Connection Attributes When Using Elasticsearch as a Target for AWS DMS</a> in the <i>AWS Database Migration User Guide.</i> ",
                        "properties": {
                            "EndpointUri": {
                                "description": "The endpoint for the ElasticSearch cluster.",
                                "type": "string"
                            },
                            "ErrorRetryDuration": {
                                "description": "The maximum number of seconds that DMS retries failed API requests to the Elasticsearch cluster.",
                                "type": "integer"
                            },
                            "FullLoadErrorPercentage": {
                                "description": "The maximum percentage of records that can fail to be written before a full load operation stops. ",
                                "type": "integer"
                            },
                            "ServiceAccessRoleArn": {
                                "description": "The Amazon Resource Name (ARN) used by service to access the IAM role.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "ServiceAccessRoleArn",
                            "EndpointUri"
                        ],
                        "type": "object"
                    },
                    "EndpointArn": {
                        "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                        "type": "string"
                    },
                    "EndpointIdentifier": {
                        "description": "The database endpoint identifier. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.",
                        "type": "string"
                    },
                    "EndpointType": {
                        "description": "The type of endpoint.",
                        "enum": [
                            "source",
                            "target"
                        ],
                        "type": "string"
                    },
                    "EngineName": {
                        "description": "The type of engine for the endpoint. Valid values, depending on the EndPointType, include mysql, oracle, postgres, mariadb, aurora, aurora-postgresql, redshift, s3, db2, azuredb, sybase, sybase, dynamodb, mongodb, and sqlserver.",
                        "type": "string"
                    },
                    "ExternalTableDefinition": {
                        "description": "The external table definition.",
                        "type": "string"
                    },
                    "ExtraConnectionAttributes": {
                        "description": "Additional attributes associated with the connection. To reset this parameter, pass the empty string (\"\") as an argument.",
                        "type": "string"
                    },
                    "KinesisSettings": {
                        "description": "Settings in JSON format for the target Amazon Kinesis Data Streams endpoint. For more information about the available settings, see <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Kinesis.html#CHAP_Target.Kinesis.ObjectMapping \">Using Object Mapping to Migrate Data to a Kinesis Data Stream</a> in the <i>AWS Database Migration User Guide.</i> ",
                        "properties": {
                            "MessageFormat": {
                                "description": "The output format for the records created on the endpoint. The message format is <code>JSON</code>.",
                                "enum": [
                                    "json"
                                ],
                                "type": "string"
                            },
                            "ServiceAccessRoleArn": {
                                "description": "The Amazon Resource Name (ARN) for the IAM role that DMS uses to write to the Amazon Kinesis data stream.",
                                "type": "string"
                            },
                            "StreamArn": {
                                "description": "The Amazon Resource Name (ARN) for the Amazon Kinesis Data Streams endpoint.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "MongoDbSettings": {
                        "description": "Settings in JSON format for the source MongoDB endpoint. For more information about the available settings, see the configuration properties section in <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.MongoDB.html\"> Using MongoDB as a Target for AWS Database Migration Service</a> in the <i>AWS Database Migration Service User Guide.</i> ",
                        "properties": {
                            "AuthMechanism": {
                                "description": "<p> The authentication mechanism you use to access the MongoDB source endpoint.</p> <p>Valid values: DEFAULT, MONGODB_CR, SCRAM_SHA_1 </p> <p>DEFAULT – For MongoDB version 2.x, use MONGODB_CR. For MongoDB version 3.x, use SCRAM_SHA_1. This attribute is not used when authType=No.</p>",
                                "enum": [
                                    "default",
                                    "mongodb_cr",
                                    "scram_sha_1"
                                ],
                                "type": "string"
                            },
                            "AuthSource": {
                                "description": "<p> The MongoDB database name. This attribute is not used when <code>authType=NO</code>. </p> <p>The default is admin.</p>",
                                "type": "string"
                            },
                            "AuthType": {
                                "description": "<p> The authentication type you use to access the MongoDB source endpoint.</p> <p>Valid values: NO, PASSWORD </p> <p>When NO is selected, user name and password parameters are not used and can be empty. </p>",
                                "enum": [
                                    "no",
                                    "password"
                                ],
                                "type": "string"
                            },
                            "DatabaseName": {
                                "description": " The database name on the MongoDB source endpoint. ",
                                "type": "string"
                            },
                            "DocsToInvestigate": {
                                "description": "<p> Indicates the number of documents to preview to determine the document organization. Use this attribute when <code>NestingLevel</code> is set to ONE. </p> <p>Must be a positive value greater than 0. Default value is 1000.</p>",
                                "type": "string"
                            },
                            "ExtractDocId": {
                                "description": "<p> Specifies the document ID. Use this attribute when <code>NestingLevel</code> is set to NONE. </p> <p>Default value is false. </p>",
                                "type": "string"
                            },
                            "KmsKeyId": {
                                "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                "type": "string"
                            },
                            "NestingLevel": {
                                "description": "<p> Specifies either document or table mode. </p> <p>Valid values: NONE, ONE</p> <p>Default value is NONE. Specify NONE to use document mode. Specify ONE to use table mode.</p>",
                                "enum": [
                                    "none",
                                    "one"
                                ],
                                "type": "string"
                            },
                            "Password": {
                                "description": " The password for the user account you use to access the MongoDB source endpoint. ",
                                "format": "password",
                                "type": "string"
                            },
                            "Port": {
                                "description": " The port value for the MongoDB source endpoint. ",
                                "type": "integer"
                            },
                            "ServerName": {
                                "description": " The name of the server on the MongoDB source endpoint. ",
                                "type": "string"
                            },
                            "Username": {
                                "description": "The user name you use to access the MongoDB source endpoint. ",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "Password": {
                        "description": "The password to be used to login to the endpoint database.",
                        "format": "password",
                        "type": "string"
                    },
                    "Port": {
                        "description": "The port used by the endpoint database.",
                        "type": "integer"
                    },
                    "S3Settings": {
                        "description": "Settings in JSON format for the target Amazon S3 endpoint. For more information about the available settings, see <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html#CHAP_Target.S3.Configuring\">Extra Connection Attributes When Using Amazon S3 as a Target for AWS DMS</a> in the <i>AWS Database Migration Service User Guide.</i> ",
                        "properties": {
                            "BucketFolder": {
                                "description": " An optional parameter to set a folder name in the S3 bucket. If provided, tables are created in the path &lt;bucketFolder&gt;/&lt;schema_name&gt;/&lt;table_name&gt;/. If this parameter is not specified, then the path used is &lt;schema_name&gt;/&lt;table_name&gt;/. ",
                                "type": "string"
                            },
                            "BucketName": {
                                "description": " The name of the S3 bucket. ",
                                "type": "string"
                            },
                            "CompressionType": {
                                "description": " An optional parameter to use GZIP to compress the target files. Set to GZIP to compress the target files. Set to NONE (the default) or do not use to leave the files uncompressed. ",
                                "enum": [
                                    "none",
                                    "gzip"
                                ],
                                "type": "string"
                            },
                            "CsvDelimiter": {
                                "description": " The delimiter used to separate columns in the source files. The default is a comma. ",
                                "type": "string"
                            },
                            "CsvRowDelimiter": {
                                "description": " The delimiter used to separate rows in the source files. The default is a carriage return (\\n). ",
                                "type": "string"
                            },
                            "ExternalTableDefinition": {
                                "description": " The external table definition. ",
                                "type": "string"
                            },
                            "ServiceAccessRoleArn": {
                                "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "ServerName": {
                        "description": "The name of the server where the endpoint database resides.",
                        "type": "string"
                    },
                    "ServiceAccessRoleArn": {
                        "description": " The Amazon Resource Name (ARN) for the service access role you want to use to modify the endpoint. ",
                        "type": "string"
                    },
                    "SslMode": {
                        "description": "<p>The SSL mode to be used.</p> <p>SSL mode can be one of four values: none, require, verify-ca, verify-full. </p> <p>The default value is none.</p>",
                        "enum": [
                            "none",
                            "require",
                            "verify-ca",
                            "verify-full"
                        ],
                        "type": "string"
                    },
                    "Username": {
                        "description": "The user name to be used to login to the endpoint database.",
                        "type": "string"
                    }
                },
                "required": [
                    "EndpointArn"
                ],
                "type": "object"
            },
            "ModifyEndpointResponse": {
                "description": "<p/>",
                "example": {
                    "Endpoint": {}
                },
                "properties": {
                    "Endpoint": {
                        "description": "The modified endpoint.",
                        "properties": {
                            "CertificateArn": {
                                "description": "The Amazon Resource Name (ARN) used for SSL connection to the endpoint.",
                                "type": "string"
                            },
                            "DatabaseName": {
                                "description": "The name of the database at the endpoint.",
                                "type": "string"
                            },
                            "DmsTransferSettings": {
                                "description": "<p>The settings in JSON format for the DMS transfer type of source endpoint. </p> <p>Possible attributes include the following:</p> <ul> <li> <p> <code>serviceAccessRoleArn</code> - The IAM role that has permission to access the Amazon S3 bucket.</p> </li> <li> <p> <code>bucketName</code> - The name of the S3 bucket to use.</p> </li> <li> <p> <code>compressionType</code> - An optional parameter to use GZIP to compress the target files. To use GZIP, set this value to <code>NONE</code> (the default). To keep the files uncompressed, don't use this value. </p> </li> </ul> <p>Shorthand syntax for these attributes is as follows: <code>ServiceAccessRoleArn=string,BucketName=string,CompressionType=string</code> </p> <p>JSON syntax for these attributes is as follows: <code>{ \"ServiceAccessRoleArn\": \"string\", \"BucketName\": \"string\", \"CompressionType\": \"none\"|\"gzip\" } </code> </p>",
                                "properties": {
                                    "BucketName": {
                                        "description": " The name of the S3 bucket to use. ",
                                        "type": "string"
                                    },
                                    "ServiceAccessRoleArn": {
                                        "description": " The IAM role that has permission to access the Amazon S3 bucket. ",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "DynamoDbSettings": {
                                "description": "The settings for the target DynamoDB database. For more information, see the <code>DynamoDBSettings</code> structure.",
                                "properties": {
                                    "ServiceAccessRoleArn": {
                                        "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ServiceAccessRoleArn"
                                ],
                                "type": "object"
                            },
                            "ElasticsearchSettings": {
                                "description": "The settings for the Elasticsearch source endpoint. For more information, see the <code>ElasticsearchSettings</code> structure.",
                                "properties": {
                                    "EndpointUri": {
                                        "description": "The endpoint for the ElasticSearch cluster.",
                                        "type": "string"
                                    },
                                    "ErrorRetryDuration": {
                                        "description": "The maximum number of seconds that DMS retries failed API requests to the Elasticsearch cluster.",
                                        "type": "integer"
                                    },
                                    "FullLoadErrorPercentage": {
                                        "description": "The maximum percentage of records that can fail to be written before a full load operation stops. ",
                                        "type": "integer"
                                    },
                                    "ServiceAccessRoleArn": {
                                        "description": "The Amazon Resource Name (ARN) used by service to access the IAM role.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ServiceAccessRoleArn",
                                    "EndpointUri"
                                ],
                                "type": "object"
                            },
                            "EndpointArn": {
                                "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                "type": "string"
                            },
                            "EndpointIdentifier": {
                                "description": "The database endpoint identifier. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.",
                                "type": "string"
                            },
                            "EndpointType": {
                                "description": "The type of endpoint.",
                                "enum": [
                                    "source",
                                    "target"
                                ],
                                "type": "string"
                            },
                            "EngineDisplayName": {
                                "description": "The expanded name for the engine name. For example, if the <code>EngineName</code> parameter is \"aurora,\" this value would be \"Amazon Aurora MySQL.\"",
                                "type": "string"
                            },
                            "EngineName": {
                                "description": "The database engine name. Valid values, depending on the EndPointType, include mysql, oracle, postgres, mariadb, aurora, aurora-postgresql, redshift, s3, db2, azuredb, sybase, sybase, dynamodb, mongodb, and sqlserver.",
                                "type": "string"
                            },
                            "ExternalId": {
                                "description": " Value returned by a call to CreateEndpoint that can be used for cross-account validation. Use it on a subsequent call to CreateEndpoint to create the endpoint with a cross-account. ",
                                "type": "string"
                            },
                            "ExternalTableDefinition": {
                                "description": "The external table definition.",
                                "type": "string"
                            },
                            "ExtraConnectionAttributes": {
                                "description": "Additional connection attributes used to connect to the endpoint.",
                                "type": "string"
                            },
                            "KinesisSettings": {
                                "description": "The settings for the Amazon Kinesis source endpoint. For more information, see the <code>KinesisSettings</code> structure.",
                                "properties": {
                                    "MessageFormat": {
                                        "description": "The output format for the records created on the endpoint. The message format is <code>JSON</code>.",
                                        "enum": [
                                            "json"
                                        ],
                                        "type": "string"
                                    },
                                    "ServiceAccessRoleArn": {
                                        "description": "The Amazon Resource Name (ARN) for the IAM role that DMS uses to write to the Amazon Kinesis data stream.",
                                        "type": "string"
                                    },
                                    "StreamArn": {
                                        "description": "The Amazon Resource Name (ARN) for the Amazon Kinesis Data Streams endpoint.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "KmsKeyId": {
                                "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                "type": "string"
                            },
                            "MongoDbSettings": {
                                "description": "The settings for the MongoDB source endpoint. For more information, see the <code>MongoDbSettings</code> structure.",
                                "properties": {
                                    "AuthMechanism": {
                                        "description": "<p> The authentication mechanism you use to access the MongoDB source endpoint.</p> <p>Valid values: DEFAULT, MONGODB_CR, SCRAM_SHA_1 </p> <p>DEFAULT – For MongoDB version 2.x, use MONGODB_CR. For MongoDB version 3.x, use SCRAM_SHA_1. This attribute is not used when authType=No.</p>",
                                        "enum": [
                                            "default",
                                            "mongodb_cr",
                                            "scram_sha_1"
                                        ],
                                        "type": "string"
                                    },
                                    "AuthSource": {
                                        "description": "<p> The MongoDB database name. This attribute is not used when <code>authType=NO</code>. </p> <p>The default is admin.</p>",
                                        "type": "string"
                                    },
                                    "AuthType": {
                                        "description": "<p> The authentication type you use to access the MongoDB source endpoint.</p> <p>Valid values: NO, PASSWORD </p> <p>When NO is selected, user name and password parameters are not used and can be empty. </p>",
                                        "enum": [
                                            "no",
                                            "password"
                                        ],
                                        "type": "string"
                                    },
                                    "DatabaseName": {
                                        "description": " The database name on the MongoDB source endpoint. ",
                                        "type": "string"
                                    },
                                    "DocsToInvestigate": {
                                        "description": "<p> Indicates the number of documents to preview to determine the document organization. Use this attribute when <code>NestingLevel</code> is set to ONE. </p> <p>Must be a positive value greater than 0. Default value is 1000.</p>",
                                        "type": "string"
                                    },
                                    "ExtractDocId": {
                                        "description": "<p> Specifies the document ID. Use this attribute when <code>NestingLevel</code> is set to NONE. </p> <p>Default value is false. </p>",
                                        "type": "string"
                                    },
                                    "KmsKeyId": {
                                        "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                        "type": "string"
                                    },
                                    "NestingLevel": {
                                        "description": "<p> Specifies either document or table mode. </p> <p>Valid values: NONE, ONE</p> <p>Default value is NONE. Specify NONE to use document mode. Specify ONE to use table mode.</p>",
                                        "enum": [
                                            "none",
                                            "one"
                                        ],
                                        "type": "string"
                                    },
                                    "Password": {
                                        "description": " The password for the user account you use to access the MongoDB source endpoint. ",
                                        "format": "password",
                                        "type": "string"
                                    },
                                    "Port": {
                                        "description": " The port value for the MongoDB source endpoint. ",
                                        "type": "integer"
                                    },
                                    "ServerName": {
                                        "description": " The name of the server on the MongoDB source endpoint. ",
                                        "type": "string"
                                    },
                                    "Username": {
                                        "description": "The user name you use to access the MongoDB source endpoint. ",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "Port": {
                                "description": "The port value used to access the endpoint.",
                                "type": "integer"
                            },
                            "S3Settings": {
                                "description": "The settings for the S3 target endpoint. For more information, see the <code>S3Settings</code> structure.",
                                "properties": {
                                    "BucketFolder": {
                                        "description": " An optional parameter to set a folder name in the S3 bucket. If provided, tables are created in the path &lt;bucketFolder&gt;/&lt;schema_name&gt;/&lt;table_name&gt;/. If this parameter is not specified, then the path used is &lt;schema_name&gt;/&lt;table_name&gt;/. ",
                                        "type": "string"
                                    },
                                    "BucketName": {
                                        "description": " The name of the S3 bucket. ",
                                        "type": "string"
                                    },
                                    "CompressionType": {
                                        "description": " An optional parameter to use GZIP to compress the target files. Set to GZIP to compress the target files. Set to NONE (the default) or do not use to leave the files uncompressed. ",
                                        "enum": [
                                            "none",
                                            "gzip"
                                        ],
                                        "type": "string"
                                    },
                                    "CsvDelimiter": {
                                        "description": " The delimiter used to separate columns in the source files. The default is a comma. ",
                                        "type": "string"
                                    },
                                    "CsvRowDelimiter": {
                                        "description": " The delimiter used to separate rows in the source files. The default is a carriage return (\\n). ",
                                        "type": "string"
                                    },
                                    "ExternalTableDefinition": {
                                        "description": " The external table definition. ",
                                        "type": "string"
                                    },
                                    "ServiceAccessRoleArn": {
                                        "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "ServerName": {
                                "description": "The name of the server at the endpoint.",
                                "type": "string"
                            },
                            "ServiceAccessRoleArn": {
                                "description": "The Amazon Resource Name (ARN) used by the service access IAM role.",
                                "type": "string"
                            },
                            "SslMode": {
                                "description": "<p>The SSL mode used to connect to the endpoint.</p> <p>SSL mode can be one of four values: none, require, verify-ca, verify-full. </p> <p>The default value is none.</p>",
                                "enum": [
                                    "none",
                                    "require",
                                    "verify-ca",
                                    "verify-full"
                                ],
                                "type": "string"
                            },
                            "Status": {
                                "description": "The status of the endpoint.",
                                "type": "string"
                            },
                            "Username": {
                                "description": "The user name used to connect to the endpoint.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ModifyEventSubscriptionMessage": {
                "description": "<p/>",
                "properties": {
                    "Enabled": {
                        "description": " A Boolean value; set to <b>true</b> to activate the subscription. ",
                        "type": "boolean"
                    },
                    "EventCategories": {
                        "description": " A list of event categories for a source type that you want to subscribe to. Use the <code>DescribeEventCategories</code> action to see a list of event categories. ",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "SnsTopicArn": {
                        "description": " The Amazon Resource Name (ARN) of the Amazon SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.",
                        "type": "string"
                    },
                    "SourceType": {
                        "description": "<p> The type of AWS DMS resource that generates the events you want to subscribe to. </p> <p>Valid values: replication-instance | migration-task</p>",
                        "type": "string"
                    },
                    "SubscriptionName": {
                        "description": "The name of the AWS DMS event notification subscription to be modified.",
                        "type": "string"
                    }
                },
                "required": [
                    "SubscriptionName"
                ],
                "type": "object"
            },
            "ModifyEventSubscriptionResponse": {
                "description": "<p/>",
                "properties": {
                    "EventSubscription": {
                        "description": "The modified event subscription.",
                        "properties": {
                            "CustSubscriptionId": {
                                "description": "The AWS DMS event notification subscription Id.",
                                "type": "string"
                            },
                            "CustomerAwsId": {
                                "description": "The AWS customer account associated with the AWS DMS event notification subscription.",
                                "type": "string"
                            },
                            "Enabled": {
                                "description": "Boolean value that indicates if the event subscription is enabled.",
                                "type": "boolean"
                            },
                            "EventCategoriesList": {
                                "description": "A lists of event categories.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "SnsTopicArn": {
                                "description": "The topic ARN of the AWS DMS event notification subscription.",
                                "type": "string"
                            },
                            "SourceIdsList": {
                                "description": "A list of source Ids for the event subscription.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "SourceType": {
                                "description": "<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | replication-server | security-group | migration-task</p>",
                                "type": "string"
                            },
                            "Status": {
                                "description": "<p>The status of the AWS DMS event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that AWS DMS no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                                "type": "string"
                            },
                            "SubscriptionCreationTime": {
                                "description": "The time the RDS event notification subscription was created.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ModifyReplicationInstanceMessage": {
                "description": "<p/>",
                "example": {
                    "AllocatedStorage": 123,
                    "AllowMajorVersionUpgrade": true,
                    "ApplyImmediately": true,
                    "AutoMinorVersionUpgrade": true,
                    "EngineVersion": "1.5.0",
                    "MultiAZ": true,
                    "PreferredMaintenanceWindow": "sun:06:00-sun:14:00",
                    "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
                    "ReplicationInstanceClass": "dms.t2.micro",
                    "ReplicationInstanceIdentifier": "test-rep-1",
                    "VpcSecurityGroupIds": []
                },
                "properties": {
                    "AllocatedStorage": {
                        "description": "The amount of storage (in gigabytes) to be allocated for the replication instance.",
                        "type": "integer"
                    },
                    "AllowMajorVersionUpgrade": {
                        "description": "<p>Indicates that major version upgrades are allowed. Changing this parameter does not result in an outage and the change is asynchronously applied as soon as possible.</p> <p>Constraints: This parameter must be set to true when specifying a value for the <code>EngineVersion</code> parameter that is a different major version than the replication instance's current version.</p>",
                        "type": "boolean"
                    },
                    "ApplyImmediately": {
                        "description": "Indicates whether the changes should be applied immediately or during the next maintenance window.",
                        "type": "boolean"
                    },
                    "AutoMinorVersionUpgrade": {
                        "description": " Indicates that minor version upgrades will be applied automatically to the replication instance during the maintenance window. Changing this parameter does not result in an outage except in the following case and the change is asynchronously applied as soon as possible. An outage will result if this parameter is set to <code>true</code> during the maintenance window, and a newer minor version is available, and AWS DMS has enabled auto patching for that engine version. ",
                        "type": "boolean"
                    },
                    "EngineVersion": {
                        "description": "The engine version number of the replication instance.",
                        "type": "string"
                    },
                    "MultiAZ": {
                        "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. ",
                        "type": "boolean"
                    },
                    "PreferredMaintenanceWindow": {
                        "description": "<p>The weekly time range (in UTC) during which system maintenance can occur, which might result in an outage. Changing this parameter does not result in an outage, except in the following situation, and the change is asynchronously applied as soon as possible. If moving this window to the current time, there must be at least 30 minutes between the current time and end of the window to ensure pending changes are applied.</p> <p>Default: Uses existing setting</p> <p>Format: ddd:hh24:mi-ddd:hh24:mi</p> <p>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</p> <p>Constraints: Must be at least 30 minutes</p>",
                        "type": "string"
                    },
                    "ReplicationInstanceArn": {
                        "description": "The Amazon Resource Name (ARN) of the replication instance.",
                        "type": "string"
                    },
                    "ReplicationInstanceClass": {
                        "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                        "type": "string"
                    },
                    "ReplicationInstanceIdentifier": {
                        "description": "The replication instance identifier. This parameter is stored as a lowercase string.",
                        "type": "string"
                    },
                    "VpcSecurityGroupIds": {
                        "description": " Specifies the VPC security group to be used with the replication instance. The VPC security group must work with the VPC containing the replication instance. ",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "ReplicationInstanceArn"
                ],
                "type": "object"
            },
            "ModifyReplicationInstanceResponse": {
                "description": "<p/>",
                "example": {
                    "ReplicationInstance": {
                        "AllocatedStorage": 5,
                        "AutoMinorVersionUpgrade": true,
                        "EngineVersion": "1.5.0",
                        "KmsKeyId": "arn:aws:kms:us-east-1:123456789012:key/4c1731d6-5435-ed4d-be13-d53411a7cfbd",
                        "PendingModifiedValues": {},
                        "PreferredMaintenanceWindow": "sun:06:00-sun:14:00",
                        "PubliclyAccessible": true,
                        "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
                        "ReplicationInstanceClass": "dms.t2.micro",
                        "ReplicationInstanceIdentifier": "test-rep-1",
                        "ReplicationInstanceStatus": "available",
                        "ReplicationSubnetGroup": {
                            "ReplicationSubnetGroupDescription": "default",
                            "ReplicationSubnetGroupIdentifier": "default",
                            "SubnetGroupStatus": "Complete",
                            "Subnets": [
                                {
                                    "SubnetAvailabilityZone": {
                                        "Name": "us-east-1d"
                                    },
                                    "SubnetIdentifier": "subnet-f6dd91af",
                                    "SubnetStatus": "Active"
                                },
                                {
                                    "SubnetAvailabilityZone": {
                                        "Name": "us-east-1b"
                                    },
                                    "SubnetIdentifier": "subnet-3605751d",
                                    "SubnetStatus": "Active"
                                },
                                {
                                    "SubnetAvailabilityZone": {
                                        "Name": "us-east-1c"
                                    },
                                    "SubnetIdentifier": "subnet-c2daefb5",
                                    "SubnetStatus": "Active"
                                },
                                {
                                    "SubnetAvailabilityZone": {
                                        "Name": "us-east-1e"
                                    },
                                    "SubnetIdentifier": "subnet-85e90cb8",
                                    "SubnetStatus": "Active"
                                }
                            ],
                            "VpcId": "vpc-6741a603"
                        }
                    }
                },
                "properties": {
                    "ReplicationInstance": {
                        "description": "The modified replication instance.",
                        "properties": {
                            "AllocatedStorage": {
                                "description": "The amount of storage (in gigabytes) that is allocated for the replication instance.",
                                "type": "integer"
                            },
                            "AutoMinorVersionUpgrade": {
                                "description": "Boolean value indicating if minor version upgrades will be automatically applied to the instance.",
                                "type": "boolean"
                            },
                            "AvailabilityZone": {
                                "description": "The Availability Zone for the instance.",
                                "type": "string"
                            },
                            "DnsNameServers": {
                                "description": "The DNS name servers for the replication instance.",
                                "type": "string"
                            },
                            "EngineVersion": {
                                "description": "The engine version number of the replication instance.",
                                "type": "string"
                            },
                            "FreeUntil": {
                                "description": " The expiration date of the free replication instance that is part of the Free DMS program. ",
                                "format": "date-time",
                                "type": "string"
                            },
                            "InstanceCreateTime": {
                                "description": "The time the replication instance was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "KmsKeyId": {
                                "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                "type": "string"
                            },
                            "MultiAZ": {
                                "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. ",
                                "type": "boolean"
                            },
                            "PendingModifiedValues": {
                                "description": "The pending modification values.",
                                "properties": {
                                    "AllocatedStorage": {
                                        "description": "The amount of storage (in gigabytes) that is allocated for the replication instance.",
                                        "type": "integer"
                                    },
                                    "EngineVersion": {
                                        "description": "The engine version number of the replication instance.",
                                        "type": "string"
                                    },
                                    "MultiAZ": {
                                        "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. ",
                                        "type": "boolean"
                                    },
                                    "ReplicationInstanceClass": {
                                        "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "PreferredMaintenanceWindow": {
                                "description": "The maintenance window times for the replication instance.",
                                "type": "string"
                            },
                            "PubliclyAccessible": {
                                "description": " Specifies the accessibility options for the replication instance. A value of <code>true</code> represents an instance with a public IP address. A value of <code>false</code> represents an instance with a private IP address. The default value is <code>true</code>. ",
                                "type": "boolean"
                            },
                            "ReplicationInstanceArn": {
                                "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                "type": "string"
                            },
                            "ReplicationInstanceClass": {
                                "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                                "type": "string"
                            },
                            "ReplicationInstanceIdentifier": {
                                "description": "<p>The replication instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>myrepinstance</code> </p>",
                                "type": "string"
                            },
                            "ReplicationInstancePrivateIpAddress": {
                                "description": "The private IP address of the replication instance.",
                                "type": "string"
                            },
                            "ReplicationInstancePrivateIpAddresses": {
                                "description": "The private IP address of the replication instance.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "ReplicationInstancePublicIpAddress": {
                                "description": "The public IP address of the replication instance.",
                                "type": "string"
                            },
                            "ReplicationInstancePublicIpAddresses": {
                                "description": "The public IP address of the replication instance.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "ReplicationInstanceStatus": {
                                "description": "The status of the replication instance.",
                                "type": "string"
                            },
                            "ReplicationSubnetGroup": {
                                "description": "The subnet group for the replication instance.",
                                "properties": {
                                    "ReplicationSubnetGroupDescription": {
                                        "description": "The description of the replication subnet group.",
                                        "type": "string"
                                    },
                                    "ReplicationSubnetGroupIdentifier": {
                                        "description": "The identifier of the replication instance subnet group.",
                                        "type": "string"
                                    },
                                    "SubnetGroupStatus": {
                                        "description": "The status of the subnet group.",
                                        "type": "string"
                                    },
                                    "Subnets": {
                                        "description": "The subnets that are in the subnet group.",
                                        "items": {
                                            "description": "<p/>",
                                            "properties": {
                                                "SubnetAvailabilityZone": {
                                                    "description": "The Availability Zone of the subnet.",
                                                    "properties": {
                                                        "Name": {
                                                            "description": "The name of the availability zone.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "SubnetIdentifier": {
                                                    "description": "The subnet identifier.",
                                                    "type": "string"
                                                },
                                                "SubnetStatus": {
                                                    "description": "The status of the subnet.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "VpcId": {
                                        "description": "The ID of the VPC.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "SecondaryAvailabilityZone": {
                                "description": "The availability zone of the standby replication instance in a Multi-AZ deployment.",
                                "type": "string"
                            },
                            "VpcSecurityGroups": {
                                "description": "The VPC security group for the instance.",
                                "items": {
                                    "description": "<p/>",
                                    "properties": {
                                        "Status": {
                                            "description": "The status of the VPC security group.",
                                            "type": "string"
                                        },
                                        "VpcSecurityGroupId": {
                                            "description": "The VPC security group Id.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ModifyReplicationSubnetGroupMessage": {
                "description": "<p/>",
                "example": {
                    "ReplicationSubnetGroupDescription": "",
                    "ReplicationSubnetGroupIdentifier": "",
                    "SubnetIds": []
                },
                "properties": {
                    "ReplicationSubnetGroupDescription": {
                        "description": "The description of the replication instance subnet group.",
                        "type": "string"
                    },
                    "ReplicationSubnetGroupIdentifier": {
                        "description": "The name of the replication instance subnet group.",
                        "type": "string"
                    },
                    "SubnetIds": {
                        "description": "A list of subnet IDs.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "ReplicationSubnetGroupIdentifier",
                    "SubnetIds"
                ],
                "type": "object"
            },
            "ModifyReplicationSubnetGroupResponse": {
                "description": "<p/>",
                "example": {
                    "ReplicationSubnetGroup": {}
                },
                "properties": {
                    "ReplicationSubnetGroup": {
                        "description": "The modified replication subnet group.",
                        "properties": {
                            "ReplicationSubnetGroupDescription": {
                                "description": "The description of the replication subnet group.",
                                "type": "string"
                            },
                            "ReplicationSubnetGroupIdentifier": {
                                "description": "The identifier of the replication instance subnet group.",
                                "type": "string"
                            },
                            "SubnetGroupStatus": {
                                "description": "The status of the subnet group.",
                                "type": "string"
                            },
                            "Subnets": {
                                "description": "The subnets that are in the subnet group.",
                                "items": {
                                    "description": "<p/>",
                                    "properties": {
                                        "SubnetAvailabilityZone": {
                                            "description": "The Availability Zone of the subnet.",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the availability zone.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "SubnetIdentifier": {
                                            "description": "The subnet identifier.",
                                            "type": "string"
                                        },
                                        "SubnetStatus": {
                                            "description": "The status of the subnet.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "VpcId": {
                                "description": "The ID of the VPC.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ModifyReplicationTaskMessage": {
                "description": "<p/>",
                "properties": {
                    "CdcStartPosition": {
                        "description": "<p>Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p> The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position \"checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93\"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p>",
                        "type": "string"
                    },
                    "CdcStartTime": {
                        "description": "<p>Indicates the start time for a change data capture (CDC) operation. Use either CdcStartTime or CdcStartPosition to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p>Timestamp Example: --cdc-start-time “2018-03-08T12:12:12”</p>",
                        "format": "date-time",
                        "type": "string"
                    },
                    "CdcStopPosition": {
                        "description": "<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:3018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 3018-02-09T12:12:12 “</p>",
                        "type": "string"
                    },
                    "MigrationType": {
                        "description": "<p>The migration type.</p> <p>Valid values: full-load | cdc | full-load-and-cdc</p>",
                        "enum": [
                            "full-load",
                            "cdc",
                            "full-load-and-cdc"
                        ],
                        "type": "string"
                    },
                    "ReplicationTaskArn": {
                        "description": "The Amazon Resource Name (ARN) of the replication task.",
                        "type": "string"
                    },
                    "ReplicationTaskIdentifier": {
                        "description": "<p>The replication task identifier.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>",
                        "type": "string"
                    },
                    "ReplicationTaskSettings": {
                        "description": "JSON file that contains settings for the task, such as target metadata settings.",
                        "type": "string"
                    },
                    "TableMappings": {
                        "description": "<p>When using the AWS CLI or boto3, provide the path of the JSON file that contains the table mappings. Precede the path with \"file://\". When working with the DMS API, provide the JSON as the parameter value.</p> <p>For example, --table-mappings file://mappingfile.json</p>",
                        "type": "string"
                    }
                },
                "required": [
                    "ReplicationTaskArn"
                ],
                "type": "object"
            },
            "ModifyReplicationTaskResponse": {
                "description": "<p/>",
                "properties": {
                    "ReplicationTask": {
                        "description": "The replication task that was modified.",
                        "properties": {
                            "CdcStartPosition": {
                                "description": "<p>Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p> The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position \"checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93\"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p>",
                                "type": "string"
                            },
                            "CdcStopPosition": {
                                "description": "<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:3018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 3018-02-09T12:12:12 “</p>",
                                "type": "string"
                            },
                            "LastFailureMessage": {
                                "description": "The last error (failure) message generated for the replication instance.",
                                "type": "string"
                            },
                            "MigrationType": {
                                "description": "The type of migration.",
                                "enum": [
                                    "full-load",
                                    "cdc",
                                    "full-load-and-cdc"
                                ],
                                "type": "string"
                            },
                            "RecoveryCheckpoint": {
                                "description": "Indicates the last checkpoint that occurred during a change data capture (CDC) operation. You can provide this value to the <code>CdcStartPosition</code> parameter to start a CDC operation that begins at that checkpoint.",
                                "type": "string"
                            },
                            "ReplicationInstanceArn": {
                                "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                "type": "string"
                            },
                            "ReplicationTaskArn": {
                                "description": "The Amazon Resource Name (ARN) of the replication task.",
                                "type": "string"
                            },
                            "ReplicationTaskCreationDate": {
                                "description": "The date the replication task was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "ReplicationTaskIdentifier": {
                                "description": "<p>The user-assigned replication task identifier or name.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>",
                                "type": "string"
                            },
                            "ReplicationTaskSettings": {
                                "description": "The settings for the replication task.",
                                "type": "string"
                            },
                            "ReplicationTaskStartDate": {
                                "description": "The date the replication task is scheduled to start.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "ReplicationTaskStats": {
                                "description": "The statistics for the task, including elapsed time, tables loaded, and table errors.",
                                "properties": {
                                    "ElapsedTimeMillis": {
                                        "description": "The elapsed time of the task, in milliseconds.",
                                        "type": "integer"
                                    },
                                    "FullLoadProgressPercent": {
                                        "description": "The percent complete for the full load migration task.",
                                        "type": "integer"
                                    },
                                    "TablesErrored": {
                                        "description": "The number of errors that have occurred during this task.",
                                        "type": "integer"
                                    },
                                    "TablesLoaded": {
                                        "description": "The number of tables loaded for this task.",
                                        "type": "integer"
                                    },
                                    "TablesLoading": {
                                        "description": "The number of tables currently loading for this task.",
                                        "type": "integer"
                                    },
                                    "TablesQueued": {
                                        "description": "The number of tables queued for this task.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "SourceEndpointArn": {
                                "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "The status of the replication task.",
                                "type": "string"
                            },
                            "StopReason": {
                                "description": "The reason the replication task was stopped.",
                                "type": "string"
                            },
                            "TableMappings": {
                                "description": "Table mappings specified in the task.",
                                "type": "string"
                            },
                            "TargetEndpointArn": {
                                "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "MongoDbSettings": {
                "description": "<p/>",
                "properties": {
                    "AuthMechanism": {
                        "description": "<p> The authentication mechanism you use to access the MongoDB source endpoint.</p> <p>Valid values: DEFAULT, MONGODB_CR, SCRAM_SHA_1 </p> <p>DEFAULT – For MongoDB version 2.x, use MONGODB_CR. For MongoDB version 3.x, use SCRAM_SHA_1. This attribute is not used when authType=No.</p>",
                        "enum": [
                            "default",
                            "mongodb_cr",
                            "scram_sha_1"
                        ],
                        "type": "string"
                    },
                    "AuthSource": {
                        "description": "<p> The MongoDB database name. This attribute is not used when <code>authType=NO</code>. </p> <p>The default is admin.</p>",
                        "type": "string"
                    },
                    "AuthType": {
                        "description": "<p> The authentication type you use to access the MongoDB source endpoint.</p> <p>Valid values: NO, PASSWORD </p> <p>When NO is selected, user name and password parameters are not used and can be empty. </p>",
                        "enum": [
                            "no",
                            "password"
                        ],
                        "type": "string"
                    },
                    "DatabaseName": {
                        "description": " The database name on the MongoDB source endpoint. ",
                        "type": "string"
                    },
                    "DocsToInvestigate": {
                        "description": "<p> Indicates the number of documents to preview to determine the document organization. Use this attribute when <code>NestingLevel</code> is set to ONE. </p> <p>Must be a positive value greater than 0. Default value is 1000.</p>",
                        "type": "string"
                    },
                    "ExtractDocId": {
                        "description": "<p> Specifies the document ID. Use this attribute when <code>NestingLevel</code> is set to NONE. </p> <p>Default value is false. </p>",
                        "type": "string"
                    },
                    "KmsKeyId": {
                        "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                        "type": "string"
                    },
                    "NestingLevel": {
                        "description": "<p> Specifies either document or table mode. </p> <p>Valid values: NONE, ONE</p> <p>Default value is NONE. Specify NONE to use document mode. Specify ONE to use table mode.</p>",
                        "enum": [
                            "none",
                            "one"
                        ],
                        "type": "string"
                    },
                    "Password": {
                        "description": " The password for the user account you use to access the MongoDB source endpoint. ",
                        "format": "password",
                        "type": "string"
                    },
                    "Port": {
                        "description": " The port value for the MongoDB source endpoint. ",
                        "type": "integer"
                    },
                    "ServerName": {
                        "description": " The name of the server on the MongoDB source endpoint. ",
                        "type": "string"
                    },
                    "Username": {
                        "description": "The user name you use to access the MongoDB source endpoint. ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "NestingLevelValue": {
                "enum": [
                    "none",
                    "one"
                ],
                "type": "string"
            },
            "OrderableReplicationInstance": {
                "description": "<p/>",
                "properties": {
                    "DefaultAllocatedStorage": {
                        "description": "The default amount of storage (in gigabytes) that is allocated for the replication instance.",
                        "type": "integer"
                    },
                    "EngineVersion": {
                        "description": "The version of the replication engine.",
                        "type": "string"
                    },
                    "IncludedAllocatedStorage": {
                        "description": "The amount of storage (in gigabytes) that is allocated for the replication instance.",
                        "type": "integer"
                    },
                    "MaxAllocatedStorage": {
                        "description": "The minimum amount of storage (in gigabytes) that can be allocated for the replication instance.",
                        "type": "integer"
                    },
                    "MinAllocatedStorage": {
                        "description": "The minimum amount of storage (in gigabytes) that can be allocated for the replication instance.",
                        "type": "integer"
                    },
                    "ReplicationInstanceClass": {
                        "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                        "type": "string"
                    },
                    "StorageType": {
                        "description": "The type of storage used by the replication instance.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OrderableReplicationInstanceList": {
                "items": {
                    "description": "<p/>",
                    "properties": {
                        "DefaultAllocatedStorage": {
                            "description": "The default amount of storage (in gigabytes) that is allocated for the replication instance.",
                            "type": "integer"
                        },
                        "EngineVersion": {
                            "description": "The version of the replication engine.",
                            "type": "string"
                        },
                        "IncludedAllocatedStorage": {
                            "description": "The amount of storage (in gigabytes) that is allocated for the replication instance.",
                            "type": "integer"
                        },
                        "MaxAllocatedStorage": {
                            "description": "The minimum amount of storage (in gigabytes) that can be allocated for the replication instance.",
                            "type": "integer"
                        },
                        "MinAllocatedStorage": {
                            "description": "The minimum amount of storage (in gigabytes) that can be allocated for the replication instance.",
                            "type": "integer"
                        },
                        "ReplicationInstanceClass": {
                            "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                            "type": "string"
                        },
                        "StorageType": {
                            "description": "The type of storage used by the replication instance.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "RebootReplicationInstanceMessage": {
                "properties": {
                    "ForceFailover": {
                        "description": "If this parameter is <code>true</code>, the reboot is conducted through a Multi-AZ failover. (If the instance isn't configured for Multi-AZ, then you can't specify <code>true</code>.)",
                        "type": "boolean"
                    },
                    "ReplicationInstanceArn": {
                        "description": "The Amazon Resource Name (ARN) of the replication instance.",
                        "type": "string"
                    }
                },
                "required": [
                    "ReplicationInstanceArn"
                ],
                "type": "object"
            },
            "RebootReplicationInstanceResponse": {
                "properties": {
                    "ReplicationInstance": {
                        "description": "The replication instance that is being rebooted. ",
                        "properties": {
                            "AllocatedStorage": {
                                "description": "The amount of storage (in gigabytes) that is allocated for the replication instance.",
                                "type": "integer"
                            },
                            "AutoMinorVersionUpgrade": {
                                "description": "Boolean value indicating if minor version upgrades will be automatically applied to the instance.",
                                "type": "boolean"
                            },
                            "AvailabilityZone": {
                                "description": "The Availability Zone for the instance.",
                                "type": "string"
                            },
                            "DnsNameServers": {
                                "description": "The DNS name servers for the replication instance.",
                                "type": "string"
                            },
                            "EngineVersion": {
                                "description": "The engine version number of the replication instance.",
                                "type": "string"
                            },
                            "FreeUntil": {
                                "description": " The expiration date of the free replication instance that is part of the Free DMS program. ",
                                "format": "date-time",
                                "type": "string"
                            },
                            "InstanceCreateTime": {
                                "description": "The time the replication instance was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "KmsKeyId": {
                                "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                                "type": "string"
                            },
                            "MultiAZ": {
                                "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. ",
                                "type": "boolean"
                            },
                            "PendingModifiedValues": {
                                "description": "The pending modification values.",
                                "properties": {
                                    "AllocatedStorage": {
                                        "description": "The amount of storage (in gigabytes) that is allocated for the replication instance.",
                                        "type": "integer"
                                    },
                                    "EngineVersion": {
                                        "description": "The engine version number of the replication instance.",
                                        "type": "string"
                                    },
                                    "MultiAZ": {
                                        "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. ",
                                        "type": "boolean"
                                    },
                                    "ReplicationInstanceClass": {
                                        "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "PreferredMaintenanceWindow": {
                                "description": "The maintenance window times for the replication instance.",
                                "type": "string"
                            },
                            "PubliclyAccessible": {
                                "description": " Specifies the accessibility options for the replication instance. A value of <code>true</code> represents an instance with a public IP address. A value of <code>false</code> represents an instance with a private IP address. The default value is <code>true</code>. ",
                                "type": "boolean"
                            },
                            "ReplicationInstanceArn": {
                                "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                "type": "string"
                            },
                            "ReplicationInstanceClass": {
                                "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                                "type": "string"
                            },
                            "ReplicationInstanceIdentifier": {
                                "description": "<p>The replication instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>myrepinstance</code> </p>",
                                "type": "string"
                            },
                            "ReplicationInstancePrivateIpAddress": {
                                "description": "The private IP address of the replication instance.",
                                "type": "string"
                            },
                            "ReplicationInstancePrivateIpAddresses": {
                                "description": "The private IP address of the replication instance.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "ReplicationInstancePublicIpAddress": {
                                "description": "The public IP address of the replication instance.",
                                "type": "string"
                            },
                            "ReplicationInstancePublicIpAddresses": {
                                "description": "The public IP address of the replication instance.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "ReplicationInstanceStatus": {
                                "description": "The status of the replication instance.",
                                "type": "string"
                            },
                            "ReplicationSubnetGroup": {
                                "description": "The subnet group for the replication instance.",
                                "properties": {
                                    "ReplicationSubnetGroupDescription": {
                                        "description": "The description of the replication subnet group.",
                                        "type": "string"
                                    },
                                    "ReplicationSubnetGroupIdentifier": {
                                        "description": "The identifier of the replication instance subnet group.",
                                        "type": "string"
                                    },
                                    "SubnetGroupStatus": {
                                        "description": "The status of the subnet group.",
                                        "type": "string"
                                    },
                                    "Subnets": {
                                        "description": "The subnets that are in the subnet group.",
                                        "items": {
                                            "description": "<p/>",
                                            "properties": {
                                                "SubnetAvailabilityZone": {
                                                    "description": "The Availability Zone of the subnet.",
                                                    "properties": {
                                                        "Name": {
                                                            "description": "The name of the availability zone.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "SubnetIdentifier": {
                                                    "description": "The subnet identifier.",
                                                    "type": "string"
                                                },
                                                "SubnetStatus": {
                                                    "description": "The status of the subnet.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "VpcId": {
                                        "description": "The ID of the VPC.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "SecondaryAvailabilityZone": {
                                "description": "The availability zone of the standby replication instance in a Multi-AZ deployment.",
                                "type": "string"
                            },
                            "VpcSecurityGroups": {
                                "description": "The VPC security group for the instance.",
                                "items": {
                                    "description": "<p/>",
                                    "properties": {
                                        "Status": {
                                            "description": "The status of the VPC security group.",
                                            "type": "string"
                                        },
                                        "VpcSecurityGroupId": {
                                            "description": "The VPC security group Id.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "RefreshSchemasMessage": {
                "description": "<p/>",
                "example": {
                    "EndpointArn": "",
                    "ReplicationInstanceArn": ""
                },
                "properties": {
                    "EndpointArn": {
                        "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                        "type": "string"
                    },
                    "ReplicationInstanceArn": {
                        "description": "The Amazon Resource Name (ARN) of the replication instance.",
                        "type": "string"
                    }
                },
                "required": [
                    "EndpointArn",
                    "ReplicationInstanceArn"
                ],
                "type": "object"
            },
            "RefreshSchemasResponse": {
                "description": "<p/>",
                "example": {
                    "RefreshSchemasStatus": {}
                },
                "properties": {
                    "RefreshSchemasStatus": {
                        "description": "The status of the refreshed schema.",
                        "properties": {
                            "EndpointArn": {
                                "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                "type": "string"
                            },
                            "LastFailureMessage": {
                                "description": "The last failure message for the schema.",
                                "type": "string"
                            },
                            "LastRefreshDate": {
                                "description": "The date the schema was last refreshed.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "ReplicationInstanceArn": {
                                "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "The status of the schema.",
                                "enum": [
                                    "successful",
                                    "failed",
                                    "refreshing"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "RefreshSchemasStatus": {
                "description": "<p/>",
                "properties": {
                    "EndpointArn": {
                        "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                        "type": "string"
                    },
                    "LastFailureMessage": {
                        "description": "The last failure message for the schema.",
                        "type": "string"
                    },
                    "LastRefreshDate": {
                        "description": "The date the schema was last refreshed.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "ReplicationInstanceArn": {
                        "description": "The Amazon Resource Name (ARN) of the replication instance.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the schema.",
                        "enum": [
                            "successful",
                            "failed",
                            "refreshing"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RefreshSchemasStatusTypeValue": {
                "enum": [
                    "successful",
                    "failed",
                    "refreshing"
                ],
                "type": "string"
            },
            "ReloadOptionValue": {
                "enum": [
                    "data-reload",
                    "validate-only"
                ],
                "type": "string"
            },
            "ReloadTablesMessage": {
                "properties": {
                    "ReloadOption": {
                        "description": "<p>Options for reload. Specify <code>data-reload</code> to reload the data and re-validate it if validation is enabled. Specify <code>validate-only</code> to re-validate the table. This option applies only when validation is enabled for the task. </p> <p>Valid values: data-reload, validate-only</p> <p>Default value is data-reload.</p>",
                        "enum": [
                            "data-reload",
                            "validate-only"
                        ],
                        "type": "string"
                    },
                    "ReplicationTaskArn": {
                        "description": "The Amazon Resource Name (ARN) of the replication task. ",
                        "type": "string"
                    },
                    "TablesToReload": {
                        "description": "The name and schema of the table to be reloaded. ",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "SchemaName": {
                                    "description": "The schema name of the table to be reloaded.",
                                    "type": "string"
                                },
                                "TableName": {
                                    "description": "The table name of the table to be reloaded.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "ReplicationTaskArn",
                    "TablesToReload"
                ],
                "type": "object"
            },
            "ReloadTablesResponse": {
                "properties": {
                    "ReplicationTaskArn": {
                        "description": "The Amazon Resource Name (ARN) of the replication task. ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RemoveTagsFromResourceMessage": {
                "description": "<p/>",
                "example": {
                    "ResourceArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E",
                    "TagKeys": []
                },
                "properties": {
                    "ResourceArn": {
                        "description": "&gt;The Amazon Resource Name (ARN) of the AWS DMS resource the tag is to be removed from.",
                        "type": "string"
                    },
                    "TagKeys": {
                        "description": "The tag key (name) of the tag to be removed.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "ResourceArn",
                    "TagKeys"
                ],
                "type": "object"
            },
            "RemoveTagsFromResourceResponse": {
                "description": "<p/>",
                "example": {},
                "properties": {},
                "type": "object"
            },
            "ReplicationEndpointTypeValue": {
                "enum": [
                    "source",
                    "target"
                ],
                "type": "string"
            },
            "ReplicationInstance": {
                "description": "<p/>",
                "properties": {
                    "AllocatedStorage": {
                        "description": "The amount of storage (in gigabytes) that is allocated for the replication instance.",
                        "type": "integer"
                    },
                    "AutoMinorVersionUpgrade": {
                        "description": "Boolean value indicating if minor version upgrades will be automatically applied to the instance.",
                        "type": "boolean"
                    },
                    "AvailabilityZone": {
                        "description": "The Availability Zone for the instance.",
                        "type": "string"
                    },
                    "DnsNameServers": {
                        "description": "The DNS name servers for the replication instance.",
                        "type": "string"
                    },
                    "EngineVersion": {
                        "description": "The engine version number of the replication instance.",
                        "type": "string"
                    },
                    "FreeUntil": {
                        "description": " The expiration date of the free replication instance that is part of the Free DMS program. ",
                        "format": "date-time",
                        "type": "string"
                    },
                    "InstanceCreateTime": {
                        "description": "The time the replication instance was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "KmsKeyId": {
                        "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                        "type": "string"
                    },
                    "MultiAZ": {
                        "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. ",
                        "type": "boolean"
                    },
                    "PendingModifiedValues": {
                        "description": "The pending modification values.",
                        "properties": {
                            "AllocatedStorage": {
                                "description": "The amount of storage (in gigabytes) that is allocated for the replication instance.",
                                "type": "integer"
                            },
                            "EngineVersion": {
                                "description": "The engine version number of the replication instance.",
                                "type": "string"
                            },
                            "MultiAZ": {
                                "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. ",
                                "type": "boolean"
                            },
                            "ReplicationInstanceClass": {
                                "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "PreferredMaintenanceWindow": {
                        "description": "The maintenance window times for the replication instance.",
                        "type": "string"
                    },
                    "PubliclyAccessible": {
                        "description": " Specifies the accessibility options for the replication instance. A value of <code>true</code> represents an instance with a public IP address. A value of <code>false</code> represents an instance with a private IP address. The default value is <code>true</code>. ",
                        "type": "boolean"
                    },
                    "ReplicationInstanceArn": {
                        "description": "The Amazon Resource Name (ARN) of the replication instance.",
                        "type": "string"
                    },
                    "ReplicationInstanceClass": {
                        "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                        "type": "string"
                    },
                    "ReplicationInstanceIdentifier": {
                        "description": "<p>The replication instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>myrepinstance</code> </p>",
                        "type": "string"
                    },
                    "ReplicationInstancePrivateIpAddress": {
                        "description": "The private IP address of the replication instance.",
                        "type": "string"
                    },
                    "ReplicationInstancePrivateIpAddresses": {
                        "description": "The private IP address of the replication instance.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "ReplicationInstancePublicIpAddress": {
                        "description": "The public IP address of the replication instance.",
                        "type": "string"
                    },
                    "ReplicationInstancePublicIpAddresses": {
                        "description": "The public IP address of the replication instance.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "ReplicationInstanceStatus": {
                        "description": "The status of the replication instance.",
                        "type": "string"
                    },
                    "ReplicationSubnetGroup": {
                        "description": "The subnet group for the replication instance.",
                        "properties": {
                            "ReplicationSubnetGroupDescription": {
                                "description": "The description of the replication subnet group.",
                                "type": "string"
                            },
                            "ReplicationSubnetGroupIdentifier": {
                                "description": "The identifier of the replication instance subnet group.",
                                "type": "string"
                            },
                            "SubnetGroupStatus": {
                                "description": "The status of the subnet group.",
                                "type": "string"
                            },
                            "Subnets": {
                                "description": "The subnets that are in the subnet group.",
                                "items": {
                                    "description": "<p/>",
                                    "properties": {
                                        "SubnetAvailabilityZone": {
                                            "description": "The Availability Zone of the subnet.",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the availability zone.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "SubnetIdentifier": {
                                            "description": "The subnet identifier.",
                                            "type": "string"
                                        },
                                        "SubnetStatus": {
                                            "description": "The status of the subnet.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "VpcId": {
                                "description": "The ID of the VPC.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "SecondaryAvailabilityZone": {
                        "description": "The availability zone of the standby replication instance in a Multi-AZ deployment.",
                        "type": "string"
                    },
                    "VpcSecurityGroups": {
                        "description": "The VPC security group for the instance.",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "Status": {
                                    "description": "The status of the VPC security group.",
                                    "type": "string"
                                },
                                "VpcSecurityGroupId": {
                                    "description": "The VPC security group Id.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ReplicationInstanceList": {
                "items": {
                    "description": "<p/>",
                    "properties": {
                        "AllocatedStorage": {
                            "description": "The amount of storage (in gigabytes) that is allocated for the replication instance.",
                            "type": "integer"
                        },
                        "AutoMinorVersionUpgrade": {
                            "description": "Boolean value indicating if minor version upgrades will be automatically applied to the instance.",
                            "type": "boolean"
                        },
                        "AvailabilityZone": {
                            "description": "The Availability Zone for the instance.",
                            "type": "string"
                        },
                        "DnsNameServers": {
                            "description": "The DNS name servers for the replication instance.",
                            "type": "string"
                        },
                        "EngineVersion": {
                            "description": "The engine version number of the replication instance.",
                            "type": "string"
                        },
                        "FreeUntil": {
                            "description": " The expiration date of the free replication instance that is part of the Free DMS program. ",
                            "format": "date-time",
                            "type": "string"
                        },
                        "InstanceCreateTime": {
                            "description": "The time the replication instance was created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "KmsKeyId": {
                            "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.",
                            "type": "string"
                        },
                        "MultiAZ": {
                            "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. ",
                            "type": "boolean"
                        },
                        "PendingModifiedValues": {
                            "description": "The pending modification values.",
                            "properties": {
                                "AllocatedStorage": {
                                    "description": "The amount of storage (in gigabytes) that is allocated for the replication instance.",
                                    "type": "integer"
                                },
                                "EngineVersion": {
                                    "description": "The engine version number of the replication instance.",
                                    "type": "string"
                                },
                                "MultiAZ": {
                                    "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. ",
                                    "type": "boolean"
                                },
                                "ReplicationInstanceClass": {
                                    "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "PreferredMaintenanceWindow": {
                            "description": "The maintenance window times for the replication instance.",
                            "type": "string"
                        },
                        "PubliclyAccessible": {
                            "description": " Specifies the accessibility options for the replication instance. A value of <code>true</code> represents an instance with a public IP address. A value of <code>false</code> represents an instance with a private IP address. The default value is <code>true</code>. ",
                            "type": "boolean"
                        },
                        "ReplicationInstanceArn": {
                            "description": "The Amazon Resource Name (ARN) of the replication instance.",
                            "type": "string"
                        },
                        "ReplicationInstanceClass": {
                            "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                            "type": "string"
                        },
                        "ReplicationInstanceIdentifier": {
                            "description": "<p>The replication instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>myrepinstance</code> </p>",
                            "type": "string"
                        },
                        "ReplicationInstancePrivateIpAddress": {
                            "description": "The private IP address of the replication instance.",
                            "type": "string"
                        },
                        "ReplicationInstancePrivateIpAddresses": {
                            "description": "The private IP address of the replication instance.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "ReplicationInstancePublicIpAddress": {
                            "description": "The public IP address of the replication instance.",
                            "type": "string"
                        },
                        "ReplicationInstancePublicIpAddresses": {
                            "description": "The public IP address of the replication instance.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "ReplicationInstanceStatus": {
                            "description": "The status of the replication instance.",
                            "type": "string"
                        },
                        "ReplicationSubnetGroup": {
                            "description": "The subnet group for the replication instance.",
                            "properties": {
                                "ReplicationSubnetGroupDescription": {
                                    "description": "The description of the replication subnet group.",
                                    "type": "string"
                                },
                                "ReplicationSubnetGroupIdentifier": {
                                    "description": "The identifier of the replication instance subnet group.",
                                    "type": "string"
                                },
                                "SubnetGroupStatus": {
                                    "description": "The status of the subnet group.",
                                    "type": "string"
                                },
                                "Subnets": {
                                    "description": "The subnets that are in the subnet group.",
                                    "items": {
                                        "description": "<p/>",
                                        "properties": {
                                            "SubnetAvailabilityZone": {
                                                "description": "The Availability Zone of the subnet.",
                                                "properties": {
                                                    "Name": {
                                                        "description": "The name of the availability zone.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "SubnetIdentifier": {
                                                "description": "The subnet identifier.",
                                                "type": "string"
                                            },
                                            "SubnetStatus": {
                                                "description": "The status of the subnet.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "VpcId": {
                                    "description": "The ID of the VPC.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "SecondaryAvailabilityZone": {
                            "description": "The availability zone of the standby replication instance in a Multi-AZ deployment.",
                            "type": "string"
                        },
                        "VpcSecurityGroups": {
                            "description": "The VPC security group for the instance.",
                            "items": {
                                "description": "<p/>",
                                "properties": {
                                    "Status": {
                                        "description": "The status of the VPC security group.",
                                        "type": "string"
                                    },
                                    "VpcSecurityGroupId": {
                                        "description": "The VPC security group Id.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ReplicationInstancePrivateIpAddressList": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "ReplicationInstancePublicIpAddressList": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "ReplicationInstanceTaskLog": {
                "description": "Contains metadata for a replication instance task log.",
                "properties": {
                    "ReplicationInstanceTaskLogSize": {
                        "description": "The size, in bytes, of the replication task log.",
                        "type": "integer"
                    },
                    "ReplicationTaskArn": {
                        "description": "The Amazon Resource Name (ARN) of the replication task.",
                        "type": "string"
                    },
                    "ReplicationTaskName": {
                        "description": "The name of the replication task.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReplicationInstanceTaskLogsList": {
                "items": {
                    "description": "Contains metadata for a replication instance task log.",
                    "properties": {
                        "ReplicationInstanceTaskLogSize": {
                            "description": "The size, in bytes, of the replication task log.",
                            "type": "integer"
                        },
                        "ReplicationTaskArn": {
                            "description": "The Amazon Resource Name (ARN) of the replication task.",
                            "type": "string"
                        },
                        "ReplicationTaskName": {
                            "description": "The name of the replication task.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ReplicationPendingModifiedValues": {
                "description": "<p/>",
                "properties": {
                    "AllocatedStorage": {
                        "description": "The amount of storage (in gigabytes) that is allocated for the replication instance.",
                        "type": "integer"
                    },
                    "EngineVersion": {
                        "description": "The engine version number of the replication instance.",
                        "type": "string"
                    },
                    "MultiAZ": {
                        "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. ",
                        "type": "boolean"
                    },
                    "ReplicationInstanceClass": {
                        "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReplicationSubnetGroup": {
                "description": "<p/>",
                "properties": {
                    "ReplicationSubnetGroupDescription": {
                        "description": "The description of the replication subnet group.",
                        "type": "string"
                    },
                    "ReplicationSubnetGroupIdentifier": {
                        "description": "The identifier of the replication instance subnet group.",
                        "type": "string"
                    },
                    "SubnetGroupStatus": {
                        "description": "The status of the subnet group.",
                        "type": "string"
                    },
                    "Subnets": {
                        "description": "The subnets that are in the subnet group.",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "SubnetAvailabilityZone": {
                                    "description": "The Availability Zone of the subnet.",
                                    "properties": {
                                        "Name": {
                                            "description": "The name of the availability zone.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "SubnetIdentifier": {
                                    "description": "The subnet identifier.",
                                    "type": "string"
                                },
                                "SubnetStatus": {
                                    "description": "The status of the subnet.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "VpcId": {
                        "description": "The ID of the VPC.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReplicationSubnetGroupDoesNotCoverEnoughAZs": {},
            "ReplicationSubnetGroups": {
                "items": {
                    "description": "<p/>",
                    "properties": {
                        "ReplicationSubnetGroupDescription": {
                            "description": "The description of the replication subnet group.",
                            "type": "string"
                        },
                        "ReplicationSubnetGroupIdentifier": {
                            "description": "The identifier of the replication instance subnet group.",
                            "type": "string"
                        },
                        "SubnetGroupStatus": {
                            "description": "The status of the subnet group.",
                            "type": "string"
                        },
                        "Subnets": {
                            "description": "The subnets that are in the subnet group.",
                            "items": {
                                "description": "<p/>",
                                "properties": {
                                    "SubnetAvailabilityZone": {
                                        "description": "The Availability Zone of the subnet.",
                                        "properties": {
                                            "Name": {
                                                "description": "The name of the availability zone.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "SubnetIdentifier": {
                                        "description": "The subnet identifier.",
                                        "type": "string"
                                    },
                                    "SubnetStatus": {
                                        "description": "The status of the subnet.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "VpcId": {
                            "description": "The ID of the VPC.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ReplicationTask": {
                "description": "<p/>",
                "properties": {
                    "CdcStartPosition": {
                        "description": "<p>Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p> The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position \"checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93\"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p>",
                        "type": "string"
                    },
                    "CdcStopPosition": {
                        "description": "<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:3018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 3018-02-09T12:12:12 “</p>",
                        "type": "string"
                    },
                    "LastFailureMessage": {
                        "description": "The last error (failure) message generated for the replication instance.",
                        "type": "string"
                    },
                    "MigrationType": {
                        "description": "The type of migration.",
                        "enum": [
                            "full-load",
                            "cdc",
                            "full-load-and-cdc"
                        ],
                        "type": "string"
                    },
                    "RecoveryCheckpoint": {
                        "description": "Indicates the last checkpoint that occurred during a change data capture (CDC) operation. You can provide this value to the <code>CdcStartPosition</code> parameter to start a CDC operation that begins at that checkpoint.",
                        "type": "string"
                    },
                    "ReplicationInstanceArn": {
                        "description": "The Amazon Resource Name (ARN) of the replication instance.",
                        "type": "string"
                    },
                    "ReplicationTaskArn": {
                        "description": "The Amazon Resource Name (ARN) of the replication task.",
                        "type": "string"
                    },
                    "ReplicationTaskCreationDate": {
                        "description": "The date the replication task was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "ReplicationTaskIdentifier": {
                        "description": "<p>The user-assigned replication task identifier or name.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>",
                        "type": "string"
                    },
                    "ReplicationTaskSettings": {
                        "description": "The settings for the replication task.",
                        "type": "string"
                    },
                    "ReplicationTaskStartDate": {
                        "description": "The date the replication task is scheduled to start.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "ReplicationTaskStats": {
                        "description": "The statistics for the task, including elapsed time, tables loaded, and table errors.",
                        "properties": {
                            "ElapsedTimeMillis": {
                                "description": "The elapsed time of the task, in milliseconds.",
                                "type": "integer"
                            },
                            "FullLoadProgressPercent": {
                                "description": "The percent complete for the full load migration task.",
                                "type": "integer"
                            },
                            "TablesErrored": {
                                "description": "The number of errors that have occurred during this task.",
                                "type": "integer"
                            },
                            "TablesLoaded": {
                                "description": "The number of tables loaded for this task.",
                                "type": "integer"
                            },
                            "TablesLoading": {
                                "description": "The number of tables currently loading for this task.",
                                "type": "integer"
                            },
                            "TablesQueued": {
                                "description": "The number of tables queued for this task.",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "SourceEndpointArn": {
                        "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the replication task.",
                        "type": "string"
                    },
                    "StopReason": {
                        "description": "The reason the replication task was stopped.",
                        "type": "string"
                    },
                    "TableMappings": {
                        "description": "Table mappings specified in the task.",
                        "type": "string"
                    },
                    "TargetEndpointArn": {
                        "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReplicationTaskAssessmentResult": {
                "description": " The task assessment report in JSON format. ",
                "properties": {
                    "AssessmentResults": {
                        "description": " The task assessment results in JSON format. ",
                        "type": "string"
                    },
                    "AssessmentResultsFile": {
                        "description": " The file containing the results of the task assessment. ",
                        "type": "string"
                    },
                    "AssessmentStatus": {
                        "description": " The status of the task assessment. ",
                        "type": "string"
                    },
                    "ReplicationTaskArn": {
                        "description": "The Amazon Resource Name (ARN) of the replication task. ",
                        "type": "string"
                    },
                    "ReplicationTaskIdentifier": {
                        "description": " The replication task identifier of the task on which the task assessment was run. ",
                        "type": "string"
                    },
                    "ReplicationTaskLastAssessmentDate": {
                        "description": "The date the task assessment was completed. ",
                        "format": "date-time",
                        "type": "string"
                    },
                    "S3ObjectUrl": {
                        "description": " The URL of the S3 object containing the task assessment results. ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReplicationTaskAssessmentResultList": {
                "items": {
                    "description": " The task assessment report in JSON format. ",
                    "properties": {
                        "AssessmentResults": {
                            "description": " The task assessment results in JSON format. ",
                            "type": "string"
                        },
                        "AssessmentResultsFile": {
                            "description": " The file containing the results of the task assessment. ",
                            "type": "string"
                        },
                        "AssessmentStatus": {
                            "description": " The status of the task assessment. ",
                            "type": "string"
                        },
                        "ReplicationTaskArn": {
                            "description": "The Amazon Resource Name (ARN) of the replication task. ",
                            "type": "string"
                        },
                        "ReplicationTaskIdentifier": {
                            "description": " The replication task identifier of the task on which the task assessment was run. ",
                            "type": "string"
                        },
                        "ReplicationTaskLastAssessmentDate": {
                            "description": "The date the task assessment was completed. ",
                            "format": "date-time",
                            "type": "string"
                        },
                        "S3ObjectUrl": {
                            "description": " The URL of the S3 object containing the task assessment results. ",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ReplicationTaskList": {
                "items": {
                    "description": "<p/>",
                    "properties": {
                        "CdcStartPosition": {
                            "description": "<p>Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p> The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position \"checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93\"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p>",
                            "type": "string"
                        },
                        "CdcStopPosition": {
                            "description": "<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:3018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 3018-02-09T12:12:12 “</p>",
                            "type": "string"
                        },
                        "LastFailureMessage": {
                            "description": "The last error (failure) message generated for the replication instance.",
                            "type": "string"
                        },
                        "MigrationType": {
                            "description": "The type of migration.",
                            "enum": [
                                "full-load",
                                "cdc",
                                "full-load-and-cdc"
                            ],
                            "type": "string"
                        },
                        "RecoveryCheckpoint": {
                            "description": "Indicates the last checkpoint that occurred during a change data capture (CDC) operation. You can provide this value to the <code>CdcStartPosition</code> parameter to start a CDC operation that begins at that checkpoint.",
                            "type": "string"
                        },
                        "ReplicationInstanceArn": {
                            "description": "The Amazon Resource Name (ARN) of the replication instance.",
                            "type": "string"
                        },
                        "ReplicationTaskArn": {
                            "description": "The Amazon Resource Name (ARN) of the replication task.",
                            "type": "string"
                        },
                        "ReplicationTaskCreationDate": {
                            "description": "The date the replication task was created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "ReplicationTaskIdentifier": {
                            "description": "<p>The user-assigned replication task identifier or name.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>",
                            "type": "string"
                        },
                        "ReplicationTaskSettings": {
                            "description": "The settings for the replication task.",
                            "type": "string"
                        },
                        "ReplicationTaskStartDate": {
                            "description": "The date the replication task is scheduled to start.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "ReplicationTaskStats": {
                            "description": "The statistics for the task, including elapsed time, tables loaded, and table errors.",
                            "properties": {
                                "ElapsedTimeMillis": {
                                    "description": "The elapsed time of the task, in milliseconds.",
                                    "type": "integer"
                                },
                                "FullLoadProgressPercent": {
                                    "description": "The percent complete for the full load migration task.",
                                    "type": "integer"
                                },
                                "TablesErrored": {
                                    "description": "The number of errors that have occurred during this task.",
                                    "type": "integer"
                                },
                                "TablesLoaded": {
                                    "description": "The number of tables loaded for this task.",
                                    "type": "integer"
                                },
                                "TablesLoading": {
                                    "description": "The number of tables currently loading for this task.",
                                    "type": "integer"
                                },
                                "TablesQueued": {
                                    "description": "The number of tables queued for this task.",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "SourceEndpointArn": {
                            "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                            "type": "string"
                        },
                        "Status": {
                            "description": "The status of the replication task.",
                            "type": "string"
                        },
                        "StopReason": {
                            "description": "The reason the replication task was stopped.",
                            "type": "string"
                        },
                        "TableMappings": {
                            "description": "Table mappings specified in the task.",
                            "type": "string"
                        },
                        "TargetEndpointArn": {
                            "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ReplicationTaskStats": {
                "description": "<p/>",
                "properties": {
                    "ElapsedTimeMillis": {
                        "description": "The elapsed time of the task, in milliseconds.",
                        "type": "integer"
                    },
                    "FullLoadProgressPercent": {
                        "description": "The percent complete for the full load migration task.",
                        "type": "integer"
                    },
                    "TablesErrored": {
                        "description": "The number of errors that have occurred during this task.",
                        "type": "integer"
                    },
                    "TablesLoaded": {
                        "description": "The number of tables loaded for this task.",
                        "type": "integer"
                    },
                    "TablesLoading": {
                        "description": "The number of tables currently loading for this task.",
                        "type": "integer"
                    },
                    "TablesQueued": {
                        "description": "The number of tables queued for this task.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ResourceAlreadyExistsFault": {},
            "ResourceNotFoundFault": {},
            "ResourceQuotaExceededFault": {},
            "S3Settings": {
                "description": "<p/>",
                "properties": {
                    "BucketFolder": {
                        "description": " An optional parameter to set a folder name in the S3 bucket. If provided, tables are created in the path &lt;bucketFolder&gt;/&lt;schema_name&gt;/&lt;table_name&gt;/. If this parameter is not specified, then the path used is &lt;schema_name&gt;/&lt;table_name&gt;/. ",
                        "type": "string"
                    },
                    "BucketName": {
                        "description": " The name of the S3 bucket. ",
                        "type": "string"
                    },
                    "CompressionType": {
                        "description": " An optional parameter to use GZIP to compress the target files. Set to GZIP to compress the target files. Set to NONE (the default) or do not use to leave the files uncompressed. ",
                        "enum": [
                            "none",
                            "gzip"
                        ],
                        "type": "string"
                    },
                    "CsvDelimiter": {
                        "description": " The delimiter used to separate columns in the source files. The default is a comma. ",
                        "type": "string"
                    },
                    "CsvRowDelimiter": {
                        "description": " The delimiter used to separate rows in the source files. The default is a carriage return (\\n). ",
                        "type": "string"
                    },
                    "ExternalTableDefinition": {
                        "description": " The external table definition. ",
                        "type": "string"
                    },
                    "ServiceAccessRoleArn": {
                        "description": " The Amazon Resource Name (ARN) used by the service access IAM role. ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SNSInvalidTopicFault": {},
            "SNSNoAuthorizationFault": {},
            "SchemaList": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "SecretString": {
                "format": "password",
                "type": "string"
            },
            "SourceIdsList": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "SourceType": {
                "enum": [
                    "replication-instance"
                ],
                "type": "string"
            },
            "StartReplicationTaskAssessmentMessage": {
                "description": "<p/>",
                "properties": {
                    "ReplicationTaskArn": {
                        "description": " The Amazon Resource Name (ARN) of the replication task. ",
                        "type": "string"
                    }
                },
                "required": [
                    "ReplicationTaskArn"
                ],
                "type": "object"
            },
            "StartReplicationTaskAssessmentResponse": {
                "description": "<p/>",
                "properties": {
                    "ReplicationTask": {
                        "description": " The assessed replication task. ",
                        "properties": {
                            "CdcStartPosition": {
                                "description": "<p>Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p> The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position \"checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93\"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p>",
                                "type": "string"
                            },
                            "CdcStopPosition": {
                                "description": "<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:3018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 3018-02-09T12:12:12 “</p>",
                                "type": "string"
                            },
                            "LastFailureMessage": {
                                "description": "The last error (failure) message generated for the replication instance.",
                                "type": "string"
                            },
                            "MigrationType": {
                                "description": "The type of migration.",
                                "enum": [
                                    "full-load",
                                    "cdc",
                                    "full-load-and-cdc"
                                ],
                                "type": "string"
                            },
                            "RecoveryCheckpoint": {
                                "description": "Indicates the last checkpoint that occurred during a change data capture (CDC) operation. You can provide this value to the <code>CdcStartPosition</code> parameter to start a CDC operation that begins at that checkpoint.",
                                "type": "string"
                            },
                            "ReplicationInstanceArn": {
                                "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                "type": "string"
                            },
                            "ReplicationTaskArn": {
                                "description": "The Amazon Resource Name (ARN) of the replication task.",
                                "type": "string"
                            },
                            "ReplicationTaskCreationDate": {
                                "description": "The date the replication task was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "ReplicationTaskIdentifier": {
                                "description": "<p>The user-assigned replication task identifier or name.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>",
                                "type": "string"
                            },
                            "ReplicationTaskSettings": {
                                "description": "The settings for the replication task.",
                                "type": "string"
                            },
                            "ReplicationTaskStartDate": {
                                "description": "The date the replication task is scheduled to start.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "ReplicationTaskStats": {
                                "description": "The statistics for the task, including elapsed time, tables loaded, and table errors.",
                                "properties": {
                                    "ElapsedTimeMillis": {
                                        "description": "The elapsed time of the task, in milliseconds.",
                                        "type": "integer"
                                    },
                                    "FullLoadProgressPercent": {
                                        "description": "The percent complete for the full load migration task.",
                                        "type": "integer"
                                    },
                                    "TablesErrored": {
                                        "description": "The number of errors that have occurred during this task.",
                                        "type": "integer"
                                    },
                                    "TablesLoaded": {
                                        "description": "The number of tables loaded for this task.",
                                        "type": "integer"
                                    },
                                    "TablesLoading": {
                                        "description": "The number of tables currently loading for this task.",
                                        "type": "integer"
                                    },
                                    "TablesQueued": {
                                        "description": "The number of tables queued for this task.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "SourceEndpointArn": {
                                "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "The status of the replication task.",
                                "type": "string"
                            },
                            "StopReason": {
                                "description": "The reason the replication task was stopped.",
                                "type": "string"
                            },
                            "TableMappings": {
                                "description": "Table mappings specified in the task.",
                                "type": "string"
                            },
                            "TargetEndpointArn": {
                                "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "StartReplicationTaskMessage": {
                "description": "<p/>",
                "example": {
                    "CdcStartTime": "2016-12-14T13:33:20Z",
                    "ReplicationTaskArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
                    "StartReplicationTaskType": "start-replication"
                },
                "properties": {
                    "CdcStartPosition": {
                        "description": "<p>Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p> The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position \"checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93\"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p>",
                        "type": "string"
                    },
                    "CdcStartTime": {
                        "description": "<p>Indicates the start time for a change data capture (CDC) operation. Use either CdcStartTime or CdcStartPosition to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p>Timestamp Example: --cdc-start-time “2018-03-08T12:12:12”</p>",
                        "format": "date-time",
                        "type": "string"
                    },
                    "CdcStopPosition": {
                        "description": "<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:3018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 3018-02-09T12:12:12 “</p>",
                        "type": "string"
                    },
                    "ReplicationTaskArn": {
                        "description": "The Amazon Resource Name (ARN) of the replication task to be started.",
                        "type": "string"
                    },
                    "StartReplicationTaskType": {
                        "description": "The type of replication task.",
                        "enum": [
                            "start-replication",
                            "resume-processing",
                            "reload-target"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "ReplicationTaskArn",
                    "StartReplicationTaskType"
                ],
                "type": "object"
            },
            "StartReplicationTaskResponse": {
                "description": "<p/>",
                "example": {
                    "ReplicationTask": {
                        "MigrationType": "full-load",
                        "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
                        "ReplicationTaskArn": "arn:aws:dms:us-east-1:123456789012:task:OEAMB3NXSTZ6LFYZFEPPBBXPYM",
                        "ReplicationTaskCreationDate": "2016-12-14T18:25:43Z",
                        "ReplicationTaskIdentifier": "task1",
                        "ReplicationTaskSettings": "{\"TargetMetadata\":{\"TargetSchema\":\"\",\"SupportLobs\":true,\"FullLobMode\":true,\"LobChunkSize\":64,\"LimitedSizeLobMode\":false,\"LobMaxSize\":0},\"FullLoadSettings\":{\"FullLoadEnabled\":true,\"ApplyChangesEnabled\":false,\"TargetTablePrepMode\":\"DROP_AND_CREATE\",\"CreatePkAfterFullLoad\":false,\"StopTaskCachedChangesApplied\":false,\"StopTaskCachedChangesNotApplied\":false,\"ResumeEnabled\":false,\"ResumeMinTableSize\":100000,\"ResumeOnlyClusteredPKTables\":true,\"MaxFullLoadSubTasks\":8,\"TransactionConsistencyTimeout\":600,\"CommitRate\":10000},\"Logging\":{\"EnableLogging\":false}}",
                        "SourceEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ZW5UAN6P4E77EC7YWHK4RZZ3BE",
                        "Status": "creating",
                        "TableMappings": "file://mappingfile.json",
                        "TargetEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E"
                    }
                },
                "properties": {
                    "ReplicationTask": {
                        "description": "The replication task started.",
                        "properties": {
                            "CdcStartPosition": {
                                "description": "<p>Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p> The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position \"checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93\"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p>",
                                "type": "string"
                            },
                            "CdcStopPosition": {
                                "description": "<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:3018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 3018-02-09T12:12:12 “</p>",
                                "type": "string"
                            },
                            "LastFailureMessage": {
                                "description": "The last error (failure) message generated for the replication instance.",
                                "type": "string"
                            },
                            "MigrationType": {
                                "description": "The type of migration.",
                                "enum": [
                                    "full-load",
                                    "cdc",
                                    "full-load-and-cdc"
                                ],
                                "type": "string"
                            },
                            "RecoveryCheckpoint": {
                                "description": "Indicates the last checkpoint that occurred during a change data capture (CDC) operation. You can provide this value to the <code>CdcStartPosition</code> parameter to start a CDC operation that begins at that checkpoint.",
                                "type": "string"
                            },
                            "ReplicationInstanceArn": {
                                "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                "type": "string"
                            },
                            "ReplicationTaskArn": {
                                "description": "The Amazon Resource Name (ARN) of the replication task.",
                                "type": "string"
                            },
                            "ReplicationTaskCreationDate": {
                                "description": "The date the replication task was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "ReplicationTaskIdentifier": {
                                "description": "<p>The user-assigned replication task identifier or name.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>",
                                "type": "string"
                            },
                            "ReplicationTaskSettings": {
                                "description": "The settings for the replication task.",
                                "type": "string"
                            },
                            "ReplicationTaskStartDate": {
                                "description": "The date the replication task is scheduled to start.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "ReplicationTaskStats": {
                                "description": "The statistics for the task, including elapsed time, tables loaded, and table errors.",
                                "properties": {
                                    "ElapsedTimeMillis": {
                                        "description": "The elapsed time of the task, in milliseconds.",
                                        "type": "integer"
                                    },
                                    "FullLoadProgressPercent": {
                                        "description": "The percent complete for the full load migration task.",
                                        "type": "integer"
                                    },
                                    "TablesErrored": {
                                        "description": "The number of errors that have occurred during this task.",
                                        "type": "integer"
                                    },
                                    "TablesLoaded": {
                                        "description": "The number of tables loaded for this task.",
                                        "type": "integer"
                                    },
                                    "TablesLoading": {
                                        "description": "The number of tables currently loading for this task.",
                                        "type": "integer"
                                    },
                                    "TablesQueued": {
                                        "description": "The number of tables queued for this task.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "SourceEndpointArn": {
                                "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "The status of the replication task.",
                                "type": "string"
                            },
                            "StopReason": {
                                "description": "The reason the replication task was stopped.",
                                "type": "string"
                            },
                            "TableMappings": {
                                "description": "Table mappings specified in the task.",
                                "type": "string"
                            },
                            "TargetEndpointArn": {
                                "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "StartReplicationTaskTypeValue": {
                "enum": [
                    "start-replication",
                    "resume-processing",
                    "reload-target"
                ],
                "type": "string"
            },
            "StopReplicationTaskMessage": {
                "description": "<p/>",
                "example": {
                    "ReplicationTaskArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E"
                },
                "properties": {
                    "ReplicationTaskArn": {
                        "description": "The Amazon Resource Name(ARN) of the replication task to be stopped.",
                        "type": "string"
                    }
                },
                "required": [
                    "ReplicationTaskArn"
                ],
                "type": "object"
            },
            "StopReplicationTaskResponse": {
                "description": "<p/>",
                "example": {
                    "ReplicationTask": {
                        "MigrationType": "full-load",
                        "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
                        "ReplicationTaskArn": "arn:aws:dms:us-east-1:123456789012:task:OEAMB3NXSTZ6LFYZFEPPBBXPYM",
                        "ReplicationTaskCreationDate": "2016-12-14T18:25:43Z",
                        "ReplicationTaskIdentifier": "task1",
                        "ReplicationTaskSettings": "{\"TargetMetadata\":{\"TargetSchema\":\"\",\"SupportLobs\":true,\"FullLobMode\":true,\"LobChunkSize\":64,\"LimitedSizeLobMode\":false,\"LobMaxSize\":0},\"FullLoadSettings\":{\"FullLoadEnabled\":true,\"ApplyChangesEnabled\":false,\"TargetTablePrepMode\":\"DROP_AND_CREATE\",\"CreatePkAfterFullLoad\":false,\"StopTaskCachedChangesApplied\":false,\"StopTaskCachedChangesNotApplied\":false,\"ResumeEnabled\":false,\"ResumeMinTableSize\":100000,\"ResumeOnlyClusteredPKTables\":true,\"MaxFullLoadSubTasks\":8,\"TransactionConsistencyTimeout\":600,\"CommitRate\":10000},\"Logging\":{\"EnableLogging\":false}}",
                        "SourceEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ZW5UAN6P4E77EC7YWHK4RZZ3BE",
                        "Status": "creating",
                        "TableMappings": "file://mappingfile.json",
                        "TargetEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E"
                    }
                },
                "properties": {
                    "ReplicationTask": {
                        "description": "The replication task stopped.",
                        "properties": {
                            "CdcStartPosition": {
                                "description": "<p>Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p> The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position \"checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93\"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p>",
                                "type": "string"
                            },
                            "CdcStopPosition": {
                                "description": "<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:3018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 3018-02-09T12:12:12 “</p>",
                                "type": "string"
                            },
                            "LastFailureMessage": {
                                "description": "The last error (failure) message generated for the replication instance.",
                                "type": "string"
                            },
                            "MigrationType": {
                                "description": "The type of migration.",
                                "enum": [
                                    "full-load",
                                    "cdc",
                                    "full-load-and-cdc"
                                ],
                                "type": "string"
                            },
                            "RecoveryCheckpoint": {
                                "description": "Indicates the last checkpoint that occurred during a change data capture (CDC) operation. You can provide this value to the <code>CdcStartPosition</code> parameter to start a CDC operation that begins at that checkpoint.",
                                "type": "string"
                            },
                            "ReplicationInstanceArn": {
                                "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                "type": "string"
                            },
                            "ReplicationTaskArn": {
                                "description": "The Amazon Resource Name (ARN) of the replication task.",
                                "type": "string"
                            },
                            "ReplicationTaskCreationDate": {
                                "description": "The date the replication task was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "ReplicationTaskIdentifier": {
                                "description": "<p>The user-assigned replication task identifier or name.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>",
                                "type": "string"
                            },
                            "ReplicationTaskSettings": {
                                "description": "The settings for the replication task.",
                                "type": "string"
                            },
                            "ReplicationTaskStartDate": {
                                "description": "The date the replication task is scheduled to start.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "ReplicationTaskStats": {
                                "description": "The statistics for the task, including elapsed time, tables loaded, and table errors.",
                                "properties": {
                                    "ElapsedTimeMillis": {
                                        "description": "The elapsed time of the task, in milliseconds.",
                                        "type": "integer"
                                    },
                                    "FullLoadProgressPercent": {
                                        "description": "The percent complete for the full load migration task.",
                                        "type": "integer"
                                    },
                                    "TablesErrored": {
                                        "description": "The number of errors that have occurred during this task.",
                                        "type": "integer"
                                    },
                                    "TablesLoaded": {
                                        "description": "The number of tables loaded for this task.",
                                        "type": "integer"
                                    },
                                    "TablesLoading": {
                                        "description": "The number of tables currently loading for this task.",
                                        "type": "integer"
                                    },
                                    "TablesQueued": {
                                        "description": "The number of tables queued for this task.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "SourceEndpointArn": {
                                "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "The status of the replication task.",
                                "type": "string"
                            },
                            "StopReason": {
                                "description": "The reason the replication task was stopped.",
                                "type": "string"
                            },
                            "TableMappings": {
                                "description": "Table mappings specified in the task.",
                                "type": "string"
                            },
                            "TargetEndpointArn": {
                                "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "StorageQuotaExceededFault": {},
            "String": {
                "type": "string"
            },
            "Subnet": {
                "description": "<p/>",
                "properties": {
                    "SubnetAvailabilityZone": {
                        "description": "The Availability Zone of the subnet.",
                        "properties": {
                            "Name": {
                                "description": "The name of the availability zone.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "SubnetIdentifier": {
                        "description": "The subnet identifier.",
                        "type": "string"
                    },
                    "SubnetStatus": {
                        "description": "The status of the subnet.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SubnetAlreadyInUse": {},
            "SubnetIdentifierList": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "SubnetList": {
                "items": {
                    "description": "<p/>",
                    "properties": {
                        "SubnetAvailabilityZone": {
                            "description": "The Availability Zone of the subnet.",
                            "properties": {
                                "Name": {
                                    "description": "The name of the availability zone.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "SubnetIdentifier": {
                            "description": "The subnet identifier.",
                            "type": "string"
                        },
                        "SubnetStatus": {
                            "description": "The status of the subnet.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "SupportedEndpointType": {
                "description": "<p/>",
                "properties": {
                    "EndpointType": {
                        "description": "The type of endpoint.",
                        "enum": [
                            "source",
                            "target"
                        ],
                        "type": "string"
                    },
                    "EngineDisplayName": {
                        "description": "The expanded name for the engine name. For example, if the <code>EngineName</code> parameter is \"aurora,\" this value would be \"Amazon Aurora MySQL.\"",
                        "type": "string"
                    },
                    "EngineName": {
                        "description": "The database engine name. Valid values, depending on the EndPointType, include mysql, oracle, postgres, mariadb, aurora, aurora-postgresql, redshift, s3, db2, azuredb, sybase, sybase, dynamodb, mongodb, and sqlserver.",
                        "type": "string"
                    },
                    "SupportsCDC": {
                        "description": "Indicates if Change Data Capture (CDC) is supported.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SupportedEndpointTypeList": {
                "items": {
                    "description": "<p/>",
                    "properties": {
                        "EndpointType": {
                            "description": "The type of endpoint.",
                            "enum": [
                                "source",
                                "target"
                            ],
                            "type": "string"
                        },
                        "EngineDisplayName": {
                            "description": "The expanded name for the engine name. For example, if the <code>EngineName</code> parameter is \"aurora,\" this value would be \"Amazon Aurora MySQL.\"",
                            "type": "string"
                        },
                        "EngineName": {
                            "description": "The database engine name. Valid values, depending on the EndPointType, include mysql, oracle, postgres, mariadb, aurora, aurora-postgresql, redshift, s3, db2, azuredb, sybase, sybase, dynamodb, mongodb, and sqlserver.",
                            "type": "string"
                        },
                        "SupportsCDC": {
                            "description": "Indicates if Change Data Capture (CDC) is supported.",
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "TStamp": {
                "format": "date-time",
                "type": "string"
            },
            "TableListToReload": {
                "items": {
                    "description": "<p/>",
                    "properties": {
                        "SchemaName": {
                            "description": "The schema name of the table to be reloaded.",
                            "type": "string"
                        },
                        "TableName": {
                            "description": "The table name of the table to be reloaded.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "TableStatistics": {
                "description": "<p/>",
                "properties": {
                    "Ddls": {
                        "description": "The Data Definition Language (DDL) used to build and modify the structure of your tables.",
                        "type": "integer"
                    },
                    "Deletes": {
                        "description": "The number of delete actions performed on a table.",
                        "type": "integer"
                    },
                    "FullLoadCondtnlChkFailedRows": {
                        "description": "The number of rows that failed conditional checks during the Full Load operation (valid only for DynamoDB as a target migrations).",
                        "type": "integer"
                    },
                    "FullLoadErrorRows": {
                        "description": "The number of rows that failed to load during the Full Load operation (valid only for DynamoDB as a target migrations).",
                        "type": "integer"
                    },
                    "FullLoadRows": {
                        "description": "The number of rows added during the Full Load operation.",
                        "type": "integer"
                    },
                    "Inserts": {
                        "description": "The number of insert actions performed on a table.",
                        "type": "integer"
                    },
                    "LastUpdateTime": {
                        "description": "The last time the table was updated.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "SchemaName": {
                        "description": "The schema name.",
                        "type": "string"
                    },
                    "TableName": {
                        "description": "The name of the table.",
                        "type": "string"
                    },
                    "TableState": {
                        "description": "<p>The state of the tables described.</p> <p>Valid states: Table does not exist | Before load | Full load | Table completed | Table cancelled | Table error | Table all | Table updates | Table is being reloaded</p>",
                        "type": "string"
                    },
                    "Updates": {
                        "description": "The number of update actions performed on a table.",
                        "type": "integer"
                    },
                    "ValidationFailedRecords": {
                        "description": "The number of records that failed validation.",
                        "type": "integer"
                    },
                    "ValidationPendingRecords": {
                        "description": "The number of records that have yet to be validated.",
                        "type": "integer"
                    },
                    "ValidationState": {
                        "description": "<p>The validation state of the table.</p> <p>The parameter can have the following values</p> <ul> <li> <p>Not enabled—Validation is not enabled for the table in the migration task.</p> </li> <li> <p>Pending records—Some records in the table are waiting for validation.</p> </li> <li> <p>Mismatched records—Some records in the table do not match between the source and target.</p> </li> <li> <p>Suspended records—Some records in the table could not be validated.</p> </li> <li> <p>No primary key—The table could not be validated because it had no primary key.</p> </li> <li> <p>Table error—The table was not validated because it was in an error state and some data was not migrated.</p> </li> <li> <p>Validated—All rows in the table were validated. If the table is updated, the status can change from Validated.</p> </li> <li> <p>Error—The table could not be validated because of an unexpected error.</p> </li> </ul>",
                        "type": "string"
                    },
                    "ValidationStateDetails": {
                        "description": "Additional details about the state of validation.",
                        "type": "string"
                    },
                    "ValidationSuspendedRecords": {
                        "description": "The number of records that could not be validated.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "TableStatisticsList": {
                "items": {
                    "description": "<p/>",
                    "properties": {
                        "Ddls": {
                            "description": "The Data Definition Language (DDL) used to build and modify the structure of your tables.",
                            "type": "integer"
                        },
                        "Deletes": {
                            "description": "The number of delete actions performed on a table.",
                            "type": "integer"
                        },
                        "FullLoadCondtnlChkFailedRows": {
                            "description": "The number of rows that failed conditional checks during the Full Load operation (valid only for DynamoDB as a target migrations).",
                            "type": "integer"
                        },
                        "FullLoadErrorRows": {
                            "description": "The number of rows that failed to load during the Full Load operation (valid only for DynamoDB as a target migrations).",
                            "type": "integer"
                        },
                        "FullLoadRows": {
                            "description": "The number of rows added during the Full Load operation.",
                            "type": "integer"
                        },
                        "Inserts": {
                            "description": "The number of insert actions performed on a table.",
                            "type": "integer"
                        },
                        "LastUpdateTime": {
                            "description": "The last time the table was updated.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "SchemaName": {
                            "description": "The schema name.",
                            "type": "string"
                        },
                        "TableName": {
                            "description": "The name of the table.",
                            "type": "string"
                        },
                        "TableState": {
                            "description": "<p>The state of the tables described.</p> <p>Valid states: Table does not exist | Before load | Full load | Table completed | Table cancelled | Table error | Table all | Table updates | Table is being reloaded</p>",
                            "type": "string"
                        },
                        "Updates": {
                            "description": "The number of update actions performed on a table.",
                            "type": "integer"
                        },
                        "ValidationFailedRecords": {
                            "description": "The number of records that failed validation.",
                            "type": "integer"
                        },
                        "ValidationPendingRecords": {
                            "description": "The number of records that have yet to be validated.",
                            "type": "integer"
                        },
                        "ValidationState": {
                            "description": "<p>The validation state of the table.</p> <p>The parameter can have the following values</p> <ul> <li> <p>Not enabled—Validation is not enabled for the table in the migration task.</p> </li> <li> <p>Pending records—Some records in the table are waiting for validation.</p> </li> <li> <p>Mismatched records—Some records in the table do not match between the source and target.</p> </li> <li> <p>Suspended records—Some records in the table could not be validated.</p> </li> <li> <p>No primary key—The table could not be validated because it had no primary key.</p> </li> <li> <p>Table error—The table was not validated because it was in an error state and some data was not migrated.</p> </li> <li> <p>Validated—All rows in the table were validated. If the table is updated, the status can change from Validated.</p> </li> <li> <p>Error—The table could not be validated because of an unexpected error.</p> </li> </ul>",
                            "type": "string"
                        },
                        "ValidationStateDetails": {
                            "description": "Additional details about the state of validation.",
                            "type": "string"
                        },
                        "ValidationSuspendedRecords": {
                            "description": "The number of records that could not be validated.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "TableToReload": {
                "description": "<p/>",
                "properties": {
                    "SchemaName": {
                        "description": "The schema name of the table to be reloaded.",
                        "type": "string"
                    },
                    "TableName": {
                        "description": "The table name of the table to be reloaded.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Tag": {
                "description": "<p/>",
                "properties": {
                    "Key": {
                        "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                        "type": "string"
                    },
                    "Value": {
                        "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TagList": {
                "items": {
                    "description": "<p/>",
                    "properties": {
                        "Key": {
                            "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                            "type": "string"
                        },
                        "Value": {
                            "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "TestConnectionMessage": {
                "description": "<p/>",
                "example": {
                    "EndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:RAAR3R22XSH46S3PWLC3NJAWKM",
                    "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ"
                },
                "properties": {
                    "EndpointArn": {
                        "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                        "type": "string"
                    },
                    "ReplicationInstanceArn": {
                        "description": "The Amazon Resource Name (ARN) of the replication instance.",
                        "type": "string"
                    }
                },
                "required": [
                    "ReplicationInstanceArn",
                    "EndpointArn"
                ],
                "type": "object"
            },
            "TestConnectionResponse": {
                "description": "<p/>",
                "example": {
                    "Connection": {}
                },
                "properties": {
                    "Connection": {
                        "description": "The connection tested.",
                        "properties": {
                            "EndpointArn": {
                                "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.",
                                "type": "string"
                            },
                            "EndpointIdentifier": {
                                "description": "The identifier of the endpoint. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.",
                                "type": "string"
                            },
                            "LastFailureMessage": {
                                "description": "The error message when the connection last failed.",
                                "type": "string"
                            },
                            "ReplicationInstanceArn": {
                                "description": "The Amazon Resource Name (ARN) of the replication instance.",
                                "type": "string"
                            },
                            "ReplicationInstanceIdentifier": {
                                "description": "The replication instance identifier. This parameter is stored as a lowercase string.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "The connection status.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UpgradeDependencyFailureFault": {},
            "VpcSecurityGroupIdList": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "VpcSecurityGroupMembership": {
                "description": "<p/>",
                "properties": {
                    "Status": {
                        "description": "The status of the VPC security group.",
                        "type": "string"
                    },
                    "VpcSecurityGroupId": {
                        "description": "The VPC security group Id.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "VpcSecurityGroupMembershipList": {
                "items": {
                    "description": "<p/>",
                    "properties": {
                        "Status": {
                            "description": "The status of the VPC security group.",
                            "type": "string"
                        },
                        "VpcSecurityGroupId": {
                            "description": "The VPC security group Id.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            }
        },
        "parameters": {
            "Action": {
                "in": "query",
                "name": "Action",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "Version": {
                "in": "query",
                "name": "Version",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Algorithm": {
                "in": "header",
                "name": "X-Amz-Algorithm",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Content-Sha256": {
                "in": "header",
                "name": "X-Amz-Content-Sha256",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Credential": {
                "in": "header",
                "name": "X-Amz-Credential",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Date": {
                "in": "header",
                "name": "X-Amz-Date",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Security-Token": {
                "in": "header",
                "name": "X-Amz-Security-Token",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Signature": {
                "in": "header",
                "name": "X-Amz-Signature",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-SignedHeaders": {
                "in": "header",
                "name": "X-Amz-SignedHeaders",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "securitySchemes": {
            "hmac": {
                "description": "Amazon Signature authorization v4",
                "in": "header",
                "name": "Authorization",
                "type": "apiKey",
                "x-amazon-apigateway-authtype": "awsSigv4"
            }
        }
    }
}